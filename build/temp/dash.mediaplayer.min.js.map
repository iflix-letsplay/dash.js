{"version":3,"sources":["../node_modules/grunt-browserify/node_modules/browser-pack/_prelude.js","../externals/base64.js","../externals/cea608-parser.js","../externals/xml2json.js","../index_mediaplayerOnly.js","../node_modules/codem-isoboxer/dist/iso_boxer.js","../node_modules/fast-deep-equal/index.js","../node_modules/grunt-browserify/node_modules/base64-js/lib/b64.js","../node_modules/grunt-browserify/node_modules/buffer/index.js","../node_modules/grunt-browserify/node_modules/buffer/node_modules/isarray/index.js","../node_modules/grunt-browserify/node_modules/core-util-is/lib/util.js","../node_modules/grunt-browserify/node_modules/events/events.js","../node_modules/grunt-browserify/node_modules/ieee754/index.js","../node_modules/grunt-browserify/node_modules/inherits/inherits_browser.js","../node_modules/grunt-browserify/node_modules/is-buffer/index.js","../node_modules/grunt-browserify/node_modules/process-nextick-args/index.js","../node_modules/grunt-browserify/node_modules/process/browser.js","../node_modules/grunt-browserify/node_modules/readable-stream/duplex-browser.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/grunt-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/grunt-browserify/node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js","../node_modules/grunt-browserify/node_modules/readable-stream/passthrough.js","../node_modules/grunt-browserify/node_modules/readable-stream/readable-browser.js","../node_modules/grunt-browserify/node_modules/readable-stream/transform.js","../node_modules/grunt-browserify/node_modules/readable-stream/writable-browser.js","../node_modules/grunt-browserify/node_modules/safe-buffer/index.js","../node_modules/grunt-browserify/node_modules/stream-browserify/index.js","../node_modules/grunt-browserify/node_modules/string_decoder/index.js","../node_modules/grunt-browserify/node_modules/util-deprecate/browser.js","../node_modules/imsc/src/main/js/doc.js","../node_modules/imsc/src/main/js/html.js","../node_modules/imsc/src/main/js/isd.js","../node_modules/imsc/src/main/js/main.js","../node_modules/imsc/src/main/js/names.js","../node_modules/imsc/src/main/js/styles.js","../node_modules/imsc/src/main/js/utils.js","../node_modules/sax/lib/sax.js","core/Debug.js","core/EventBus.js","core/FactoryMaker.js","core/Version.js","core/events/CoreEvents.js","core/events/Events.js","core/events/EventsBase.js","dash/DashAdapter.js","dash/DashHandler.js","dash/DashMetrics.js","dash/SegmentBaseLoader.js","dash/WebmSegmentBaseLoader.js","dash/constants/DashConstants.js","dash/controllers/RepresentationController.js","dash/models/DashManifestModel.js","dash/parser/DashParser.js","dash/parser/maps/CommonProperty.js","dash/parser/maps/MapNode.js","dash/parser/maps/RepresentationBaseValuesMap.js","dash/parser/maps/SegmentValuesMap.js","dash/parser/matchers/BaseMatcher.js","dash/parser/matchers/DateTimeMatcher.js","dash/parser/matchers/DurationMatcher.js","dash/parser/matchers/NumericMatcher.js","dash/parser/matchers/StringMatcher.js","dash/parser/objectiron.js","dash/utils/FragmentedTextBoxParser.js","dash/utils/ListSegmentsGetter.js","dash/utils/Round10.js","dash/utils/SegmentsGetter.js","dash/utils/SegmentsUtils.js","dash/utils/TemplateSegmentsGetter.js","dash/utils/TimelineConverter.js","dash/utils/TimelineSegmentsGetter.js","dash/vo/AdaptationSet.js","dash/vo/BaseURL.js","dash/vo/Event.js","dash/vo/EventStream.js","dash/vo/Mpd.js","dash/vo/Period.js","dash/vo/Representation.js","dash/vo/Segment.js","dash/vo/UTCTiming.js","streaming/FragmentLoader.js","streaming/ManifestLoader.js","streaming/ManifestUpdater.js","streaming/MediaPlayer.js","streaming/MediaPlayerEvents.js","streaming/PreBufferSink.js","streaming/SourceBufferSink.js","streaming/Stream.js","streaming/StreamProcessor.js","streaming/XlinkLoader.js","streaming/constants/Constants.js","streaming/constants/MetricsConstants.js","streaming/controllers/AbrController.js","streaming/controllers/BaseURLController.js","streaming/controllers/BlacklistController.js","streaming/controllers/BufferController.js","streaming/controllers/EventController.js","streaming/controllers/FragmentController.js","streaming/controllers/MediaController.js","streaming/controllers/MediaSourceController.js","streaming/controllers/PlaybackController.js","streaming/controllers/ScheduleController.js","streaming/controllers/StreamController.js","streaming/controllers/TimeSyncController.js","streaming/controllers/XlinkController.js","streaming/models/BaseURLTreeModel.js","streaming/models/FragmentModel.js","streaming/models/ManifestModel.js","streaming/models/MediaPlayerModel.js","streaming/models/MetricsModel.js","streaming/models/URIFragmentModel.js","streaming/models/VideoModel.js","streaming/net/FetchLoader.js","streaming/net/HTTPLoader.js","streaming/net/XHRLoader.js","streaming/rules/DroppedFramesHistory.js","streaming/rules/RulesContext.js","streaming/rules/SwitchRequest.js","streaming/rules/SwitchRequestHistory.js","streaming/rules/ThroughputHistory.js","streaming/rules/abr/ABRRulesCollection.js","streaming/rules/abr/AbandonRequestsRule.js","streaming/rules/abr/BolaRule.js","streaming/rules/abr/DroppedFramesRule.js","streaming/rules/abr/InsufficientBufferRule.js","streaming/rules/abr/SwitchHistoryRule.js","streaming/rules/abr/ThroughputRule.js","streaming/rules/scheduling/BufferLevelRule.js","streaming/rules/scheduling/NextFragmentRequestRule.js","streaming/text/EmbeddedTextHtmlRender.js","streaming/text/NotFragmentedTextBufferController.js","streaming/text/TextBufferController.js","streaming/text/TextController.js","streaming/text/TextSourceBuffer.js","streaming/text/TextTracks.js","streaming/thumbnail/ThumbnailController.js","streaming/thumbnail/ThumbnailTracks.js","streaming/utils/BaseURLSelector.js","streaming/utils/BoxParser.js","streaming/utils/Capabilities.js","streaming/utils/CustomTimeRanges.js","streaming/utils/DOMStorage.js","streaming/utils/EBMLParser.js","streaming/utils/ErrorHandler.js","streaming/utils/InitCache.js","streaming/utils/IsoFile.js","streaming/utils/LiveEdgeFinder.js","streaming/utils/ObjectUtils.js","streaming/utils/RequestModifier.js","streaming/utils/TTMLParser.js","streaming/utils/URLUtils.js","streaming/utils/VTTParser.js","streaming/utils/baseUrlResolution/BasicSelector.js","streaming/utils/baseUrlResolution/DVBSelector.js","streaming/vo/BitrateInfo.js","streaming/vo/DashJSError.js","streaming/vo/DataChunk.js","streaming/vo/FragmentRequest.js","streaming/vo/HeadRequest.js","streaming/vo/IsoBox.js","streaming/vo/IsoBoxSearchInfo.js","streaming/vo/ManifestInfo.js","streaming/vo/MediaInfo.js","streaming/vo/MetricsList.js","streaming/vo/RepresentationInfo.js","streaming/vo/StreamInfo.js","streaming/vo/TextRequest.js","streaming/vo/TextTrackInfo.js","streaming/vo/Thumbnail.js","streaming/vo/ThumbnailTrackInfo.js","streaming/vo/URIFragmentData.js","streaming/vo/metrics/BufferLevel.js","streaming/vo/metrics/BufferState.js","streaming/vo/metrics/DVRInfo.js","streaming/vo/metrics/DroppedFrames.js","streaming/vo/metrics/HTTPRequest.js","streaming/vo/metrics/ManifestUpdate.js","streaming/vo/metrics/PlayList.js","streaming/vo/metrics/RepresentationSwitch.js","streaming/vo/metrics/RequestsQueue.js","streaming/vo/metrics/SchedulingInfo.js","streaming/vo/metrics/TCPConnection.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","_dereq_","module","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","specialCea608CharsCodes","42","92","94","95","96","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","getCharForByte","byte","charCode","hasOwnProperty","NR_ROWS","NR_COLS","rowsLowCh1","17","18","21","22","23","16","19","20","rowsHighCh1","rowsLowCh2","25","26","29","30","31","24","27","28","rowsHighCh2","backgroundColors","logger","verboseFilter","DATA","DEBUG","INFO","WARNING","TEXT","ERROR","time","verboseLevel","setTime","newTime","this","log","severity","msg","minLevel","console","numArrayToHexArray","numArray","hexArray","j","toString","PenState","foreground","underline","italics","background","flash","prototype","reset","setStyles","styles","attribs","style","isDefault","equals","other","copy","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","Row","chars","pos","currPenState","equal","empty","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","char","clearFromPos","startPos","clear","clearToEndOfRow","getTextString","setPenStyles","CaptionScreen","rows","currRow","nrRollUpRows","setPen","setPAC","pacData","JSON","stringify","newRow","row","indent","prevPos","Math","max","color","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRowIndex","topRow","splice","asOneRow","displayText","text","rowNr","rowText","trim","getTextAndFormat","Cea608Channel","channelNumber","outputFilter","chNr","mode","verbose","displayedMemory","nonDisplayedMemory","lastOutputScreen","currRollUpRow","writeScreen","cueStartTime","modes","lastCueEndTime","getHandler","setHandler","newHandler","setMode","newMode","insertChars","screen","outputDataUpdate","cc_RCL","cc_BS","cc_AOF","cc_AON","cc_DER","cc_RU","cc_FON","cc_RDC","cc_TR","cc_RTD","cc_EDM","cc_CR","cc_ENM","cc_EOC","tmp","cc_TO","nrCols","cc_MIDROW","secondByte","colorIndex","floor","colors","updateData","newCue","cueSplitAtTime","Cea608Parser","field","out1","out2","outputs","channels","currChNr","lastCmdA","lastCmdB","bufferedData","startTime","lastTime","dataCounters","padding","cmd","index","addData","byteList","cmdFound","b","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","channel","cond1","cond2","case1","case2","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","hexCodes","findCea608Nalus","raw","size","nalSize","cursor","cea608NaluRanges","isCEA608SEI","payloadType","payloadSize","countryCode","getUint8","providerCode","getUint16","userIdentifier","getUint32","userDataTypeCode","extractCea608DataFromRange","cea608Range","fieldData","ccCount","ccValid","ccType","ccData1","ccData2","undefined","cea608parser","X2JS","config","initConfigDefaults","escapeMode","attributePrefix","arrayAccessForm","emptyNodeForm","enableToStringFunc","arrayAccessFormPaths","skipEmptyTextNodesForObj","stripWhitespaces","datetimeAccessFormPaths","useDoubleQuotes","xmlElementsFilter","jsonPropertiesFilter","keepCData","ignoreRoot","initRequiredPolyfills","getNodeLocalName","node","nodeLocalName","localName","baseName","nodeName","getNodePrefix","prefix","escapeXmlChars","str","replace","checkInStdFiltersArrayForm","stdFiltersArrayForm","obj","name","path","idx","filterPath","RegExp","test","toArrayAccessForm","childName","Array","fromXmlDateTime","prop","bits","split","d","Date","secondBits","setHours","setMilliseconds","offsetMinutes","Number","setMinutes","getMinutes","getTimezoneOffset","indexOf","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","checkFromXmlDateTimePaths","value","fullPath","checkXmlElementsFilter","childType","childPath","DOMNodeTypes","ELEMENT_NODE","parseDOMChildren","nodeType","DOCUMENT_NODE","result","Object","nodeChildren","childNodes","cidx","child","__cnt","children","COMMENT_NODE","__children","aidx","attributes","attr","value2","m","ml","matchers","matchobj","converter","nodePrefix","__prefix","__text","__cdata","TEXT_NODE","CDATA_SECTION_NODE","nodeValue","startTag","jsonObj","element","attrList","closed","resultStr","attrName","attrVal","substr","endTag","elementName","endsWith","suffix","jsonXmlSpecialElem","jsonObjField","Function","jsonXmlElemCount","elementsCnt","it","checkJsonObjPropertiesFilter","propertyName","jsonObjPath","parseJSONAttributes","ait","parseJSONTextAttrs","jsonTxtObj","parseJSONTextObject","getJsonPropertyPath","jsonPropName","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","toISOString","subObjElementsCnt","VERSION","parseXmlString","xmlDocStr","window","ActiveXObject","xmlDoc","DOMParser","parser","parseFromString","getElementsByTagNameNS","err","async","loadXML","asArray","toXmlDateTime","dt","asDateTime","xml2json","xml_str2json","json2xml_str","json2xml","getVersion","context","global","dashjs","MediaPlayer","_srcStreamingMediaPlayer2","FactoryMaker","_srcCoreFactoryMaker2","Debug","_srcCoreDebug2","Version","_srcCoreVersion","getVersionString","ISOBoxer","parseBuffer","arrayBuffer","ISOFile","parse","addBoxProcessor","type","ISOBox","_boxProcessors","createFile","createBox","parent","newBox","create","append","createFullBox","version","flags","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","byteLength","utf8ToByteArray","string","TextEncoder","appendBox","box","_offset","_cursor","offset","_root","_raw","_parent","boxes","Cursor","initialOffset","DataView","fetch","fetchAll","returnEarly","_sweep","write","getLength","bytes","_rawo","buffer","_parseBox","byteOffset","_boxContainers","_procField","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","fn","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s1","s2","pow","data","_incomplete","largesize","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","setInt8","setInt16","setInt32","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","pre","post","set","_writeUTF8String","entry_count","nbCompatibleBrands","language","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","range","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","sample","isArray","keyList","keys","hasProp","key","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","arr","L","placeHolders","len","Arr","uint8ToBase64","uint8","num","tripletToBase64","temp","extraBytes","output","toByteArray","fromByteArray","base64js","typedArraySupport","Bar","foo","constructor","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","arg","fromNumber","fromString","arguments","fromObject","that","allocate","checked","object","isBuffer","fromBuffer","fromArray","TypeError","ArrayBuffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","array","_augment","__proto__","_isBuffer","poolSize","rootParent","RangeError","SlowBuffer","subject","buf","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","Infinity","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","remaining","strLen","parsed","parseInt","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","slice","min","res","firstByte","codePoint","bytesPerSequence","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","apply","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","leadSurrogate","byteArray","hi","lo","src","dst","INSPECT_MAX_BYTES","compare","x","y","isEncoding","concat","list","item","inspect","match","val","arrayIndexOf","foundIndex","get","readUInt8","writeUInt8","isFinite","swap","toJSON","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","emit","er","handler","args","listeners","error","addListener","listener","newListener","warned","trace","on","once","g","removeListener","fired","position","removeAllListeners","listenerCount","emitter","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","isSlowBuffer","nextTick","arg1","arg2","arg3","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","title","browser","env","argv","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","Duplex","options","Readable","Writable","readable","allowHalfOpen","onend","_writableState","ended","pna","onEndNT","self","objectKeys","util","inherits","method","defineProperty","highWaterMark","_readableState","destroyed","_destroy","cb","PassThrough","Transform","_transform","chunk","_uint8ArrayToBuffer","from","_isUint8Array","OurUint8Array","event","unshift","ReadableState","stream","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","StringDecoder","_read","destroy","Stream","readableAddChunk","addToFront","skipChunkCheck","state","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","head","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","shift","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","p","next","nb","tail","allocUnsafe","endReadable","endReadableNT","xs","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","setEncoding","enc","nOrig","doRead","pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","cleanup","onclose","onfinish","ondrain","onerror","unpipe","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","ev","wrap","_this","paused","bind","_fromList","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","flush","_flush","prefinish","done","_write","_this2","err2","CorkedRequest","finish","onCorkedFinish","nop","WritableState","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","realHasInstance","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","last","callback","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","need","endWritable","corkReq","setImmediate","internalUtil","deprecate","getBuffer","current","_","Symbol","hasInstance","cork","uncork","setDefaultEncoding","_classCallCheck","instance","Constructor","copyBuffer","alloc","custom","readableDestroyed","writableDestroyed","emitErrorNT","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","copyProps","SafeBuffer","encodingOrOffset","allocUnsafeSlow","EE","source","didOnEnd","_isStdio","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","substring","cr","deprecated","warn","localStorage","imscDoc","sax","imscNames","imscStyles","imscUtils","resolveTiming","doc","prev_sibling","isinseq","timeContainer","implicit_begin","begin","explicit_begin","implicit_end","set_i","sets","content_i","contents","POSITIVE_INFINITY","explicit_end","explicit_dur","_registerEvent","ForeignElement","TT","events","body","Head","styling","layout","Styling","Style","id","styleAttrs","styleRefs","Layout","regions","ContentElement","kind","IdentifiedElement","LayoutElement","regionID","StyledElement","AnimatedElement","ContainerElement","TimedElement","Body","Div","P","Span","AnonymousSpan","Br","Region","Set","elementGetXMLID","elementGetRegionID","region","elementGetTimeContainer","errorHandler","tc","reportError","elementGetStyleRefs","elementGetStyles","qname","uri","local","sa","byQName","byName","zIndex","reportWarning","findAttribute","ns","extractAspectRatio","ar","ns_ittp","rslt","ASPECT_RATIO_RE","exec","w","h","extractCellResolution","ns_ttp","CELL_RESOLUTION_RE","extractFrameAndTickRate","fps_attr","fps","frm_attr","frm","efps","tr","trattr","effectiveFrameRate","tickRate","extractExtent","ns_tts","parseLength","parseTimeExpression","CLOCK_TIME_FRACTION_RE","CLOCK_TIME_FRAMES_RE","OFFSET_FRAME_RE","OFFSET_TICK_RE","OFFSET_MS_RE","OFFSET_S_RE","OFFSET_H_RE","OFFSET_M_RE","parseFloat","processTiming","dur","mergeChainedStyles","sref","mergeStylesIfNotPresent","mergeReferencedStyles","stylerefs","styleattrs","from_styles","into_styles","sname","reportFatal","fatal","searchval","cur","curval","found","fromXML","xmlstring","metadataHandler","xmlns","estack","xmllangstack","xmlspacestack","metadata_depth","onclosetag","sid","cs","ns_tt","onCloseTag","ontext","initFromText","onText","onopentag","xmlspace","xmllang","line","column","initFromNode","st","attrs","onOpenTag","close","hasRegions","dr","createDefaultRegion","region_i","cellResolution","frtr","aspectRatio","pxDimensions","unit","elem","b_i","e_i","getMediaTimeRange","getMediaTimeEvents","space","imscHTML","processElement","dom_parent","isd_element","document","createElement","margin","STYLING_MAP_DEFS","sm","map","proc_e","wdir","writingMode","ipd","bpd","lp","linePadding","paddingLeft","paddingRight","paddingTop","paddingBottom","mra","multiRowAlign","display","textAlign","appendChild","fillLineGap","flg","span","textContent","k","linelist","constructLineList","applyMultiRowAlign","applyLinePadding","par_edges","rect2edges","getBoundingClientRect","applyFillLineGap","before","after","enableRollUp","displayAlign","rid","rb","RegionPBuffer","currentISDState","previousISDState","plist","body_elem","firstElementChild","bottom","transition","lineList","elements","se","start_elem","ee","end_elem","marginLeft","marginRight","marginTop","backgroundColor","bgcolor","marginBottom","br","lastnode","parentElement","insertBefore","nextSibling","par_before","par_after","sign","frontier","pad","ceil","rect","edges","top","left","right","llist","curbgcolor","childElementCount","height","width","isSameLine","bpd_dir","ipd_dir","firstChild","Node","before1","after1","before2","after2","HTMLStylingMapDefintion","qName","mapFunc","render","isd","imgResolver","eheight","ewidth","displayForcedOnlyMode","clientHeight","clientWidth","twidth","round","rootcontainer","regionH","regionW","dom_element","direction","flexDirection","justifyContent","hdelta","wdelta","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","opacity","overflow","ta","textDecoration","textShadow","thickness","ub","unicodeBidi","visibility","whiteSpace","img","STYLMAP_BY_QNAME","imscISD","isdProcessContentElement","inherited_region_id","associated_region_id","ISDContentElement","spec_attr","wm","all","ps","es","outs","inherit","ivs","initial","z","compute","cstyle","qnameb","applies","trimmedspan","elist","constructSpanList","br_pos","pruneEmptySpans","backgroundImage","showBackground","region_id","ISD","tt","ttelem","generateISD","renderHTML","ns_xml","ns_itts","ns_smpte","ns_ebutts","StylingAttributeDefinition","initialValue","appliesTo","isInherit","isAnimatable","parseFunc","computeFunc","animatable","parseColor","ffs","fs","lh","extent","HEX_COLOR_RE","DEC_COLOR_RE","DEC_COLORA_RE","NAMED_COLOR","transparent","black","silver","gray","white","maroon","red","purple","fuchsia","magenta","green","lime","olive","yellow","navy","blue","teal","aqua","cyan","LENGTH_RE","SAXParser","strict","opt","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","tag","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","rootNS","trackPosition","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","script","flushBuffers","createStream","SAXStream","_parser","me","_decoder","streamWraps","forEach","charClass","reduce","is","charclass","not","textNode","textopts","normalize","strictFail","BEGIN_WHITESPACE","message","newTag","tagName","attribute","qualName","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","nv","isSelfClosing","SCRIPT","closeTag","closeTo","parseEntity","entity","entityLC","numStr","fromCodePoint","beginWhiteSpace","OPEN_WAKA","startTagPosition","whitespace","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","toUpperCase","CDATA","COMMENT","comment","DOCTYPE","doctype","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","entityBody","entityStart","EVENTS","F","ex","filter","SD","number","letter","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","setup","showLogTimestamp","showCalleeName","logLevel","LOG_LEVEL_WARNING","logFn","LOG_LEVEL_FATAL","getLogFn","LOG_LEVEL_ERROR","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","getLogger","setLogLevel","getLogLevel","setLogTimestampVisible","setCalleeNameVisible","setLogToBrowserConsole","LOG_LEVEL_NONE","getLogToBrowserConsole","params","_len","_key","doLog","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","level","logTime","getClassName","getType","_len6","_key6","eventBus","trigger","_eventsEvents2","LOG","_EventBus2","getInstance","__dashjs_factory_name","factory","_FactoryMaker2","getSingletonFactory","updateSingletonFactory","EventBus","scope","priority","EVENT_PRIORITY_LOW","getHandlerIdx","handlers","some","payload","EVENT_PRIORITY_HIGH","extend","childInstance","override","getSingletonInstance","className","singletonContexts","setSingletonInstance","getFactoryByName","factoriesArray","updateFactory","updateClassFactory","classFactories","getClassFactoryByName","getClassFactory","classConstructor","merge","singletonFactories","getSingletonFactoryByName","classInstance","extensionObject","extension","CoreEvents","_EventsBase","_get","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","BYTES_APPENDED_END_FRAGMENT","CHECK_FOR_EXISTENCE_COMPLETED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","LOADING_DATA_PROGRESS","LOADING_ABANDONED","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_ADD","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","TEXT_TRACKS_QUEUE_INITIALIZED","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","VIDEO_CHUNK_RECEIVED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","EventsBase","publicOnly","evt","DashAdapter","setConfig","dashManifestModel","getRepresentationForRepresentationInfo","representationInfo","representationController","getRepresentationForQuality","quality","getAdaptationForMediaInfo","mediaInfo","streamInfo","voAdaptations","getPeriodForStreamInfo","voPeriodsArray","ln","voPeriod","convertRepresentationToRepresentationInfo","voRepresentation","_streamingVoRepresentationInfo2","realAdaptation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","realRepresentation","getRepresentationFor","bandwidth","getBandwidth","DVRWindow","segmentAvailabilityRange","fragmentDuration","segmentDuration","segments","duration","MSETimeOffset","useCalculatedLiveEdgeTime","convertAdaptationToMediaInfo","_streamingVoMediaInfo2","viewpoint","convertPeriodToStreamInfo","representationCount","getRepresentationCount","getLanguageForAdaptation","getViewpointForAdaptation","accessibility","getAccessibilityForAdaptation","accessibilityValue","accessibilityData","schemeIdUri","search","_externalsCea608Parser2","embeddedCaptions","audioChannelConfiguration","getAudioChannelConfigurationForAdaptation","roles","getRolesForAdaptation","role","codec","getCodec","mimeType","getMimeType","contentProtection","getContentProtectionData","bitrateList","getBitrateListForAdaptation","KID","getKID","isText","getIsTextTrack","convertVideoInfoToEmbeddedTextInfo","_streamingConstantsConstants2","EMBEDDED_TEXT","isEmbedded","convertVideoInfoToThumbnailInfo","IMAGE","_streamingVoStreamInfo2","manifestInfo","convertMpdToManifestInfo","isLast","_streamingVoManifestInfo2","DVRWindowSize","timeShiftBufferDepth","loadedTime","availableFrom","availabilityStartTime","minBufferTime","maxFragmentDuration","maxSegmentDuration","getDuration","isDynamic","getIsDynamic","getMediaInfoForType","voPeriods","getAdaptationForType","selectedVoPeriod","periodId","getIndexForAdaptation","getAdaptationsForPeriod","getAllMediaInfoForType","externalManifest","voLocalPeriods","mediaArr","media","checkSetConfigCall","getMpd","getRegularPeriods","adaptationsForType","getAdaptationsForType","VIDEO","accessibilityLength","parts","CC1","updatePeriods","newManifest","getStreamsInfo","maxStreamsInfo","streams","checkStreamProcessor","streamProcessor","checkRepresentationController","checkQuality","getInitRequest","representation","indexHandler","getRepresentationController","getIndexHandler","getNextFragmentRequest","getNextSegmentRequest","getFragmentRequestForTime","getSegmentRequestForTime","generateFragmentRequestForTime","generateSegmentRequestForTime","getIndexHandlerTime","getCurrentTime","setIndexHandlerTime","setCurrentTime","getStreamInfo","getMediaInfo","voAdaptation","getAdaptationForId","getAdaptationForIndex","getRepresentationInfoForQuality","getCurrentRepresentationInfo","getCurrentRepresentation","getEvent","eventBox","eventStreams","_voEvent2","scheme_id_uri","timescale","presentationTimeDelta","presentation_time_delta","event_duration","messageData","message_data","presentationTime","eventStream","getEventsFor","getEventsForPeriod","getEventStreamForAdaptationSet","getEventStreamForRepresentation","convertDataToRepresentationInfo","getDataForMedia","_coreFactoryMaker2","DashHandler","_coreDebug2","resetInitialSettings","segmentBaseLoader","isWebM","_WebmSegmentBaseLoader2","_SegmentBaseLoader2","baseURLController","metricsModel","mediaPlayerModel","errHandler","_coreEventsEvents2","onInitializationLoaded","onSegmentsLoaded","initialize","StreamProcessor","segmentsGetter","_utilsSegmentsGetter2","getStreamProcessor","currentTime","getEarliestTime","earliestTime","requestedTime","setRequestUrl","request","destination","baseURL","resolve","url","serviceLocation","urlUtils","isRelative","generateInitRequest","mediaType","_streamingVoFragmentRequest2","presentationStartTime","_streamingVoMetricsHTTPRequest","HTTPRequest","INIT_SEGMENT_TYPE","timelineConverter","calcAvailabilityStartTimeFromPresentationTime","availabilityEndTime","calcAvailabilityEndTimeFromPresentationTime","representationId","initialization","isMediaFinished","isFinished","availableSegmentsNumber","seg","_utilsSegmentsUtils","getSegmentByIndex","toFixed","segmentInfoType","_constantsDashConstants2","SEGMENT_TIMELINE","updateSegments","getSegments","onSegmentListUpdated","getExpectedLiveEdge","lastSegment","liveEdge","metrics","getMetricsFor","STREAM","setExpectedLiveEdge","updateManifestUpdateInfo","dashMetrics","getCurrentManifestUpdate","updateSegmentList","updateRepresentation","keepIdx","hasInitialization","_voRepresentation2","hasSegments","calcSegmentAvailabilityRange","_streamingVoDashJSError2","SEGMENTS_UNAVAILABLE_ERROR_CODE","availabilityDelay","sender","loadInitialization","loadSegments","indexRange","getIndexForSegments","timeThreshold","frag","ft","fd","getSegmentOverlapToleranceTime","availabilityIdx","getRequestForSegment","segment","Representation_asArray","replaceTokenForTemplate","replacementNumber","replacementTime","replaceIDForTemplate","unescapeDollarsInTemplate","MEDIA_SEGMENT_TYPE","mediaRange","wallStartTime","adaptationIndex","ignoreIsFinished","action","ACTION_COMPLETE","step","fragments","getTimeBasedSegment","_coreEventBus2","_streamingUtilsURLUtils2","DashMetrics","getBandwidthForRepresentation","findRepresentation","manifestModel","getValue","getIndexForRepresentation","periodIdx","findRepresentationIndex","getMaxIndexForBufferType","bufferType","findMaxBufferIndex","getCurrentRepresentationSwitch","getCurrent","_streamingConstantsMetricsConstants2","TRACK_SWITCH","getLatestBufferLevelVO","BUFFER_LEVEL","getCurrentBufferLevel","vo","_utilsRound102","round10","getRequestsQueue","RequestsQueue","getCurrentHttpRequest","httpList","HttpList","currentHttpList","httpListLength","httpListLastIndex","responsecode","getHttpRequests","metricName","getCurrentDroppedFrames","DROPPED_FRAMES","getCurrentSchedulingInfo","SCHEDULING_INFO","MANIFEST_UPDATE","getCurrentDVRInfo","DVR_INFO","getLatestMPDRequestHeaderValueByID","headers","httpRequestList","httpRequest","MPD_TYPE","parseResponseHeaders","_responseHeaders","getLatestFragmentRequestHeaderValueByID","headerStr","headerPairs","ilen","headerPair","returnIndex","adaptationSet","adaptationSetArray","representationArray","adaptationSetArrayIndex","representationArrayIndex","adaptationIsType","getIsTypeOf","SegmentBaseLoader","boxParser","_streamingUtilsBoxParser2","requestModifier","_streamingUtilsRequestModifier2","httpLoader","_streamingNetHTTPLoader2","loadingInfo","initRange","isoFile","baseUrl","init","searching","bytesLoaded","bytesToLoad","getFragmentRequest","onload","response","findInitRange","load","success","onLoaded","sidx","hasRange","loadedLength","getBox","isComplete","ref","references","loadMultiSidx","ss","segs","tmpCallback","getSegmentsForSidx","lastBox","getLastBox","abort","refs","earliest_presentation_time","first_offset","subsegment_duration","_voSegment2","ftyp","moov","WebmSegmentBaseLoader","WebM","EBML","required","Segment","SeekHead","Info","TimecodeScale","Duration","Tracks","Cues","CuePoint","CueTime","CueTrackPositions","CueTrack","CueClusterPosition","Void","parseCues","ab","cues","cue","cueTrack","ebmlParser","_streamingUtilsEBMLParser2","consumeTagAndSize","moreData","parseTag","CueTracks","consumeTag","cueTrackPositionSize","getMatroskaCodedNum","getPos","Track","ClusterPosition","setPos","parseSegments","segmentStart","segmentEnd","parseEbmlHeader","theRange","skipOverElement","infoTag","infoElementSize","onloadend","DashConstants","BASE_URL","SEGMENT_BASE","SEGMENT_TEMPLATE","SEGMENT_LIST","SEGMENT_URL","SEGMENT_PROFILES","ADAPTATION_SET","REPRESENTATION","REPRESENTATION_INDEX","SUB_REPRESENTATION","INITIALIZATION","INITIALIZATION_MINUS","MPD","PERIOD","ASSET_IDENTIFIER","EVENT_STREAM","ID","PROFILES","SERVICE_LOCATION","RANGE","INDEX","MEDIA","BYTE_RANGE","INDEX_RANGE","MEDIA_RANGE","VALUE","CONTENT_TYPE","MIME_TYPE","BITSTREAM_SWITCHING","BITSTREAM_SWITCHING_MINUS","CODECS","DEPENDENCY_ID","MEDIA_STREAM_STRUCTURE_ID","METRICS","METRICS_MINUS","REPORTING","WIDTH","HEIGHT","SAR","FRAMERATE","AUDIO_SAMPLING_RATE","MAXIMUM_SAP_PERIOD","START_WITH_SAP","MAX_PLAYOUT_RATE","CODING_DEPENDENCY","SCAN_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","INBAND_EVENT_STREAM","ACCESSIBILITY","ROLE","RATING","CONTENT_COMPONENT","SUBSET","LANG","VIEWPOINT","ROLE_ASARRAY","ACCESSIBILITY_ASARRAY","AUDIOCHANNELCONFIGURATION_ASARRAY","CONTENTPROTECTION_ASARRAY","MAIN","DYNAMIC","MEDIA_PRESENTATION_DURATION","MINIMUM_UPDATE_PERIOD","CODEC_PRIVATE_DATA","BANDWITH","SOURCE_URL","TIMESCALE","DURATION","START_NUMBER","PRESENTATION_TIME_OFFSET","AVAILABILITY_START_TIME","AVAILABILITY_END_TIME","TIMESHIFT_BUFFER_DEPTH","MAX_SEGMENT_DURATION","PRESENTATION_TIME","MIN_BUFFER_TIME","MAX_SUBSEGMENT_DURATION","START","AVAILABILITY_TIME_OFFSET","AVAILABILITY_TIME_COMPLETE","CENC_DEFAULT_KID","DVB_PRIORITY","DVB_WEIGHT","constants","RepresentationController","QUALITY_CHANGE_REQUESTED","onQualityChanged","onRepresentationUpdated","onWallclockTimeUpdated","onBufferLevelUpdated","MANIFEST_VALIDITY_CHANGED","onManifestValidityChanged","abrController","domStorage","playbackController","getData","getDataIndex","realAdaptationIndex","isUpdating","updating","currentVoRepresentation","voAvailableRepresentations","newRealAdaptation","maxQuality","getTopQualityIndexFor","minIdx","getMinAllowedIndexFor","averageThroughput","bitrate","updateRepresentations","FRAGMENTED_TEXT","getQualityFor","getThroughputHistory","getAverageThroughput","getInitialBitrateFor","getQualityForBitrate","AUDIO","currentRepresentation","addRepresentationSwitch","now","currentVideoTimeMs","addDVRMetric","addDVRInfo","getQualityForRepresentation","isAllRepresentationsUpdated","getRepresentationsForAdaptation","updateAvailabilityWindow","resetAvailabilityWindow","rep","postponeUpdate","postponeTimePeriod","delay","update","AST_IN_FUTURE","streamMetrics","manifestUpdateInfo","alreadyAdded","repInfo","repSwitch","ignorePostponeTimePeriod","segmentAvailabilityTimePeriod","computeLiveDelay","SEGMENTS_UPDATE_FAILED_ERROR_CODE","addManifestUpdateRepresentationInfo","presentationTimeOffset","startNumber","setPlaybackQuality","latency","doNotUpdateDVRWindowOnBufferUpdated","oldQuality","newQuality","setSavedBitrateSettings","newDuration","DashManifestModel","col","mimeTypeRegEx","codecs","ContentComponent_asArray","STPP","WVTT","MUXED","contentType","getIsAudio","getIsVideo","getIsFragmentedText","getIsText","getIsMuxed","getIsImage","Viewpoint","Role_asArray","Accessibility_asArray","AudioChannelConfiguration_asArray","getIsMain","getRepresentationSortFunction","processAdaptation","sort","periodIndex","realAdaptations","isInteger","objectUtils","_streamingUtilsObjectUtils2","areEqual","realAdaptationSet","adaptations","currentTrack","mediaController","getCurrentTrackFor","allMediaInfoForType","adapter","isTracksEqual","addResolutionInfo","ContentProtection_asArray","hasProfile","profile","has","profiles","getIsDVB","PROFILE_DVB","mediaPresentationDuration","MAX_SAFE_INTEGER","MAX_VALUE","getManifestUpdatePeriod","latencyOfLastUpdate","minimumUpdatePeriod","scanType","getEssentialPropertiesForRepresentation","EssentialProperty_asArray","getRealAdaptationFor","periodArray","isLastRepeatAttributeValid","segmentTimeline","S_asArray","getUseCalculatedLiveEdgeTimeForAdaptation","segmentInfo","SegmentList","SegmentTimeline","SegmentTemplate","voRepresentations","processedRealAdaptation","baseUrls","getBaseURLsFromElement","codecPrivateData","maxPlayoutRate","SegmentBase","essentialProperties","Initialization","sourceURL","availabilityTimeOffset","availabilityTimeComplete","calcMSETimeOffset","realPeriod","voAdaptationSet","_voAdaptationSet2","realPreviousPeriod","voPreviousPeriod","_voPeriod2","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","_voMpd2","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","periodEnd","EventStream_asArray","_voEventStream2","SCHEME_ID_URI","Event_asArray","_event","getEventStreams","inbandStreams","adaptationArray","InbandEventStream_asArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","utcTiming","_voUTCTiming2","entries","BaseURL_asArray","baseUri","earlyReturn","_voBaseURL2","dvb_priority","dvb_weight","getLocation","LOCATION","Location","Location_asArray","DashParser","_matchersDurationMatcher2","_matchersDateTimeMatcher2","_matchersNumericMatcher2","_matchersStringMatcher2","_externalsXml2json2","objectIron","_objectiron2","adaptationset","_mapsRepresentationBaseValuesMap2","_mapsSegmentValuesMap2","getMatchers","getIron","performance","jsonTime","ironedTime","toPrecision","CommonProperty","getDefaultMergeForName","_name","_merge","MapNode","properties","_properties","_children","_CommonProperty2","RepresentationBaseValuesMap","_MapNode","commonProperties","_MapNode3","SegmentValuesMap","BaseMatcher","_test","_converter","SECONDS_IN_MIN","MINUTES_IN_HOUR","MILLISECONDS_IN_SECONDS","datetimeRegex","DateTimeMatcher","_BaseMatcher","utcDate","timezoneOffset","durationRegex","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","DurationMatcher","attributeList","START_TIME","numericRegex","NumericMatcher","StringMatcher","stringAttrsInElements","_stringAttrsInElements","_defineProperty","attrNames","ObjectIron","mappers","mergeValues","parentItem","childItem","mapProperties","property","parentValue","childValue","mapItem","len2","childNode","periodMapper","periods","adaptationSets","adaptationSetMapper","_i","FragmentedTextBoxParser","getSamplesInfo","sampleList","lastSequenceNumber","totalDuration","numSequences","moofBoxes","getBoxes","mfhdBoxes","sampleDuration","sampleCompositionTimeOffset","sampleCount","sampleSize","sampleDts","dataOffset","sequence_number","subsIndex","nextSubsSample","moofBox","trafBoxes","getChildBoxes","trafBox","tfhdBox","getChildBox","tfdtBox","baseMediaDecodeTime","trunBoxes","subsBoxes","trunBox","base_data_offset","data_offset","samples","sample_duration","default_sample_duration","sample_size","default_sample_size","sample_composition_time_offset","sampleData","dts","cts","subSizes","subsBox","sample_delta","subsamples","subsample_size","getMediaTimescaleFromMoov","mdhdBox","ListSegmentsGetter","getSegmentsFromList","availabilityUpperLimit","SegmentURL_asArray","periodSegIdx","startIdx","endIdx","_SegmentsUtils","decideSegmentListRangeForTemplate","getIndexBasedSegment","_decimalAdjust","exp","Round10","SegmentsGetter","timelineSegmentsGetter","_TimelineSegmentsGetter2","templateSegmentsGetter","_TemplateSegmentsGetter2","listSegmentsGetter","_ListSegmentsGetter2","onSegmentListUpdatedCallback","isSegmentListUpdateRequired","updateRequired","upperIdx","lowerIdx","zeroPadToLength","minStrLength","getNumberForSegment","segmentIndex","token","formatTag","endPos","formatTagPos","specifier","paddedValue","tokenLen","formatTagLen","presentationEndTime","mediaStartTime","calcMediaTimeFromPresentationTime","calcWallTimeForSegment","fTimescale","tManifest","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","givenAvailabilityUpperLimit","availabilityWindow","periodRelativeRange","calcPeriodRelativeTimeFromMpdRelativeTime","currentSegmentList","availabilityLowerLimit","originAvailabilityTime","originSegment","isTimeSyncCompleted","TemplateSegmentsGetter","getSegmentsFromTemplate","template","segmentRange","TimelineConverter","onTimeSyncComplete","isClientServerTimeSyncCompleted","setTimeSyncCompleted","getClientTimeOffset","clientServerTimeShift","setClientTimeOffset","expectedLiveEdge","calcAvailabilityTimeFromPresentationTime","calculateEnd","calcPresentationTimeFromWallTime","wallTime","mediaTime","displayStartTime","endOffset","mpdRelativeTime","presentationOffset","TimelineSegmentsGetter","checkConfig","getSegmentsFromTimeline","base","timeline","isAvailableSegmentNumberCalculated","maxSegmentsAhead","requiredMediaTime","repeat","repeatEndTime","nextFrag","hasEnoughSegments","createSegment","availabilityEnd","AdaptationSet","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","BaseURL","weight","Event","EventStream","adaptionSet","Mpd","Period","Representation","UTCTiming","FragmentLoader","_netHTTPLoader2","useFetch","getLowLatencyEnabled","checkForExistence","report","exists","headRequest","_voHeadRequest2","progress","statusText","errorText","_voDashJSError2","FRAGMENT_LOADER_ERROR_LOADING_FAILURE","FRAGMENT_LOADER_ERROR_NULL_REQUEST","FRAGMENT_LOADER_MESSAGE_NULL_REQUEST","ManifestLoader","onXlinkReady","xlinkController","_controllersXlinkController2","createParser","mssHandler","createMssParser","registerEvents","_dashParserDashParser2","_voTextRequest2","_voMetricsHTTPRequest","textStatus","responseURL","actualUrl","parseBaseUrl","location","href","MANIFEST_LOADER_ERROR_PARSING_FAILURE","setMatchers","setIron","originalUrl","_constantsConstants2","resolveManifestOnLoad","MANIFEST_LOADER_MESSAGE_PARSING_FAILURE","MANIFEST_LOADER_ERROR_LOADING_FAILURE","_utilsURLUtils2","ManifestUpdater","manifestLoader","onStreamsComposed","PLAYBACK_STARTED","onPlaybackStarted","PLAYBACK_PAUSED","onPlaybackPaused","onManifestLoaded","setManifest","refreshDelay","stopManifestRefreshTimer","refreshTimer","clearInterval","startManifestRefreshTimer","onRefreshTimer","refreshManifest","setValue","date","getScheduleWhilePaused","getManifestUpdateRetryInterval","manifestError","mediaPlayerInitialized","playbackInitialized","streamingInitialized","autoPlay","protectionController","protectionData","_MediaPlayerEvents2","_modelsMediaPlayerModel2","videoModel","_modelsVideoModel2","capabilities","streamController","view","AutoPlay","_utilsCapabilities2","_utilsErrorHandler2","supportsMediaSource","capabilityError","_dashUtilsTimelineConverter2","_controllersAbrController2","_controllersPlaybackController2","_controllersMediaController2","_dashDashAdapter2","_dashModelsDashManifestModel2","_modelsManifestModel2","_dashDashMetrics2","_modelsMetricsModel2","textController","_textTextController2","_utilsDOMStorage2","restoreDefaultUTCTimingSources","setAutoPlay","attachView","attachSource","metricsReportingController","isReady","getElement","_coreVersion","getDebug","preload","SOURCE_NOT_ATTACHED_ERROR","initializePlayback","play","PLAYBACK_NOT_INITIALIZED_ERROR","seek","MEDIA_PLAYER_BAD_ARGUMENT_ERROR","getDVRSeekOffset","isSeeking","setPlaybackRate","ELEMENT_NOT_ATTACHED_ERROR","getVideoElement","playbackRate","getPlaybackRate","setCatchUpPlaybackRate","PLAYBACK_CATCHUP_RATE_BAD_ARGUMENT_ERROR","getCatchUpPlaybackRate","setMute","muted","isMuted","setVolume","volume","getVolume","getBufferLength","types","getDashMetrics","getTracksFor","getDVRWindowSize","metric","getDVRInfoMetric","liveDelay","getLiveDelay","streamId","getTimeRelativeToStreamId","timeAsUTC","getAsUTC","durationAsUTC","setMaxAllowedBitrateFor","setMinAllowedBitrateFor","getMaxAllowedBitrateFor","getTopBitrateInfoFor","STREAMING_NOT_INITIALIZED_ERROR","getMinAllowedBitrateFor","setMaxAllowedRepresentationRatioFor","getMaxAllowedRepresentationRatioFor","activeStream","getActiveStream","thumbnailController","getThumbnailController","getCurrentTrackIndex","getActiveStreamInfo","setQualityFor","setTrackByIndex","updatePortalSize","setElementSize","setWindowResizeEventCalled","getLimitBitrateByPortal","setLimitBitrateByPortal","getUsePixelRatioInLimitBitrateByPortal","setUsePixelRatioInLimitBitrateByPortal","setInitialBitrateFor","setInitialRepresentationRatioFor","getInitialRepresentationRatioFor","getAutoSwitchQualityFor","getAutoSwitchBitrateFor","setAutoSwitchQualityFor","setAutoSwitchBitrateFor","getUseDeadTimeLatencyForAbr","getUseDeadTimeLatency","setUseDeadTimeLatencyForAbr","useDeadTimeLatency","setUseDeadTimeLatency","getAutoPlay","setLiveDelayFragmentCount","setLiveDelay","getCurrentLiveLatency","MEDIA_PLAYER_NOT_INITIALIZED_ERROR","useSuggestedPresentationDelay","setUseSuggestedPresentationDelay","enableLastBitrateCaching","enable","ttl","setLastBitrateCachingInfo","enableLastMediaSettingsCaching","setLastMediaSettingsCachingInfo","setScheduleWhilePaused","setFastSwitchEnabled","getFastSwitchEnabled","setABRStrategy","ABR_STRATEGY_DYNAMIC","ABR_STRATEGY_BOLA","ABR_STRATEGY_THROUGHPUT","getABRStrategy","useDefaultABRRules","setUseDefaultABRRules","addABRCustomRule","rulename","rule","removeABRCustomRule","removeAllABRCustomRule","setMovingAverageMethod","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","getMovingAverageMethod","setLowLatencyEnabled","addUTCTimingSource","removeUTCTimingSource","_dashVoUTCTiming2","UTCTimingSources","clearDefaultUTCTimingSources","setUTCTimingSources","DEFAULT_UTC_TIMING_SOURCE","scheme","enableManifestDateHeaderTimeSource","setUseManifestDateHeaderTimeSource","setBufferToKeep","setBufferAheadToKeep","setBufferPruningInterval","setStableBufferTime","getStableBufferTime","setBufferTimeAtTopQuality","getBufferTimeAtTopQuality","setBufferTimeAtTopQualityLongForm","getBufferTimeAtTopQualityLongForm","setLongFormContentDurationThreshold","setSegmentOverlapToleranceTime","setCacheLoadThresholdForType","setBandwidthSafetyFactor","getBandwidthSafetyFactor","throughputHistory","setAbandonLoadTimeout","setFragmentLoaderRetryAttempts","setFragmentRetryAttempts","setFragmentLoaderRetryInterval","setFragmentRetryInterval","setManifestLoaderRetryAttempts","setManifestRetryAttempts","setManifestLoaderRetryInterval","setManifestRetryInterval","setXHRWithCredentialsForType","getXHRWithCredentialsForType","setJumpGaps","getJumpGaps","setSmallGapLimit","getSmallGapLimit","setManifestUpdateRetryInterval","getReadOnlyMetricsFor","setTextDefaultLanguage","getTextDefaultLanguage","setTextDefaultEnabled","getTextDefaultEnabled","enableText","enableForcedTextStreaming","isTextEnabled","setTextTrack","getCurrentTextTrackIndex","getCurrentTrackIdx","displayCaptionsOnTop","textTracks","_textTextTracks2","displayCConTop","getVideoContainer","attachVideoContainer","container","setVideoContainer","setElement","detectProtection","detectMetricsReporting","detectMss","switchToVideoElement","resetPlaybackControllers","getTTMLRenderingDiv","attachTTMLRenderingDiv","div","setTTMLRenderingDiv","getBitrateInfoListFor","getBitrateListFor","getStreamsFromManifest","getTracksForTypeFromManifest","setInitialMediaSettingsFor","setInitialSettings","getInitialMediaSettingsFor","getInitialSettings","setCurrentTrack","track","setTrack","getTrackSwitchModeFor","getSwitchMode","setTrackSwitchModeFor","setSwitchMode","setSelectionModeForInitialTrack","getSelectionModeForInitialTrack","getProtectionController","attachProtectionController","setProtectionData","getThumbnail","getStreamForTime","timeInPeriod","getId","retrieveManifest","createManifestLoader","_modelsURIFragmentModel2","getSource","urlOrManifest","formatUTC","locales","hour12","withDate","toLocaleDateString","toLocaleTimeString","convertToTimeCode","parentNameString","createPlaybackControllers","_controllersStreamController2","createAbrRulesCollection","_ManifestLoader2","_utilsRequestModifier2","Protection","protection","createProtectionSystem","_externalsBase642","MetricsReporting","metricsReporting","createMetricsReporting","mediaElement","metricsConstants","_constantsMetricsConstants2","MssHandler","initSegmentType","_codemIsoboxer2","valToConvert","getStreamById","loadWithManifest","MediaPlayerEvents","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","FRAGMENT_LOADING_COMPLETED","FRAGMENT_LOADING_PROGRESS","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","SOURCE_INITIALIZED","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","TTML_TO_PARSE","CAN_PLAY","PLAYBACK_CATCHUP_START","PLAYBACK_CATCHUP_END","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_SEEK_ASKED","PLAYBACK_STALLED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","mediaPlayerEvents","PreBufferSink","onAppendedCallback","chunks","outstandingInit","onAppended","segmentType","remove","getAllBufferRanges","ranges","timeranges","updateTimestampOffset","discharge","getChunksAt","SourceBufferSink","mediaSource","oldBuffer","isAppendingInProgress","addSourceBuffer","CHECK_INTERVAL","addEventListener","updateEndHandler","intervalId","setInterval","checkIsUpdateEnded","getTextSourceBuffer","keepBuffer","removeEventListener","removeSourceBuffer","appendQueue","buffered","waitForUpdateEnd","appendNextInQueue","timestampOffset","forceRemoval","sourceBufferSink","readyState","to","unintended","nextChunk","oldRanges","afterSuccess","newRanges","checkBufferGapsAfterAppend","appendBuffer","isChunkAlignedWithRange","executeCallback","callbacks","fragmentController","_controllersFragmentController2","onBufferingCompleted","onDataUpdateCompleted","StreamInfo","ProtectionController","KEY_ERROR","onProtectionError","SERVER_CERTIFICATE_UPDATED","LICENSE_REQUEST_COMPLETE","KEY_SYSTEM_SELECTED","KEY_SESSION_CREATED","KEY_STATUSES_CHANGED","activate","previousBuffers","isStreamActivated","getPreloaded","initializeAfterPreload","onCurrentTrackChanged","initializeMedia","deactivate","keepBuffers","streamProcessors","errored","getFragmentModel","removeExecutedRequestsBeforeTime","getStartTime","isMediaInitialized","setPreloaded","isActive","setMediaSource","isMediaSupported","dischargePreBuffer","updateError","getEventController","eventController","getFragmentController","getBitrateList","startEventController","stopEventController","stop","mediaKeySessionError","supportsEncryptedMedia","supportsCodec","newMediaInfo","processor","getProcessorForMediaInfo","oldMediaInfo","refreshManifestOnSwitchTrack","trackChangedEvent","manifestUpdater","selectMediaInfo","updateTopQualityIndex","switchTrackAsked","abortRequests","createStreamProcessor","allMediaForType","optionalSettings","_StreamProcessor2","setBuffer","replaceIdx","ignoreMediaInfo","addMediaInfo","initializeMediaForType","initialMediaInfo","addEmbeddedTrack","addTrack","_thumbnailThumbnailController2","checkInitialMediaSettingsForType","_controllersEventController2","addInlineEvents","filterCodecs","createBuffers","checkIfInitializationCompleted","hasError","audio","video","DATA_UPDATE_FAILED_ERROR_CODE","initializeForMedia","createBuffer","processors","getProcessors","isBufferingCompleted","sp","updatedStreamInfo","isCompatibleWithStream","compareCodecs","newStreamInfo","currentStreamInfo","newAdaptation","currentAdaptation","sameMimeType","oldCodecs","newCodecs","codecMatch","newCodec","partialCodecMatch","oldCodec","codecRootCompatibleWithCodec","codec1","codec2","codecRoot","compatTableCodec","codecCompatibilityTable","find","compat","rootCompatible","compatibleCodecs","compatibleCodec","preloaded","getScheduleController","liveEdgeFinder","_utilsLiveEdgeFinder2","_dashDashHandler2","registerStreamType","fragmentModel","getModel","setStreamProcessor","bufferController","createBufferControllerForType","scheduleController","_controllersScheduleController2","_dashControllersRepresentationController2","registerExternalController","controller","spExternalControllers","unregisterExternalController","getExternalControllers","unregisterAllExternalController","mediaInfoArr","unRegisterStreamType","getBufferController","getLiveEdgeFinder","selectNewMediaInfo","getMediaInfoArr","getMediaSource","getIsBufferingCompleted","timeIsBuffered","getRangeAt","getBufferLevel","switchInitData","bufferResetEnabled","_controllersBufferController2","_textTextBufferController2","getPlaybackController","XlinkLoader","resolveObject","content","resolveToZero","resolved","resolvedContent","XLINK_LOADER_ERROR_LOADING_FAILURE","RESOLVE_TO_ZERO","XLINK_TYPE","Constants","INITIALIZE","TEXT_SHOWING","TEXT_HIDDEN","CC3","TTML","VTT","MetricsConstants","TCP_CONNECTION","HTTP_REQUEST","BUFFER_STATE","REQUESTS_QUEUE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","AbrController","switchHistoryDict","_rulesSwitchRequestHistory2","streamProcessorDict","abandonmentStateDict","ALLOW_LOAD","isUsingBufferOccupancyABRDict","onFragmentLoadProgress","onQualityChangeRendered","droppedFramesHistory","_rulesDroppedFramesHistory2","onMetricAdded","_rulesThroughputHistory2","abrRulesCollection","_rulesAbrABRRulesCollection2","autoSwitchBitrate","topQualities","qualityDict","bitrateDict","ratioDict","limitBitrateByPortal","usePixelRatioInLimitBitrateByPortal","windowResizeEventCalled","playbackIndex","abandonmentTimeout","getPlaybackQuality","updateIsUsingBufferOccupancyABR","checkMaxBitrate","checkMaxRepresentationRatio","checkPortalSize","bitrates","savedBitrate","getSavedBitrateSettings","repIdx","DEFAULT_VIDEO_BITRATE","DEFAULT_AUDIO_BITRATE","getMaxAllowedIndexFor","maxBitrate","minBitrate","checkPlaybackQuality","rulesContext","_rulesRulesContext2","currentValue","switchHistory","useBufferOccupancyABR","playbackQuality","topQualityIdx","switchRequest","getMaxQuality","oldValue","newValue","_rulesSwitchRequest2","NO_CHANGE","changeQuality","reason","bufferLevel","setAbandonmentStateFor","getAbandonmentStateFor","QUALITY_DEFAULT","infoList","bitrateInfo","_voBitrateInfo2","qualityIndex","strategy","stableBufferTime","switchOnThreshold","switchOffThreshold","useBufferABR","newUseBufferABR","setTopQualityIndex","isPlayingAtTopQuality","audioQuality","videoQuality","newIdx","maxIdx","maxRepresentationRatio","hasPixelRatio","pixelRatio","devicePixelRatio","elementWidth","getClientWidth","elementHeight","getClientHeight","currentRequest","shouldAbandonFragment","getRequests","_modelsFragmentModel2","FRAGMENT_MODEL_LOADING","ABANDON_LOAD","confidence","getAbandonLoadTimeout","BaseURLController","onBlackListChanged","baseURLTreeModel","invalidateSelectedIndexes","_modelsBaseURLTreeModel2","baseURLSelector","_utilsBaseURLSelector2","chooseSelectorFromManifest","getForPath","select","_dashVoBaseURL2","BlackListController","contains","query","blacklist","add","updateEventName","onAddBlackList","addBlacklistEventName","BufferController","initCache","_utilsInitCache2","getBufferControllerType","BUFFER_CONTROLLER_TYPE","Source","requiredQuality","onInitFragmentLoaded","onMediaFragmentLoaded","onStreamCompleted","onPlaybackPlaying","onPlaybackProgression","onPlaybackRateChanged","onPlaybackSeeking","onPlaybackSeeked","onPlaybackStalled","onRemoved","oldBuffers","_SourceBufferSink2","mediaSourceError","_PreBufferSink2","updateBufferTimestampOffset","dischargeBuffer","rangeStr","lastInit","initChunk","extract","save","appendToBuffer","bufferResetInProgress","eventStreamMedia","eventStreamTrack","FRAGMENT_MODEL_EXECUTED","handleInbandEvents","addInbandEvents","mediaChunk","getTimeToStreamEnd","STALL_THRESHOLD","BUFFER_END_THRESHOLD","force","showBufferRanges","QUOTA_EXCEEDED_ERROR_CODE","criticalBufferLevel","getTotalBufferedTime","bufferToKeep","bufferAhead","hasEnoughSpaceToAppend","pruneAllSafely","appendedBytesInfo","maxAppendedIndex","checkIfBufferingCompleted","setSeekTarget","dataEvent","bufferedRanges","endFragment","seekClearedBufferingCompleted","lastIndex","seekStartTime","getAllRangesWithSafetyFactor","clearRanges","endOfBuffer","currentTimeRequest","threshold","BUFFER_RANGE_CALCULATION_THRESHOLD","behindRange","prevReq","aheadRange","nextReq","getWorkingTime","updateBufferLevel","addBufferMetrics","checkIfSufficientBuffer","tolerance","firstStart","lastEnd","gap","toler","addBufferState","bufferState","getBufferTarget","addBufferLevel","notifyBufferStateChanged","mediaInbandEvents","trackInbandEvents","fragmentStartTime","inbandEvents","_utilsBoxParser2","eventBoxes","pruneBuffer","getClearRanges","rangeToKeep","getBufferToKeep","getBufferAheadToKeep","pendingPruningRanges","isPruningInProgress","clearNextRange","sourceBuffer","_MediaController2","TRACK_SWITCH_MODE_ALWAYS_REPLACE","wallclockTicked","getWallclockTimeUpdateInterval","getBufferPruningInterval","setSeekStartTime","newBuffer","getIsPruningInProgress","totalBufferedTime","_AbrController2","EventController","isStarted","inlineEvents","activeEvents","eventInterval","presentationTimeThreshold","onEventTimer","values","MPD_RELOAD_SCHEME","handleManifestReloadEvent","MPD_RELOAD_VALUE","validUntil","newManifestValidAfter","removeEvents","currentVideoTime","eventIds","eventId","curr","triggerEvents","FragmentController","onFragmentLoadingCompleted","model","fragmentModels","fragmentLoader","_FragmentLoader2","isInitializationRequest","createDataChunk","_voDataChunk2","isInit","MediaController","settings","tracksForType","tracks","getSavedMediaSettings","matchSettings","selectInitialTrack","isMultiTrackSupportedByType","createTrackInfo","mediaTracks","initSettings","isCurrentTrack","switchMode","extractSettings","storeLastSettings","setSavedMediaSettings","initialSettings","validTrackSwitchModes","validTrackSelectionModes","selectionMode","DEFAULT_INIT_TRACK_SELECTION_MODE","t1","t2","sameId","sameViewpoint","sameLang","sameRoles","sameAccessibility","sameAudioChannelConfiguration","resetSwitchMode","matchLang","matchViewPoint","matchRole","matchAccessibility","matchAudioChannelConfiguration","TRACK_SWITCH_MODE_NEVER_REPLACE","tmpArr","getTracksWithHighestBitrate","trackArr","getTracksWithWidestRange","TRACK_SELECTION_MODE_HIGHEST_BITRATE","TRACK_SELECTION_MODE_WIDEST_RANGE","fragmentedText","MediaSourceController","createMediaSource","hasWebKit","MediaSource","WebKitMediaSource","attachMediaSource","objectURL","URL","createObjectURL","setSource","detachMediaSource","setDuration","setSeekable","setLiveSeekableRange","clearLiveSeekableRange","signalEndOfStream","sourceBuffers","endOfStream","PlaybackController","compatible","addAllListeners","liveStartTime","compatibleWithPreviousStream","onBytesAppended","onBufferLevelStateChanged","onPeriodSwitchStarted","onPlaybackEnded","playOnceInitialized","fromStreamInfo","commonEarliestTime","bufferedRange","getStreamEndTime","getStreamStartTime","stickToBuffered","internalSeek","getPlayedRanges","getEnded","getStreamController","setLiveStartTime","getLiveStartTime","catchUpPlaybackRate","stopPlaybackCatchUp","dvrWindowSize","getUseSuggestedPresentationDelay","getLiveDelayFragmentCount","targetDelayCapping","startPlaybackCatchUp","currentRate","originalPlaybackRate","DEFAULT_CATCHUP_PLAYBACK_RATE","stopUpdatingWallclockTime","wallclockTimeIntervalId","getStartTimeFromUriParameters","fragData","getURIFragmentData","uriParameters","fragS","fragT","ignoreStartOffset","startTimeOffset","getActualPresentationTime","DVRMetrics","actualTime","startUpdatingWallclockTime","tick","onWallclockTime","updateCurrentTime","getReadyState","onCanPlay","onPlaybackStart","onPlaybackWaiting","playingTime","seekTime","onPlaybackTimeUpdated","timeToEnd","updateLivePlaybackTime","lastLivePlaybackTime","LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS","onPlaybackProgress","rate","onPlaybackMetaDataLoaded","onNativePlaybackEnded","onPlaybackError","srcElement","checkTimeInRanges","isCatchingUp","needToCatchUp","stopCatchingUp","LIVE_CATCHUP_START_THRESHOLD","initialStartTime","started","hasVideoTrack","isVideoTrackPresent","hasAudioTrack","isAudioTrackPresent","setStallState","_BufferController2","ScheduleController","scheduleWhilePaused","bufferLevelRule","_rulesSchedulingBufferLevelRule2","nextFragmentRequestRule","_rulesSchedulingNextFragmentRequestRule2","onTimedTextRequested","onDataUpdateStarted","onStreamInitialized","onBufferCleared","onInitRequested","onQuotaExceeded","onURLResolutionFailed","onFragmentLoadingAbandoned","isStopped","currentRepresentationInfo","addPlaylistTraceMetrics","initialRequest","startScheduleTimer","scheduleTimeout","hasTopQualityChanged","topQualityIndex","newTopQualityIndex","schedule","isFragmentProcessingInProgress","validateExecutedFragmentRequest","isReplacement","replaceRequestArray","lastInitQuality","switchTrack","execute","getNextFragment","replacement","executeRequest","setFragmentProcessState","safeBufferLevel","fastSwitchModeEnabled","abandonmentState","trackChanged","qualityChanged","replaceRequest","clearPlayListTraceMetrics","_voMetricsPlayList","PlayListTrace","REPRESENTATION_SWITCH_STOP_REASON","completeQualityChange","lastFragmentRequest","setLiveEdgeSeekTarget","seekTarget","getLiveEdge","clientTimeOffset","mediaRequest","addExecutedRequest","removeExecutedRequestsAfterTime","syncExecutedRequestsWithBufferedRange","REBUFFERING_REASON","setTimeToLoadDelay","playListTraceMetrics","playbackspeed","getSeekTarget","timeToLoadDelay","getTimeToLoadDelay","setPlayList","playList","playListMetrics","finalisePlayList","endTime","stopreason","playListTraceMetricsClosed","representationid","mstart","StreamController","timeSyncController","_TimeSyncController2","_BaseURLController2","mediaSourceController","_MediaSourceController2","autoPl","protData","_ManifestUpdater2","onTimeSyncCompleted","onEnded","onManifestUpdated","onStreamBufferingCompleted","addDroppedFrames","isStreamSwitchingInProgress","hasMediaError","hasInitialisationError","STALL_THRESHOLD_TO_CHECK_GAPS","lastPlaybackTime","jumpGap","smallGapLimit","seekToPosition","mediaBuffer","nextRangeStartTime","timeToStreamEnd","seekingStream","playbackEndedTimerId","stopEndPeriodTimer","isStreamBufferingCompleted","preloading","flushPlaylistMetrics","END_OF_PERIOD_STOP_REASON","switchStream","USER_REQUEST_STOP_REASON","addPlaylistMetrics","PlayList","SEEK_START_REASON","initialPlayback","INITIAL_PLAYOUT_START_REASON","RESUME_FROM_PAUSE_START_REASON","toggleEndPeriodTimer","delayPlaybackEnded","preloadDelay","onStreamCanLoadNext","newStream","getNextStream","baseStart","streamStart","streamDur","getActiveStreamProcessors","nextStream","audioTrackDetected","videoTrackDetected","END_OF_CONTENT_STOP_REASON","oldStream","toStreamInfo","openMediaSource","preloadStream","activateStream","streamActivated","onMediaSourceOpen","revokeObjectURL","sourceUrl","setMediaDuration","checkTrackPresence","manifestDuration","mediaDuration","getComposedStream","composeStreams","streamsInfo","getBufferRange","_Stream2","addManifestUpdateStreamInfo","startTimeFormUriParameters","initialStream","PROTECTION_CREATED","setMediaElement","manifestUTCTimingSources","allUTCTimingSources","isHTTPS","getUseManifestDateHeaderTimeSource","isDetected","ctrlr","addPlayList","startReason","starttype","msExtendedCode","checkInitializeCall","FAILURE_STOP_REASON","clearAllCurrentMetrics","PROTECTION_DESTROYED","TimeSyncController","timingSources","useManifestDateHeader","useManifestDateHeaderTimeSource","offsetToDeviceTimeMs","isSynchronizing","isInitialised","urn:mpeg:dash:utc:http-head:2014","httpHeadHandler","urn:mpeg:dash:utc:http-xsdate:2014","httpHandler","xsdatetimeDecoder","urn:mpeg:dash:utc:http-iso:2014","iso8601Decoder","urn:mpeg:dash:utc:direct:2014","directHandler","urn:mpeg:dash:utc:http-head:2012","urn:mpeg:dash:utc:http-xsdate:2012","urn:mpeg:dash:utc:http-iso:2012","urn:mpeg:dash:utc:direct:2012","urn:mpeg:dash:utc:http-ntp:2014","notSupportedHandler","urn:mpeg:dash:utc:ntp:2014","urn:mpeg:dash:utc:sntp:2014","getIsSynchronizing","attemptSync","setIsInitialised","getOffsetToDeviceTimeMs","getOffsetMs","setIsSynchronizing","setOffsetMs","alternateXsdatetimeDecoder","xsdatetimeStr","parsedDate","isoStr","rfc1123Decoder","dateStr","onSuccessCB","onFailureCB","isHeadRequest","oncomplete","complete","req","XMLHttpRequest","verb","HEAD","GET","urls","status","getResponseHeader","open","HTTP_TIMEOUT_MS","send","checkForDateHeader","dateHeaderValue","dateHeaderTime","completeTimeSyncSequence","failed","TIME_SYNC_FAILED_ERROR_CODE","sources","sourceIndex","onComplete","serverTime","deviceTime","trunc","XlinkController","onXlinkElementLoaded","xlinkLoader","_XlinkLoader2","iron","getElementsToResolve","ELEMENT_TYPE_PERIOD","RESOLVE_TYPE_ONLOAD","resolveType","onXlinkAllElementsLoaded","isHTTPURL","originalContent","mergedContent","isResolvingFinished","mergeElementsBack","RESOLVE_TYPE_ONACTUATE","ELEMENT_TYPE_ADAPTATIONSET","ELEMENT_TYPE_EVENTSTREAM","toResolve","xlinkObject","createXlinkObject","resolvedElements","isInappropriateTarget","elementsToResolve","BaseURLTreeModel","updateChildData","selectedIdx","DEFAULT_INDEX","getBaseURLCollectionsFromManifest","root","ai","ri","walk","nodes","_utilsObjectUtils2","_baseUrls","_selectedIdx","FragmentModel","onLoadingCompleted","onLoadingInProgress","onLoadingAborted","isFragmentLoaded","isEqualComplete","req1","req2","_voFragmentRequest2","isEqualMedia","isEqualInit","check","requests","isLoaded","executedRequests","isFragmentLoadedOrPending","loadingRequests","states","filteredRequests","getRequestsForState","filterRequests","getRequestThreshold","removeExecutedRequestsInTimeRange","streamDuration","addSchedulingInfoMetrics","ACTION_DOWNLOAD","loadCurrentFragment","getRequestForTime","lastIdx","addSchedulingInfo","addRequestsQueue","FRAGMENT_MODEL_FAILED","FRAGMENT_MODEL_CANCELED","ManifestModel","MediaPlayerModel","ABRStrategy","fastSwitchEnabled","lastBitrateCachingInfo","enabled","DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION","lastMediaSettingsCachingInfo","DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION","liveDelayFragmentCount","LIVE_DELAY_FRAGMENT_COUNT","BUFFER_TO_KEEP","bufferAheadToKeep","BUFFER_AHEAD_TO_KEEP","bufferPruningInterval","BUFFER_PRUNING_INTERVAL","bufferTimeAtTopQuality","BUFFER_TIME_AT_TOP_QUALITY","bufferTimeAtTopQualityLongForm","BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM","longFormContentDurationThreshold","LONG_FORM_CONTENT_DURATION_THRESHOLD","segmentOverlapToleranceTime","SEGMENT_OVERLAP_TOLERANCE_TIME","bandwidthSafetyFactor","BANDWIDTH_SAFETY_FACTOR","abandonLoadTimeout","ABANDON_LOAD_TIMEOUT","wallclockTimeUpdateInterval","WALLCLOCK_TIME_UPDATE_INTERVAL","jumpGaps","SMALL_GAP_LIMIT","manifestUpdateRetryInterval","MANIFEST_UPDATE_RETRY_INTERVAL","xhrWithCredentials","default","DEFAULT_XHR_WITH_CREDENTIALS","customABRRule","movingAverageMethod","lowLatencyEnabled","_retryAttempts","MANIFEST_RETRY_ATTEMPTS","XLINK_EXPANSION_TYPE","XLINK_RETRY_ATTEMPTS","FRAGMENT_RETRY_ATTEMPTS","BITSTREAM_SWITCHING_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","OTHER_TYPE","retryAttempts","_retryIntervals","MANIFEST_RETRY_INTERVAL","XLINK_RETRY_INTERVAL","FRAGMENT_RETRY_INTERVAL","retryIntervals","cacheLoadThresholds","CACHE_LOAD_THRESHOLD_VIDEO","CACHE_LOAD_THRESHOLD_AUDIO","getUseDefaultABRRules","findABRCustomRule","getABRCustomRules","DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH","DEFAULT_MIN_BUFFER_TIME","LOW_LATENCY_REDUCTION_FACTOR","getLongFormContentDurationThreshold","getCacheLoadThresholdForType","getLastBitrateCachingInfo","getLastMediaSettingsCachingInfo","setRetryAttemptsForType","getFragmentRetryAttempts","getManifestRetryAttempts","getRetryAttemptsForType","LOW_LATENCY_MULTIPLY_FACTOR","setRetryIntervalForType","getFragmentRetryInterval","getManifestRetryInterval","getRetryIntervalForType","setWallclockTimeUpdateInterval","DEFAULT_LOW_LATENCY_LIVE_DELAY","useCreds","MetricsModel","metricsChanged","metricChanged","metricUpdated","metricType","metricAdded","clearCurrentMetricsForType","_voMetricsList2","pushMetrics","MAXIMUM_LIST_DEPTH","addTcpConnection","tcpid","topen","tclose","tconnect","_voMetricsTCPConnection2","pushAndNotify","appendHttpTrace","HTTPRequestTrace","interval","addHttpRequest","actualurl","trequest","tresponse","tfinish","mediaduration","responseHeaders","traces","_tfinish","_stream","_mediaduration","_serviceLocation","mt","lto","_voMetricsRepresentationSwitch2","metricObject","_voMetricsBufferLevel2","_voMetricsBufferState2","_voMetricsDVRInfo2","_voMetricsDroppedFrames2","DroppedFrames","creationTime","droppedFrames","droppedVideoFrames","_voMetricsSchedulingInfo2","_voMetricsRequestsQueue2","addManifestUpdate","requestTime","fetchTime","_voMetricsManifestUpdate","ManifestUpdate","manifestUpdate","updatedFields","ManifestUpdateStreamInfo","streamIndex","fragmentInfoType","ManifestUpdateRepresentationInfo","subreplevel","addDVBErrors","URIFragmentModel","URIFragmentDataVO","_voURIFragmentData2","hashIndex","fragment","equalIndex","VideoModel","onPlaying","onPlaybackCanPlay","previousPlaybackRate","stickTimeToBuffered","INVALID_STATE_ERR","closestTime","closestDistance","distanceToStart","distanceToEnd","VIDEO_MODEL_WRONG_ELEMENT_TYPE","removeAttribute","videoContainer","TTMLRenderingDiv","pointerEvents","stallStream","isStalled","stalledStreams","addStalledStream","seeking","createEvent","initEvent","dispatchEvent","removeStalledStream","hasQuality","getVideoPlaybackQuality","webkitDroppedFrameCount","totalVideoFrames","webkitDecodedFrameCount","autoplay","Promise","played","eventName","eventCallBack","getVideoWidth","videoWidth","getVideoHeight","videoHeight","getVideoRelativeOffsetTop","parentNode","getVideoRelativeOffsetLeft","getTextTracks","getTextTrack","label","isTTML","addTextTrack","childElement","removeChild","FetchLoader","cfg","requestStartTime","Headers","requestStartDate","modifyRequestHeader","setRequestHeader","header","abortController","AbortController","reqOptions","credentials","withCredentials","signal","then","ok","_step","_iterator","iterator","_iteratorNormalCompletion","loaded","totalBytes","bytesReceived","signaledFirstByte","reader","getReader","downLoadedData","processResult","_ref","lengthComputable","calculateDownloadedTime","concatTypedArray","boxesInfo","findLastTopIsoBoxCompleted","lastCompletedOffset","noTrace","cancel","datum","avgTimeDistance","distance","HTTPLoader","delayedRequests","retryTimers","_downloadErrorToRequestTypeMap","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_XLINK","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_CONTENT","downloadErrorToRequestTypeMap","internalLoad","remainingAttempts","firstProgress","needFailureReport","lastTraceTime","lastTraceReceivedCount","handleLoaded","requestEndDate","firstByteDate","checkExistenceOnly","getAllResponseHeaders","downloadError","bytesTotal","onabort","loader","responseType","_FetchLoader2","_XHRLoader2","modifiedUrl","modifyRequestURL","delayLoadingTime","delayedRequest","delayTimeout","onprogress","XHRLoader","xhr","DroppedFramesHistory","intervalDroppedFrames","lastDroppedFrames","intervalTotalFrames","lastTotalFrames","getDroppedFrameHistory","getFrameHistory","RulesContext","getMediaType","getRepresentationInfo","getAbrController","getSwitchHistory","getDroppedFramesHistory","getCurrentRequest","bufferOccupancyABR","SwitchRequest","getPriority","PRIORITY","DEFAULT","STRONG","WEAK","SwitchRequestHistory","_SwitchRequest2","switchRequests","noDrops","drops","dropSize","indexDiff","drop","noDrop","srHistory","SWITCH_REQUEST_HISTORY_DEPTH","srHistoryFirst","getSwitchRequests","ThroughputHistory","ewmaHalfLife","throughputHalfLife","fast","EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS","slow","EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS","latencyHalfLife","EWMA_LATENCY_FAST_HALF_LIFE_COUNT","EWMA_LATENCY_SLOW_HALF_LIFE_COUNT","isCachedResponse","latencyMs","downloadTimeMs","latencyTimeInMilliseconds","downloadTimeInMilliseconds","downloadTime","downloadBytes","throughputMeasureTime","throughput","checkSettingsForMediaType","throughputDict","hasCachedEntries","clearSettingsForMediaType","MAX_MEASUREMENTS_TO_KEEP","latencyDict","updateEwmaEstimate","ewmaThroughputDict","ewmaLatencyDict","ewmaObj","halfLife","fastAlpha","fastEstimate","slowAlpha","slowEstimate","totalWeight","getSampleSize","isThroughput","isLive","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE","AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD","AVERAGE_LATENCY_SAMPLE_AMOUNT","ratio","THROUGHPUT_INCREASE_SCALE","THROUGHPUT_DECREASE_SCALE","getAverage","getAverageEwma","getAverageSlidingWindow","dict","getSafeAverageThroughput","average","getAverageLatency","ABRRulesCollection","qualitySwitchRules","abandonFragmentRules","_BolaRule2","_ThroughputRule2","_InsufficientBufferRule2","_SwitchHistoryRule2","_DroppedFramesRule2","_AbandonRequestsRule2","QUALITY_SWITCH_RULES","ABANDON_FRAGMENT_RULES","getActiveRules","srArray","sr","getMinSwitchRequest","getMaxIndex","shouldAbandon","rules","AbandonRequestsRule","setFragmentRequestDict","fragmentDict","storeLastRequestThroughputByType","throughputArray","fragmentInfo","abandonDict","firstByteTime","elapsedTime","MIN_LENGTH_TO_AVERAGE","GRACE_TIME_THRESHOLD","totalSampledValue","measuredBandwidthInKbps","estimatedTimeOfDownload","ABANDON_MULTIPLIER","bytesRemaining","fragmentID","BolaRule","onBufferEmpty","onQualityChangeRequested","utilitiesFromBitrates","calculateBolaParameters","utilities","highestUtilityIndex","highestIndex","uIndex","bufferTime","MINIMUM_BUFFER_S","MINIMUM_BUFFER_PER_BITRATE_LEVEL_S","gp","Vp","getInitialBolaState","initialState","BOLA_STATE_STARTUP","lastQuality","clearBolaStateOnSeek","BOLA_STATE_ONE_BITRATE","bolaState","placeholderBuffer","mostAdvancedSegmentStart","lastSegmentWasReplacement","lastSegmentStart","lastSegmentDurationS","lastSegmentRequestTimeMs","lastSegmentFinishTimeMs","checkBolaStateStableBufferTime","effectiveBufferLevel","getBolaState","bolaStateDict","getQualityFromBufferLevel","bitrateCount","score","maxBufferLevelForQuality","minBufferLevelForQuality","qBitrate","qUtility","iBitrate","iUtility","updatePlaceholderBuffer","nowMs","lastCallTimeMs","BOLA_STATE_STEADY","checkNewSegment","PLACEHOLDER_BUFFER_DECAY","bufferAtLastSegmentRequest","maxEffectiveBufferForLastSegment","maxPlaceholderBuffer","abrQuality","wantEffectiveBufferLevel","safeThroughput","qualityForThroughput","delayS","DroppedFramesRule","dfh","totalFrames","maxIndex","GOOD_SAMPLE_SIZE","DROPPED_PERCENTAGE_FORBID","InsufficientBufferRule","lastBufferStateVO","BufferState","wasFirstBufferLoadedEventTriggered","INSUFFICIENT_BUFFER_SAFETY_FACTOR","currentBufferState","bufferStateDict","wasTriggered","firstBufferLoadedEvent","SwitchHistoryRule","switchRequestHistory","SAMPLE_SIZE","MAX_SWITCH","ThroughputRule","bufferStateVO","BufferLevelRule","videoTrackPresent","bufferTarget","videoBufferLevel","isLongFormContent","NextFragmentRequestRule","requestToReplace","hasSeekTarget","bufferIsDivided","playingRange","bufferRanges","numberOfBuffers","EmbeddedTextHtmlRender","checkIndent","getRegionProperties","y1","y2","createRGB","getStyle","videoElement","ltrim","rtrim","createHTMLCaptionsFromScreen","captionScreen","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","spans","currentStyle","seenRegions","styleStates","prevPenState","rowIndent","contat","uc","currPenStateString","captionsArray","cueID","captionId","finalDiv","cueRegionProperties","cssText","bodyDiv","cueUniWrapper","ptag","lastSpanRow","brElement","sameRow","spanStyle","spanElement","bodyStyle","_s","cueHTMLElement","isFromCEA608","NotFragmentedTextBufferController","initialized","textBuffer","_streamingTextTextController2","TextBufferController","_BufferControllerImpl","_NotFragmentedTextBufferController2","TextController","defaultLanguage","lastEnabledIndex","textDefaultEnabled","forceTextStreaming","_TextTracks2","vttParser","_utilsVTTParser2","ttmlParser","_utilsTTMLParser2","textSourceBuffer","_TextSourceBuffer2","onTextTracksAdded","getAllTracksAreDisabled","allTracksAreDisabled","getConfig","fragmentedTracks","mediaInfosArr","oldTrackIdx","setModeForTrackIdx","setCurrentTrackIdx","currentTrackInfo","getCurrentTrackInfo","isFragmented","currentFragTrack","deleteCuesFromTrackIdx","setCurrentFragmentedTrackIdx","resetEmbedded","TextSourceBuffer","initializationSegmentReceived","firstSubtitleStart","embeddedInitialized","initEmbedded","mediaInfos","fragmentedTextBoxParser","_dashUtilsFragmentedTextBoxParser2","_utilsCustomTimeRanges2","currFragTrack","currFragmentedTrackIdx","deleteAllTextTracks","onVideoChunkReceived","embeddedTracks","embeddedInitializationSegmentReceived","embeddedTimescale","embeddedCea608FieldParsers","embeddedSequenceNumbers","embeddedLastSequenceNumber","embeddedTextHtmlRender","_EmbeddedTextHtmlRender2","mseTimeOffset","createTextTrackFromMediaInfo","captionData","textTrackInfo","_voTextTrackInfo2","trackKindMap","subtitle","caption","getKind","checkTTML","ttml","defaultTrack","getIsDefault","totalNrTracks","samplesInfo","ccContent","codecType","getParser","sampleStart","sampleRelStart","images","subOffset","inData","offsetTime","ttmlTimeIsRelative","addCaptions","captionArray","sampleBoxes","box1","box2","cue_text","start_time","end_time","timedTextError","makeCueAdderForIndex","trackIndex","sequenceNumber","trackIdx","getTrackIdxForId","allCcData","extractCea608Data","fieldNr","ccData","fields","fieldParser","splits","cea608Ranges","lastSampleTime","TextTracks","navigator","Cue","VTTCue","TextTrackCue","textTrackQueue","trackElementArr","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","videoSizeCheckInterval","displayCCOnTop","topZIndex","isChrome","userAgent","fullscreenElement","fullscreenAttribute","webkitIsFullScreen","msFullscreenElement","mozFullScreen","createTrackForUserAgent","textTrackInfoVO","totalTextTracks","defaultIndex","textTrack","getTrackByIdx","renderingType","videoTextTrack","getVideoVisibleVideoSize","viewWidth","viewHeight","use80Percent","viewAspectRatio","videoAspectRatio","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","checkVideoSize","forceDrawing","videoOffsetTop","videoOffsetLeft","realVideoSize","newVideoWidth","newVideoHeight","newVideoLeft","newVideoTop","activeCues","scaleCue","activeCue","replaceValue","valueFontSize","valueLineHeight","cellUnit","valueLinePadding","elementsSpan","getElementsByClassName","htmlCaptionDiv","getElementById","renderCaption","finalCue","_imsc","imsc1ImgUrnTester","smpteImgUrnTester","imageId","imageData","btoa","dataUrl","embeddedImages","timeOffset","currentItem","onenter","onexit","divs","align","addCue","deleteTrackCues","trackId","setCueStyleOnTrack","clearCaptionContainer","setNativeCueStyle","removeNativeCueStyle","removeCue","deleteTextTrack","styleElement","stylesheet","sheet","insertRule","classList","ThumbnailController","thumbnailTracks","_ThumbnailTracks2","getCurrentTrack","seq","thumbIndex","tilesHor","tilesVert","thumbnail","_voThumbnail2","buildUrlFromTemplate","widthPerTile","heightPerTile","seqIdx","_dashUtilsSegmentsUtils","templateUrl","getTracks","ThumbnailTracks","addTracks","voReps","_dashConstantsDashConstants2","createTrack","currentTrackIndex","_voThumbnailTrackInfo2","buildTemplateUrl","THUMBNAILS_SCHEME_ID_URI","vars","BaseURLSelector","serviceLocationBlacklistController","_controllersBlacklistController2","basicSelector","_baseUrlResolutionBasicSelector2","blacklistController","dvbSelector","_baseUrlResolutionDVBSelector2","selector","selectedBaseUrl","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","BoxParser","fileStart","parsedFile","dashIsoFile","_IsoFile2","setData","_voIsoBoxSearchInfo2","boxInfo","boxSize","parseUint32","boxType","parseIsoBoxType","Capabilities","encryptedMediaSupported","hasMediaSource","setEncryptedMediaSupported","isTypeSupported","CustomTimeRanges","customTimeRangeArray","mergeRanges","rangeIndex1","rangeIndex2","range1","range2","checkIndex","DOMStorage","translateLegacyKeys","isSupported","supported","testKey","testValue","storage","STORAGE_TYPE_LOCAL","STORAGE_TYPE_SESSION","setItem","removeItem","legacyKeysAndReplacements","getItem","oldKey","newKey","getTimestamp","ten_minutes_ms","canStore","storageType","LAST_MEDIA_SETTINGS","LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE","isExpired","timestamp","LAST_BITRATE","LOCAL_STORAGE_BITRATE_KEY_TEMPLATE","EBMLParser","bytesConsumed","p1","p2","headerSize","retainMSB","bytesUsed","mask","maxBytes","ch","getMatroskaFloat","outFloat","getFloat32","getFloat64","getMatroskaUint","ErrorHandler","cc","mediaKeyMessageError","mssError","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_SIDX","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE","InitCache","IsoFile","parsedIsoFile","convertToDashIsoBox","boxData","_voIsoBox2","LiveEdgeFinder","ObjectUtils","obj1","obj2","_fastDeepEqual2","RequestModifier","TTMLParser","getCueID","cueCounter","startTimeSegment","endTimeSegment","errorMsg","currentImageId","accumulated_image_data","imsc1doc","ttmlString","ttmlDoc","mediaTimeEvents","topLevelContents","URLUtils","resolveFunction","nativeURLResolver","dumbURLResolver","slashIndex","lastSlashIndex","lastIndexOf","parseOrigin","matches","originRegex","parseScheme","schemeRegex","isPathAbsolute","isSchemeRelative","httpUrlRegex","httpsUrlRegex","baseUrlParseFunc","VTTParser","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","lastStartTime","WEBVTT","parseItemAttributes","cuePoints","getSublines","convertCuePointTimes","timeArray","vttCuePoints","getCaptionStyles","styleObject","subline","lineData","lineCount","BasicSelector","DVBSelector","getNonBlacklistedBaseUrls","removedPriorities","samePrioritiesFilter","el","serviceLocationFilter","selectByWeight","availableUrls","prioritySorter","diff","topPriorityFilter","cumulWeights","rn","random","every","BitrateInfo","DashJSError","DataChunk","FragmentRequest","HeadRequest","_FragmentRequest","checkForExistenceOnly","IsoBox","sample_description_index","default_sample_flags","first_sample_flags","IsoBoxSearchInfo","ManifestInfo","MediaInfo","MetricsList","TcpList","RepSwitchList","BufferLevel","SchedulingInfo","DVRInfo","DVBErrors","RepresentationInfo","TextRequest","TextTrackInfo","Thumbnail","ThumbnailTrackInfo","URIFragmentData","xywh","METRICS_COLLECTION_START_REASON","METRICS_COLLECTION_STOP_REASON","RepresentationSwitch","TCPConnection"],"mappings":"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,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,SAAA,IACAC,MAAA,IACAC,IAAA,IACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,KAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAxsD,MAAA,KACAysD,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,GAAA,KACAC,K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","file":"dash.mediaplayer.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n    exports.encode = BASE64.encode;\n    exports.encodeASCII = BASE64.encodeASCII;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n(function(exports) {\n\n    \"use strict\";\n\n    /**\n     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n     */\n\n    var specialCea608CharsCodes = {\n        0x2a : 0xe1, // lowercase a, acute accent\n        0x5c : 0xe9, // lowercase e, acute accent\n        0x5e : 0xed, // lowercase i, acute accent\n        0x5f : 0xf3, // lowercase o, acute accent\n        0x60 : 0xfa, // lowercase u, acute accent\n        0x7b : 0xe7, // lowercase c with cedilla\n        0x7c : 0xf7, // division symbol\n        0x7d : 0xd1, // uppercase N tilde\n        0x7e : 0xf1, // lowercase n tilde\n        0x7f : 0x2588, // Full block\n        // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n        // THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n        0x80 : 0xae, // Registered symbol (R)\n        0x81 : 0xb0, // degree sign\n        0x82 : 0xbd, // 1/2 symbol\n        0x83 : 0xbf, // Inverted (open) question mark\n        0x84 : 0x2122, // Trademark symbol (TM)\n        0x85 : 0xa2, // Cents symbol\n        0x86 : 0xa3, // Pounds sterling\n        0x87 : 0x266a, // Music 8'th note\n        0x88 : 0xe0, // lowercase a, grave accent\n        0x89 : 0x20, // transparent space (regular)\n        0x8a : 0xe8, // lowercase e, grave accent\n        0x8b : 0xe2, // lowercase a, circumflex accent\n        0x8c : 0xea, // lowercase e, circumflex accent\n        0x8d : 0xee, // lowercase i, circumflex accent\n        0x8e : 0xf4, // lowercase o, circumflex accent\n        0x8f : 0xfb, // lowercase u, circumflex accent\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n        0x90 : 0xc1, // capital letter A with acute\n        0x91 : 0xc9, // capital letter E with acute\n        0x92 : 0xd3, // capital letter O with acute\n        0x93 : 0xda, // capital letter U with acute\n        0x94 : 0xdc, // capital letter U with diaresis\n        0x95 : 0xfc, // lowercase letter U with diaeresis\n        0x96 : 0x2018, // opening single quote\n        0x97 : 0xa1, // inverted exclamation mark\n        0x98 : 0x2a, // asterisk\n        0x99 : 0x2019, // closing single quote\n        0x9a : 0x2501, // box drawings heavy horizontal\n        0x9b : 0xa9, // copyright sign\n        0x9c : 0x2120, // Service mark\n        0x9d : 0x2022, // (round) bullet\n        0x9e : 0x201c, // Left double quotation mark\n        0x9f : 0x201d, // Right double quotation mark\n        0xa0 : 0xc0, // uppercase A, grave accent\n        0xa1 : 0xc2, // uppercase A, circumflex\n        0xa2 : 0xc7, // uppercase C with cedilla\n        0xa3 : 0xc8, // uppercase E, grave accent\n        0xa4 : 0xca, // uppercase E, circumflex\n        0xa5 : 0xcb, // capital letter E with diaresis\n        0xa6 : 0xeb, // lowercase letter e with diaresis\n        0xa7 : 0xce, // uppercase I, circumflex\n        0xa8 : 0xcf, // uppercase I, with diaresis\n        0xa9 : 0xef, // lowercase i, with diaresis\n        0xaa : 0xd4, // uppercase O, circumflex\n        0xab : 0xd9, // uppercase U, grave accent\n        0xac : 0xf9, // lowercase u, grave accent\n        0xad : 0xdb, // uppercase U, circumflex\n        0xae : 0xab, // left-pointing double angle quotation mark\n        0xaf : 0xbb, // right-pointing double angle quotation mark\n        // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n        // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n        0xb0 : 0xc3, // Uppercase A, tilde\n        0xb1 : 0xe3, // Lowercase a, tilde\n        0xb2 : 0xcd, // Uppercase I, acute accent\n        0xb3 : 0xcc, // Uppercase I, grave accent\n        0xb4 : 0xec, // Lowercase i, grave accent\n        0xb5 : 0xd2, // Uppercase O, grave accent\n        0xb6 : 0xf2, // Lowercase o, grave accent\n        0xb7 : 0xd5, // Uppercase O, tilde\n        0xb8 : 0xf5, // Lowercase o, tilde\n        0xb9 : 0x7b, // Open curly brace\n        0xba : 0x7d, // Closing curly brace\n        0xbb : 0x5c, // Backslash\n        0xbc : 0x5e, // Caret\n        0xbd : 0x5f, // Underscore\n        0xbe : 0x7c, // Pipe (vertical line)\n        0xbf : 0x223c, // Tilde operator\n        0xc0 : 0xc4, // Uppercase A, umlaut\n        0xc1 : 0xe4, // Lowercase A, umlaut\n        0xc2 : 0xd6, // Uppercase O, umlaut\n        0xc3 : 0xf6, // Lowercase o, umlaut\n        0xc4 : 0xdf, // Esszett (sharp S)\n        0xc5 : 0xa5, // Yen symbol\n        0xc6 : 0xa4, // Generic currency sign\n        0xc7 : 0x2503, // Box drawings heavy vertical\n        0xc8 : 0xc5, // Uppercase A, ring\n        0xc9 : 0xe5, // Lowercase A, ring\n        0xca : 0xd8, // Uppercase O, stroke\n        0xcb : 0xf8, // Lowercase o, strok\n        0xcc : 0x250f, // Box drawings heavy down and right\n        0xcd : 0x2513, // Box drawings heavy down and left\n        0xce : 0x2517, // Box drawings heavy up and right\n        0xcf : 0x251b // Box drawings heavy up and left\n    };\n\n    /**\n     * Get Unicode Character from CEA-608 byte code\n     */\n    var getCharForByte = function(byte) {\n        var charCode = byte;\n        if (specialCea608CharsCodes.hasOwnProperty(byte)) {\n            charCode = specialCea608CharsCodes[byte];\n        }\n        return String.fromCharCode(charCode);\n    };\n\n    var NR_ROWS = 15,\n        NR_COLS = 32;\n    // Tables to look up row from PAC data\n    var rowsLowCh1 = {0x11 : 1, 0x12 : 3, 0x15 : 5, 0x16 : 7, 0x17 : 9, 0x10 : 11, 0x13 : 12, 0x14 : 14};\n    var rowsHighCh1 = {0x11 : 2, 0x12 : 4, 0x15 : 6, 0x16 : 8, 0x17 : 10, 0x13 : 13, 0x14 : 15};\n    var rowsLowCh2 = {0x19 : 1, 0x1A : 3, 0x1D : 5, 0x1E : 7, 0x1F : 9, 0x18 : 11, 0x1B : 12, 0x1C : 14};\n    var rowsHighCh2 = {0x19 : 2, 0x1A : 4, 0x1D : 6, 0x1E : 8, 0x1F : 10, 0x1B : 13, 0x1C : 15};\n\n    var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];\n\n    /**\n     * Simple logger class to be able to write with time-stamps and filter on level.\n     */\n    var logger = {\n        verboseFilter : {'DATA' : 3, 'DEBUG' : 3, 'INFO' : 2, 'WARNING' : 2, 'TEXT' : 1, 'ERROR' : 0},\n        time : null,\n        verboseLevel : 0, // Only write errors\n        setTime : function(newTime) {\n            this.time = newTime;\n        },\n        log : function(severity, msg) {\n            var minLevel = this.verboseFilter[severity];\n            if (this.verboseLevel >= minLevel) {\n                console.log(this.time + \" [\" + severity + \"] \" + msg);\n            }\n        }\n    };\n\n    var numArrayToHexArray = function(numArray) {\n        var hexArray = [];\n        for (var j = 0; j < numArray.length; j++) {\n            hexArray.push(numArray[j].toString(16));\n        }\n        return hexArray;\n    };\n\n    /**\n     * State of CEA-608 pen or character\n     * @constructor\n     */\n    var PenState = function(foreground, underline, italics, background, flash) {\n        this.foreground = foreground || \"white\";\n        this.underline = underline || false;\n        this.italics = italics || false;\n        this.background = background || \"black\";\n        this.flash = flash || false;\n    };\n\n    PenState.prototype = {\n        \n        reset : function() {\n            this.foreground = \"white\";\n            this.underline = false;\n            this.italics = false;\n            this.background = \"black\";\n            this.flash = false;\n        },\n        \n        setStyles : function(styles) {\n            var attribs = [\"foreground\", \"underline\", \"italics\", \"background\", \"flash\"];\n            for (var i = 0 ; i < attribs.length; i++) {\n                var style = attribs[i];\n                if (styles.hasOwnProperty(style)) {\n                    this[style] = styles[style];\n                }\n            }\n        },\n        \n        isDefault : function() {\n            return (this.foreground === \"white\" && !this.underline && !this.italics && \n                    this.background === \"black\" && !this.flash);\n        },\n\n        equals : function(other) {\n            return ( (this.foreground === other.foreground) && \n                     (this.underline === other.underline) &&\n                     (this.italics === other.italics) &&\n                     (this.background === other.background) &&\n                     (this.flash === other.flash) );\n        },\n\n        copy : function(newPenState) {\n            this.foreground = newPenState.foreground;\n            this.underline = newPenState.underline;\n            this.italics = newPenState.italics;\n            this.background = newPenState.background;\n            this.flash = newPenState.flash;\n        },\n        \n        toString: function() {\n            return (\"color=\" + this.foreground + \", underline=\" + this.underline + \", italics=\" + this.italics +\n                \", background=\" + this.background + \", flash=\" + this.flash);\n        }\n    };\n\n    /**\n     * Unicode character with styling and background.\n     * @constructor\n     */\n    var StyledUnicodeChar = function(uchar, foreground, underline, italics, background, flash) {\n        this.uchar = uchar || ' '; // unicode character\n        this.penState = new PenState(foreground, underline,italics, background, flash);\n    };\n\n    StyledUnicodeChar.prototype = {\n        \n        reset: function() {\n            this.uchar = ' ';\n            this.penState.reset();\n        },\n        \n        setChar: function(uchar, newPenState) {\n            this.uchar = uchar;\n            this.penState.copy(newPenState);\n        },\n        \n        setPenState: function(newPenState) {\n            this.penState.copy(newPenState);\n        },\n        \n        equals: function(other) {\n            return this.uchar === other.uchar && this.penState.equals(other.penState);\n        },\n        \n        copy: function(newChar) {\n            this.uchar = newChar.uchar;\n            this.penState.copy(newChar.penState);\n        },\n        \n        isEmpty : function() {\n            return this.uchar === ' ' && this.penState.isDefault();\n        }\n    };\n\n    /**\n     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n     * @constructor\n     */\n    var Row = function() {\n        this.chars = [];\n        for (var i = 0 ; i < NR_COLS ; i++) {\n            this.chars.push(new StyledUnicodeChar());\n        }\n        this.pos = 0;\n        this.currPenState = new PenState();\n    };\n\n    Row.prototype = {\n        \n        equals: function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].equals(other.chars[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n        \n        copy: function(other) {\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                this.chars[i].copy(other.chars[i]);\n            }\n        },\n        \n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS; i ++) {\n                if (!this.chars[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        /**\n         *  Set the cursor to a valid column.\n         */\n        setCursor : function(absPos) {\n            if (this.pos !== absPos) {\n                this.pos = absPos;\n            }\n            if (this.pos < 0) {\n                logger.log(\"ERROR\", \"Negative cursor position \" + this.pos);\n                this.pos = 0;\n            } else if (this.pos > NR_COLS) {\n                logger.log(\"ERROR\", \"Too large cursor position \" + this.pos);\n                this.pos = NR_COLS;\n            }\n        },\n\n        /** \n         * Move the cursor relative to current position.\n         */\n        moveCursor : function(relPos) {\n            var newPos = this.pos + relPos;\n            if (relPos > 1) {\n                for (var i = this.pos+1; i < newPos+1 ; i++) {\n                    this.chars[i].setPenState(this.currPenState);\n                }\n            }\n            this.setCursor(newPos);\n        },\n\n        /**\n         * Backspace, move one step back and clear character.\n         */\n        backSpace : function () {\n            this.moveCursor(-1);\n            this.chars[this.pos].setChar(' ', this.currPenState);\n        },\n\n        insertChar: function(byte) {\n            if (byte >= 0x90) { //Extended char\n                this.backSpace();\n            }\n            var char = getCharForByte(byte);\n            if (this.pos >= NR_COLS) {\n                logger.log(\"ERROR\", \"Cannot insert \" + byte.toString(16) +  \n                            \" (\" + char + \") at position \" + this.pos + \". Skipping it!\");\n                return;\n            }\n            this.chars[this.pos].setChar(char, this.currPenState);\n            this.moveCursor(1);\n        },\n\n        clearFromPos : function(startPos) {\n            var i;\n            for (i = startPos ; i < NR_COLS ; i++) {\n                this.chars[i].reset();\n            }\n        },\n\n        clear : function() {\n            this.clearFromPos(0);\n            this.pos = 0;\n            this.currPenState.reset();\n        },\n\n        clearToEndOfRow : function() {\n            this.clearFromPos(this.pos);\n        },\n\n        getTextString: function() {\n            var chars = [];\n            var empty = true;\n            for (var i = 0 ; i < NR_COLS ; i++) {\n                var char = this.chars[i].uchar;\n                if (char !== \" \") {\n                    empty = false;\n                }\n                chars.push(char);\n            }\n            if (empty) {\n                return \"\";\n            } else {\n                return chars.join(\"\");\n            }\n        },\n\n        setPenStyles: function(styles) {\n            this.currPenState.setStyles(styles);\n            var currChar = this.chars[this.pos];\n            currChar.setPenState(this.currPenState);\n        }\n    };\n\n    /**\n     * Keep a CEA-608 screen of 32x15 styled characters\n     * @constructor\n    */\n    var CaptionScreen = function() {\n\n        this.rows = [];\n        for (var i = 0 ; i <  NR_ROWS; i++) {\n            this.rows.push(new Row()); // Note that we use zero-based numbering (0-14)\n        }\n        this.currRow = NR_ROWS - 1;\n        this.nrRollUpRows = null;\n        this.reset();\n    };\n\n    CaptionScreen.prototype = {\n\n        reset : function() {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].clear();\n            }\n            this.currRow = NR_ROWS - 1;\n        },\n\n        equals : function(other) {\n            var equal = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].equals(other.rows[i])) {\n                    equal = false;\n                    break;\n                }\n            }\n            return equal;\n        },\n\n        copy : function(other) {\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                this.rows[i].copy(other.rows[i]);\n            }\n        },\n\n        isEmpty : function() {\n            var empty = true;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                if (!this.rows[i].isEmpty()) {\n                    empty = false;\n                    break;\n                }\n            }\n            return empty;\n        },\n\n        backSpace : function() {\n            var row = this.rows[this.currRow]; \n            row.backSpace();\n        },\n\n        clearToEndOfRow : function() {\n            var row = this.rows[this.currRow];\n            row.clearToEndOfRow();\n        },\n\n        /**\n         * Insert a character (without styling) in the current row.\n         */\n        insertChar : function(char) {\n            var row = this.rows[this.currRow];\n            row.insertChar(char);\n        },\n\n        setPen : function(styles) {\n            var row = this.rows[this.currRow];\n            row.setPenStyles(styles);\n        },\n\n        moveCursor : function(relPos) {\n            var row = this.rows[this.currRow];\n            row.moveCursor(relPos); \n        },\n\n        setCursor : function(absPos) {\n            logger.log(\"INFO\", \"setCursor: \" + absPos);\n            var row = this.rows[this.currRow];\n            row.setCursor(absPos);\n        },\n\n        setPAC : function(pacData) {\n            logger.log(\"INFO\", \"pacData = \" + JSON.stringify(pacData));\n            var newRow = pacData.row - 1;\n            if (this.nrRollUpRows  && newRow < this.nrRollUpRows - 1) {\n                    newRow = this.nrRollUpRows-1;\n            }\n            this.currRow = newRow;\n            var row = this.rows[this.currRow];\n            if (pacData.indent !== null) {\n                var indent = pacData.indent;\n                var prevPos = Math.max(indent-1, 0);\n                row.setCursor(pacData.indent);\n                pacData.color = row.chars[prevPos].penState.foreground;\n            }\n            var styles = {foreground : pacData.color, underline : pacData.underline, italics : pacData.italics, background : 'black', flash : false};\n            this.setPen(styles);\n        },\n\n        /**\n         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n         */\n        setBkgData : function(bkgData) {\n\n            logger.log(\"INFO\", \"bkgData = \" + JSON.stringify(bkgData));\n            this.backSpace();\n            this.setPen(bkgData);\n            this.insertChar(0x20); //Space\n        },\n\n        setRollUpRows : function(nrRows) {\n            this.nrRollUpRows = nrRows;\n        },\n\n        rollUp : function() {\n            if (this.nrRollUpRows === null) {\n                logger.log(\"DEBUG\", \"roll_up but nrRollUpRows not set yet\");\n                return; //Not properly setup\n            }\n            logger.log(\"TEXT\", this.getDisplayText());\n            var topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n            var topRow = this.rows.splice(topRowIndex, 1)[0];\n            topRow.clear();\n            this.rows.splice(this.currRow, 0, topRow);\n            logger.log(\"INFO\", \"Rolling up\");\n            //logger.log(\"TEXT\", this.get_display_text())\n        },\n\n       /**\n        * Get all non-empty rows with as unicode text. \n        */        \n        getDisplayText : function(asOneRow) {\n            asOneRow = asOneRow || false;\n            var displayText = [];\n            var text = \"\";\n            var rowNr = -1;\n            for (var i = 0 ; i < NR_ROWS ; i++) {\n                var rowText = this.rows[i].getTextString();\n                if (rowText) {\n                    rowNr = i+1;\n                    if (asOneRow) {\n                        displayText.push(\"Row \" + rowNr + ': \"' + rowText + '\"');\n                    } else {\n                        displayText.push(rowText.trim());\n                    }\n                }\n            }\n            if (displayText.length > 0) {\n                if (asOneRow) {\n                    text = \"[\" + displayText.join(\" | \") + \"]\";\n                } else {\n                    text = displayText.join(\"\\n\");\n                }\n            }\n            return text;\n        },\n\n        getTextAndFormat : function() {\n            return this.rows;\n        }\n    };\n\n    /**\n     * Handle a CEA-608 channel and send decoded data to outputFilter\n     * @constructor\n     * @param {Number} channelNumber (1 or 2)\n     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)\n    */\n    var Cea608Channel = function(channelNumber, outputFilter) {\n\n        this.chNr = channelNumber;\n        this.outputFilter = outputFilter;\n        this.mode = null;\n        this.verbose = 0;\n        this.displayedMemory = new CaptionScreen();\n        this.nonDisplayedMemory = new CaptionScreen();\n        this.lastOutputScreen = new CaptionScreen();\n        this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n        this.writeScreen = this.displayedMemory;\n        this.mode = null;\n        this.cueStartTime = null; // Keeps track of where a cue started.\n    };\n\n    Cea608Channel.prototype = {\n        \n        modes : [\"MODE_ROLL-UP\", \"MODE_POP-ON\", \"MODE_PAINT-ON\", \"MODE_TEXT\"],\n        \n        reset : function() {\n            this.mode = null;\n            this.displayedMemory.reset();\n            this.nonDisplayedMemory.reset();\n            this.lastOutputScreen.reset();\n            this.currRollUpRow = this.displayedMemory.rows[NR_ROWS-1];\n            this.writeScreen = this.displayedMemory;\n            this.mode = null;\n            this.cueStartTime = null;\n            this.lastCueEndTime = null;\n        },\n\n        getHandler : function() {\n            return this.outputFilter;\n        },\n\n        setHandler : function(newHandler) {\n            this.outputFilter = newHandler;\n        },\n\n        setPAC : function(pacData) {\n            this.writeScreen.setPAC(pacData);\n        },\n\n        setBkgData : function(bkgData) {\n            this.writeScreen.setBkgData(bkgData);\n        },\n\n        setMode : function(newMode) {\n            if (newMode === this.mode) {\n                return;\n            }\n            this.mode = newMode;\n            logger.log(\"INFO\", \"MODE=\" + newMode);\n            if (this.mode == \"MODE_POP-ON\") {\n                this.writeScreen = this.nonDisplayedMemory;\n            } else {\n                this.writeScreen = this.displayedMemory;\n                this.writeScreen.reset();\n            }\n            if (this.mode !== \"MODE_ROLL-UP\") {\n                this.displayedMemory.nrRollUpRows = null;\n                this.nonDisplayedMemory.nrRollUpRows = null;\n            }\n            this.mode = newMode;\n        },\n\n        insertChars : function(chars) {\n            for (var i = 0 ; i < chars.length ; i++) {\n                this.writeScreen.insertChar(chars[i]);\n            }\n            var screen = this.writeScreen === this.displayedMemory ? \"DISP\" : \"NON_DISP\";\n            logger.log(\"INFO\", screen + \": \" + this.writeScreen.getDisplayText(true));\n            if (this.mode === \"MODE_PAINT-ON\" || this.mode === \"MODE_ROLL-UP\") {\n                logger.log(\"TEXT\", \"DISPLAYED: \" + this.displayedMemory.getDisplayText(true));\n                this.outputDataUpdate();\n            }\n        },\n\n        cc_RCL: function() { // Resume Caption Loading (switch mode to Pop On)\n            logger.log(\"INFO\", \"RCL - Resume Caption Loading\");\n            this.setMode(\"MODE_POP-ON\");\n        },\n        cc_BS: function() { // BackSpace\n            logger.log(\"INFO\", \"BS - BackSpace\");\n            if (this.mode === \"MODE_TEXT\") {\n                return;\n            }\n            this.writeScreen.backSpace();\n            if (this.writeScreen === this.displayedMemory) {\n                this.outputDataUpdate();\n            }\n        },\n        cc_AOF : function() { // Reserved (formerly Alarm Off)\n            return;\n        },\n        cc_AON: function() { // Reserved (formerly Alarm On)\n            return;\n        },\n        cc_DER: function() { // Delete to End of Row\n            logger.log(\"INFO\", \"DER- Delete to End of Row\");\n            this.writeScreen.clearToEndOfRow();\n            this.outputDataUpdate();\n        },\n        cc_RU: function(nrRows) { //Roll-Up Captions-2,3,or 4 Rows\n            logger.log(\"INFO\", \"RU(\" + nrRows +\") - Roll Up\");\n            this.writeScreen = this.displayedMemory;\n            this.setMode(\"MODE_ROLL-UP\");\n            this.writeScreen.setRollUpRows(nrRows);\n        },\n        cc_FON: function() { //Flash On\n            logger.log(\"INFO\", \"FON - Flash On\");\n            this.writeScreen.setPen({flash : true});\n        },\n        cc_RDC: function() { // Resume Direct Captioning (switch mode to PaintOn)\n            logger.log(\"INFO\", \"RDC - Resume Direct Captioning\");\n            this.setMode(\"MODE_PAINT-ON\");\n        },\n        cc_TR: function() { // Text Restart in text mode (not supported, however)\n            logger.log(\"INFO\", \"TR\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_RTD: function() { // Resume Text Display in Text mode (not supported, however)\n            logger.log(\"INFO\", \"RTD\");\n            this.setMode(\"MODE_TEXT\");\n        },\n        cc_EDM: function() { // Erase Displayed Memory\n            logger.log(\"INFO\", \"EDM - Erase Displayed Memory\");\n            this.displayedMemory.reset();\n            this.outputDataUpdate();\n        },\n        cc_CR: function() { // Carriage Return\n            logger.log(\"CR - Carriage Return\");\n            this.writeScreen.rollUp();\n            this.outputDataUpdate();\n        },\n        cc_ENM: function() { //Erase Non-Displayed Memory\n            logger.log(\"INFO\", \"ENM - Erase Non-displayed Memory\");\n            this.nonDisplayedMemory.reset();\n        },\n        cc_EOC: function() { //End of Caption (Flip Memories)\n            logger.log(\"INFO\", \"EOC - End Of Caption\");\n            if (this.mode === \"MODE_POP-ON\") {\n                var tmp = this.displayedMemory;\n                this.displayedMemory = this.nonDisplayedMemory;\n                this.nonDisplayedMemory = tmp;\n                this.writeScreen = this.nonDisplayedMemory;\n                logger.log(\"TEXT\", \"DISP: \" + this.displayedMemory.getDisplayText());\n            }\n            this.outputDataUpdate();\n        },\n        cc_TO: function(nrCols) { // Tab Offset 1,2, or 3 columns\n            logger.log(\"INFO\", \"TO(\" + nrCols + \") - Tab Offset\");\n            this.writeScreen.moveCursor(nrCols);\n        },\n        cc_MIDROW: function(secondByte) { // Parse MIDROW command\n            var styles = {flash : false};\n            styles.underline = secondByte % 2 === 1;\n            styles.italics = secondByte >= 0x2e;\n            if (!styles.italics) {\n                var colorIndex = Math.floor(secondByte/2) - 0x10;\n                var colors = [\"white\", \"green\", \"blue\", \"cyan\", \"red\", \"yellow\", \"magenta\"];\n                styles.foreground = colors[colorIndex];\n            } else {\n                styles.foreground = \"white\";\n            }\n            logger.log(\"INFO\", \"MIDROW: \" + JSON.stringify(styles));\n            this.writeScreen.setPen(styles);\n        },\n\n        outputDataUpdate: function() {\n            var t = logger.time;\n            if (t === null) {\n                return;\n            }\n            if (this.outputFilter) {\n                if (this.outputFilter.updateData) {\n                    this.outputFilter.updateData(t, this.displayedMemory);\n                }\n                if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) { // Start of a new cue\n                    this.cueStartTime = t;\n                } else {\n                    if (!this.displayedMemory.equals(this.lastOutputScreen)) { \n                        if (this.outputFilter.newCue) {\n                            this.outputFilter.newCue(this.cueStartTime, t, this.lastOutputScreen);\n                        }\n                        this.cueStartTime = this.displayedMemory.isEmpty() ? null : t;\n                    }\n                }\n                this.lastOutputScreen.copy(this.displayedMemory);\n            }\n        },\n\n        cueSplitAtTime : function(t) {\n            if (this.outputFilter) {\n                if (!this.displayedMemory.isEmpty()) {\n                    if (this.outputFilter.newCue) {\n                        this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);\n                    }\n                    this.cueStartTime = t;\n                }\n            }\n        }\n    };\n\n    /**\n     * Parse CEA-608 data and send decoded data to out1 and out2.\n     * @constructor\n     * @param {Number} field  CEA-608 field (1 or 2)\n     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)\n     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)\n     */\n    var Cea608Parser = function(field, out1, out2) {\n        this.field = field || 1;\n        this.outputs = [out1, out2];\n        this.channels = [new Cea608Channel(1, out1), new Cea608Channel(2, out2)];\n        this.currChNr = -1; // Will be 1 or 2\n        this.lastCmdA = null; // First byte of last command\n        this.lastCmdB = null; // Second byte of last command\n        this.bufferedData = [];\n        this.startTime = null;\n        this.lastTime = null;\n        this.dataCounters = {'padding' : 0, 'char' : 0, 'cmd' : 0, 'other' : 0};\n    };\n\n    Cea608Parser.prototype = {\n        \n        getHandler : function(index) {\n            return this.channels[index].getHandler();\n        },\n        \n        setHandler : function(index, newHandler) {\n            this.channels[index].setHandler(newHandler);\n        },\n\n        /**\n         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n         */\n        addData : function(t, byteList) {\n            var cmdFound, a, b, \n            charsFound = false;\n            \n            this.lastTime = t;\n            logger.setTime(t);\n\n            for (var i = 0 ; i < byteList.length ; i+=2) {\n                a = byteList[i] & 0x7f;\n                b = byteList[i+1] & 0x7f;\n\n                if (a >= 0x10 && a <= 0x1f && a === this.lastCmdA && b === this.lastCmdB) {\n                    this.lastCmdA = null;\n                    this.lastCmdB = null;\n                    logger.log(\"DEBUG\", \"Repeated command (\" + numArrayToHexArray([a, b]) + \") is dropped\");\n                    continue; // Repeated commands are dropped (once)\n                }\n\n                if (a === 0 && b === 0) {\n                    this.dataCounters.padding += 2;\n                    continue;\n                } else {\n                    logger.log(\"DATA\", \"[\" + numArrayToHexArray([byteList[i], byteList[i+1]]) +\"] -> (\" + numArrayToHexArray([a, b]) + \")\");\n                }\n                cmdFound = this.parseCmd(a, b);\n                if (!cmdFound) {\n                    cmdFound = this.parseMidrow(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parsePAC(a, b);\n                }\n                if (!cmdFound) {\n                    cmdFound = this.parseBackgroundAttributes(a, b);\n                }\n                if (!cmdFound) {\n                    charsFound = this.parseChars(a, b);\n                    if (charsFound) {\n                        if (this.currChNr && this.currChNr >=0) {\n                            var channel = this.channels[this.currChNr-1];\n                            channel.insertChars(charsFound);\n                        } else {\n                            logger.log(\"WARNING\", \"No channel found yet. TEXT-MODE?\");\n                        }\n                    }\n                }\n                if (cmdFound) {\n                    this.dataCounters.cmd += 2;\n                } else if (charsFound) {\n                    this.dataCounters.char += 2;\n                } else {\n                    this.dataCounters.other += 2;\n                    logger.log(\"WARNING\", \"Couldn't parse cleaned data \" + numArrayToHexArray([a, b]) +\n                                \" orig: \" + numArrayToHexArray([byteList[i], byteList[i+1]]));\n                }\n            }\n        },\n\n        /**\n         * Parse Command.\n         * @returns {Boolean} Tells if a command was found\n         */\n        parseCmd: function(a, b) {\n            var chNr = null;\n\n            var cond1 = (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) && (0x20 <= b && b <= 0x2F);\n            var cond2 = (a === 0x17 || a === 0x1F) && (0x21 <= b && b <= 0x23);\n            if (!(cond1 || cond2)) {\n                return false;\n            }\n                 \n            if (a === 0x14 || a === 0x15 || a === 0x17) {\n                chNr = 1;\n            } else {\n                chNr = 2; // (a === 0x1C || a === 0x1D || a=== 0x1f)\n            }\n\n            var channel = this.channels[chNr - 1];\n\n            if (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) {\n                if (b === 0x20) {\n                    channel.cc_RCL();\n                } else if (b === 0x21) {\n                    channel.cc_BS();\n                } else if (b === 0x22) {\n                    channel.cc_AOF();\n                } else if (b === 0x23) {\n                    channel.cc_AON();\n                } else if (b === 0x24) {\n                    channel.cc_DER();\n                } else if (b === 0x25) {\n                    channel.cc_RU(2);\n                } else if (b === 0x26) {\n                    channel.cc_RU(3);\n                } else if (b === 0x27) {\n                    channel.cc_RU(4);\n                } else if (b === 0x28) {\n                    channel.cc_FON();\n                } else if (b === 0x29) {\n                    channel.cc_RDC();\n                } else if (b === 0x2A) {\n                    channel.cc_TR();\n                } else if (b === 0x2B) {\n                    channel.cc_RTD();\n                } else if (b === 0x2C) {\n                    channel.cc_EDM();\n                } else if (b === 0x2D) {\n                    channel.cc_CR();\n                } else if (b === 0x2E) {\n                    channel.cc_ENM();\n                } else if (b === 0x2F) {\n                    channel.cc_EOC();\n                }\n            } else { //a == 0x17 || a == 0x1F\n                channel.cc_TO(b - 0x20);\n            }\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Parse midrow styling command\n         * @returns {Boolean}\n         */\n        parseMidrow : function(a, b) {\n            var chNr = null;\n                \n            if ( ((a === 0x11) || (a === 0x19)) && 0x20 <= b && b <= 0x2f) {\n                if (a === 0x11) {\n                    chNr = 1;\n                } else  {\n                    chNr = 2;\n                }\n                if (chNr !== this.currChNr) {\n                    logger.log(\"ERROR\", \"Mismatch channel in midrow parsing\");\n                    return false;\n                }\n                var channel = this.channels[chNr-1];\n                // cea608 spec says midrow codes should inject a space\n                channel.insertChars([0x20]);\n                channel.cc_MIDROW(b);\n                logger.log(\"DEBUG\", \"MIDROW (\" + numArrayToHexArray([a, b]) + \")\");\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Parse Preable Access Codes (Table 53).\n         * @returns {Boolean} Tells if PAC found\n         */\n        parsePAC : function(a, b) {\n\n           var chNr = null;\n           var row = null;\n            \n            var case1 = ((0x11 <= a  && a <= 0x17) || (0x19 <= a && a <= 0x1F)) && (0x40 <= b && b <= 0x7F);\n            var case2 = (a === 0x10 || a === 0x18) && (0x40 <= b && b <= 0x5F);\n            if (! (case1 || case2)) {\n                return false;\n            }\n\n            chNr = (a <= 0x17) ? 1 : 2;\n\n            if (0x40 <= b && b <= 0x5F) {\n                row = (chNr === 1) ? rowsLowCh1[a] : rowsLowCh2[a];\n            } else { // 0x60 <= b <= 0x7F\n                row = (chNr === 1) ? rowsHighCh1[a] : rowsHighCh2[a];\n            }\n            var pacData = this.interpretPAC(row, b);\n            var channel = this.channels[chNr-1];\n            channel.setPAC(pacData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            this.currChNr = chNr;\n            return true;\n        },\n\n        /**\n         * Interpret the second byte of the pac, and return the information.\n         * @returns {Object} pacData with style parameters.\n         */\n        interpretPAC : function (row, byte) {\n            var pacIndex = byte;\n            var pacData = {color : null, italics : false, indent : null, underline : false, row : row};\n            \n            if (byte > 0x5F) {\n                pacIndex = byte - 0x60;\n            } else {\n                pacIndex = byte - 0x40;\n            }\n            pacData.underline = (pacIndex & 1) === 1;\n            if (pacIndex <= 0xd) {\n                pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex/2)];\n            } else if (pacIndex <= 0xf) {\n                pacData.italics = true;\n                pacData.color = 'white';\n            } else {\n                pacData.indent = (Math.floor((pacIndex-0x10)/2))*4;\n            }\n            return pacData; // Note that row has zero offset. The spec uses 1.\n        },\n\n        /**\n         * Parse characters.\n         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n         */\n        parseChars : function(a, b) {\n\n           var  channelNr = null,\n                charCodes = null,\n                charCode1 = null,\n                charCode2 = null;\n\n            if (a >= 0x19) {\n                channelNr = 2;\n                charCode1 = a - 8;\n            } else {\n                channelNr = 1;\n                charCode1 = a;\n            }\n            if (0x11 <= charCode1 && charCode1 <= 0x13) {\n                // Special character\n                var oneCode = b;\n                if (charCode1 === 0x11) {\n                    oneCode = b + 0x50;\n                } else if (charCode1 === 0x12) {\n                    oneCode = b + 0x70;\n                } else {\n                    oneCode = b + 0x90;\n                }\n                logger.log(\"INFO\", \"Special char '\" + getCharForByte(oneCode) + \"' in channel \" + channelNr);\n                charCodes = [oneCode];\n                this.lastCmdA = a;\n                this.lastCmdB = b;\n            } else if (0x20 <= a && a <= 0x7f) {\n                charCodes = (b === 0) ? [a] : [a, b];\n                this.lastCmdA = null;\n                this.lastCmdB = null;\n            }\n            if (charCodes) {\n                var hexCodes = numArrayToHexArray(charCodes);\n                logger.log(\"DEBUG\", \"Char codes =  \" + hexCodes.join(\",\"));\n            }\n            return charCodes;\n        },\n        \n        /**\n        * Parse extended background attributes as well as new foreground color black.\n        * @returns{Boolean} Tells if background attributes are found\n        */\n        parseBackgroundAttributes : function(a, b) {\n           var  bkgData,\n                index,\n                chNr,\n                channel;\n\n            var case1 = (a === 0x10 || a === 0x18) && (0x20 <= b && b <= 0x2f);\n            var case2 = (a === 0x17 || a === 0x1f) && (0x2d <=b && b <= 0x2f);\n            if (!(case1 || case2)) {\n                return false;\n            }\n            bkgData = {};\n            if (a  === 0x10 || a === 0x18) {\n                index = Math.floor((b-0x20)/2);\n                bkgData.background = backgroundColors[index];\n                if (b % 2 === 1) {\n                    bkgData.background = bkgData.background + \"_semi\";\n                }\n            } else if (b === 0x2d) {\n                bkgData.background = \"transparent\";\n            } else {\n                bkgData.foreground = \"black\";\n                if (b === 0x2f) {\n                    bkgData.underline = true;\n                }\n            }\n            chNr = (a < 0x18) ? 1 : 2;\n            channel = this.channels[chNr-1];\n            channel.setBkgData(bkgData);\n            this.lastCmdA = a;\n            this.lastCmdB = b;\n            return true;\n        },\n\n        /**\n         * Reset state of parser and its channels.\n         */\n        reset : function() {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].reset();\n                }\n            }\n            this.lastCmdA = null;\n            this.lastCmdB = null;\n        },\n\n        /**\n         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n         */\n        cueSplitAtTime : function(t) {\n            for (var i=0 ; i < this.channels.length ; i++) {\n                if (this.channels[i]) {\n                    this.channels[i].cueSplitAtTime(t);\n                }\n            }\n        },\n    };\n\n    /**\n     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.\n     * @param {raw} dataView of binary data\n     * @param {startPos} start position in raw\n     * @param {size} total size of data in raw to consider\n     * @returns \n     */\n    var findCea608Nalus = function(raw, startPos, size) {\n        var nalSize = 0,\n            cursor = startPos,\n            nalType = 0,\n            cea608NaluRanges = [],\n            // Check SEI data according to ANSI-SCTE 128\n            isCEA608SEI = function (payloadType, payloadSize, raw, pos) {\n                if (payloadType !== 4 || payloadSize < 8) {\n                    return null;\n                }\n                var countryCode = raw.getUint8(pos);\n                var providerCode = raw.getUint16(pos + 1);\n                var userIdentifier = raw.getUint32(pos + 3);\n                var userDataTypeCode = raw.getUint8(pos + 7);\n                return countryCode == 0xB5 && providerCode == 0x31 && userIdentifier == 0x47413934 && userDataTypeCode == 0x3;\n            };\n        while (cursor < startPos + size) {\n            nalSize = raw.getUint32(cursor);\n            nalType = raw.getUint8(cursor + 4) & 0x1F;\n            //console.log(time + \"  NAL \" + nalType);\n            if (nalType === 6) {\n                // SEI NAL Unit. The NAL header is the first byte\n                //console.log(\"SEI NALU of size \" + nalSize + \" at time \" + time);\n                var pos = cursor + 5;\n                var payloadType = -1;\n                while (pos < cursor + 4 + nalSize - 1) { // The last byte should be rbsp_trailing_bits\n                    payloadType = 0;\n                    var b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadType += b;\n                        pos++;\n                    }\n                    var payloadSize = 0;\n                    b = 0xFF;\n                    while (b === 0xFF) {\n                        b = raw.getUint8(pos);\n                        payloadSize += b;\n                        pos++;\n                    }\n                    if (isCEA608SEI(payloadType, payloadSize, raw, pos)) {\n                        //console.log(\"CEA608 SEI \" + time + \" \" + payloadSize);\n                        cea608NaluRanges.push([pos, payloadSize]);\n                    }\n                    pos += payloadSize;\n                }\n            }\n            cursor += nalSize + 4;\n        }\n        return cea608NaluRanges;\n    };\n    \n    var extractCea608DataFromRange = function(raw, cea608Range) {\n        var pos = cea608Range[0];\n        var fieldData = [[], []];\n\n        pos += 8; // Skip the identifier up to userDataTypeCode\n        var ccCount = raw.getUint8(pos) & 0x1f;\n        pos += 2; // Advance 1 and skip reserved byte\n          \n        for (var i = 0; i < ccCount; i++) {\n            var byte = raw.getUint8(pos);\n            var ccValid = byte & 0x4;\n            var ccType = byte & 0x3;\n            pos++;\n            var ccData1 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            var ccData2 = raw.getUint8(pos); // Keep parity bit\n            pos++;\n            if (ccValid && ((ccData1 & 0x7f) + (ccData2 & 0x7f) !== 0)) { //Check validity and non-empty data\n                if (ccType === 0) {\n                    fieldData[0].push(ccData1);\n                    fieldData[0].push(ccData2);\n                } else if (ccType === 1) {\n                    fieldData[1].push(ccData1);\n                    fieldData[1].push(ccData2);\n                }\n            }\n        }\n        return fieldData;\n    };\n\n    exports.logger = logger;\n    exports.PenState = PenState;\n    exports.CaptionScreen = CaptionScreen;  \n    exports.Cea608Parser = Cea608Parser;\n    exports.findCea608Nalus = findCea608Nalus;\n    exports.extractCea608DataFromRange = extractCea608DataFromRange;\n\n}(typeof exports === 'undefined' ? this.cea608parser = {} : exports));\n","/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\n/*\n  Further modified for dashjs to:\n  - keep track of children nodes in order in attribute __children.\n  - add type conversion matchers\n  - re-add ignoreRoot\n  - allow zero-length attributePrefix\n  - don't add white-space text nodes\n  - remove explicit RequireJS support\n*/\n\nfunction X2JS(config) {\n    'use strict';\n\n    var VERSION = \"1.2.0\";\n\n    config = config || {};\n    initConfigDefaults();\n    initRequiredPolyfills();\n\n    function initConfigDefaults() {\n        if(config.escapeMode === undefined) {\n            config.escapeMode = true;\n        }\n\n        if (config.attributePrefix === undefined) {\n            config.attributePrefix = \"_\";\n        }\n\n        config.arrayAccessForm = config.arrayAccessForm || \"none\";\n        config.emptyNodeForm = config.emptyNodeForm || \"text\";\n\n        if(config.enableToStringFunc === undefined) {\n            config.enableToStringFunc = true;\n        }\n        config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n        if(config.skipEmptyTextNodesForObj === undefined) {\n            config.skipEmptyTextNodesForObj = true;\n        }\n        if(config.stripWhitespaces === undefined) {\n            config.stripWhitespaces = true;\n        }\n        config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n\n        if(config.useDoubleQuotes === undefined) {\n            config.useDoubleQuotes = false;\n        }\n\n        config.xmlElementsFilter = config.xmlElementsFilter || [];\n        config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\n\n        if(config.keepCData === undefined) {\n            config.keepCData = false;\n        }\n\n        if (config.ignoreRoot === undefined) {\n            config.ignoreRoot = false;\n        }\n    }\n\n    var DOMNodeTypes = {\n        ELEMENT_NODE \t   : 1,\n        TEXT_NODE    \t   : 3,\n        CDATA_SECTION_NODE : 4,\n        COMMENT_NODE\t   : 8,\n        DOCUMENT_NODE \t   : 9\n    };\n\n    function initRequiredPolyfills() {\n    }\n\n    function getNodeLocalName( node ) {\n        var nodeLocalName = node.localName;\n        if(nodeLocalName == null) // Yeah, this is IE!!\n            nodeLocalName = node.baseName;\n        if(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\n            nodeLocalName = node.nodeName;\n        return nodeLocalName;\n    }\n\n    function getNodePrefix(node) {\n        return node.prefix;\n    }\n\n    function escapeXmlChars(str) {\n        if(typeof(str) == \"string\")\n            return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n        else\n            return str;\n    }\n\n    function unescapeXmlChars(str) {\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n    }\n\n    function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\n        var idx = 0;\n        for(; idx < stdFiltersArrayForm.length; idx++) {\n            var filterPath = stdFiltersArrayForm[idx];\n            if( typeof filterPath === \"string\" ) {\n                if(filterPath == path)\n                    break;\n            }\n            else\n            if( filterPath instanceof RegExp) {\n                if(filterPath.test(path))\n                    break;\n            }\n            else\n            if( typeof filterPath === \"function\") {\n                if(filterPath(obj, name, path))\n                    break;\n            }\n        }\n        return idx!=stdFiltersArrayForm.length;\n    }\n\n    function toArrayAccessForm(obj, childName, path) {\n        switch(config.arrayAccessForm) {\n            case \"property\":\n                if(!(obj[childName] instanceof Array))\n                    obj[childName+\"_asArray\"] = [obj[childName]];\n                else\n                    obj[childName+\"_asArray\"] = obj[childName];\n                break;\n            /*case \"none\":\n                break;*/\n        }\n\n        if(!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n            if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\n                obj[childName] = [obj[childName]];\n            }\n        }\n    }\n\n    function fromXmlDateTime(prop) {\n        // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n        // Improved to support full spec and optional parts\n        var bits = prop.split(/[-T:+Z]/g);\n\n        var d = new Date(bits[0], bits[1]-1, bits[2]);\n        var secondBits = bits[5].split(\"\\.\");\n        d.setHours(bits[3], bits[4], secondBits[0]);\n        if(secondBits.length>1)\n            d.setMilliseconds(secondBits[1]);\n\n        // Get supplied time zone offset in minutes\n        if(bits[6] && bits[7]) {\n            var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n            var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop)? '-' : '+';\n\n            // Apply the sign\n            offsetMinutes = 0 + (sign == '-'? -1 * offsetMinutes : offsetMinutes);\n\n            // Apply offset and local timezone\n            d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n        }\n        else\n            if(prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n            }\n\n        // d is now a local time equivalent to the supplied time\n        return d;\n    }\n\n    function checkFromXmlDateTimePaths(value, childName, fullPath) {\n        if(config.datetimeAccessFormPaths.length > 0) {\n            var path = fullPath.split(\"\\.#\")[0];\n            if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\n                return fromXmlDateTime(value);\n            }\n            else\n                return value;\n        }\n        else\n            return value;\n    }\n\n    function checkXmlElementsFilter(obj, childType, childName, childPath) {\n        if( childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\n            return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\n        }\n        else\n            return true;\n    }\n\n    function parseDOMChildren( node, path ) {\n        if(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n            var result = new Object;\n            var nodeChildren = node.childNodes;\n            // Alternative for firstElementChild which is not supported in some environments\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                if(child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                    if (config.ignoreRoot) {\n                        result = parseDOMChildren(child);\n                    } else {\n                        result = {};\n                        var childName = getNodeLocalName(child);\n                        result[childName] = parseDOMChildren(child);\n                    }\n                }\n            }\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n            var result = new Object;\n            result.__cnt=0;\n\n            var children = [];\n            var nodeChildren = node.childNodes;\n\n            // Children nodes\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                var childName = getNodeLocalName(child);\n\n                if(child.nodeType!= DOMNodeTypes.COMMENT_NODE) {\n                    var childPath = path+\".\"+childName;\n                    if (checkXmlElementsFilter(result,child.nodeType,childName,childPath)) {\n                        result.__cnt++;\n                        if(result[childName] == null) {\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                                var o = {};\n                                o[childName] = c;\n                                children.push(o);\n                            }\n                            result[childName] = c;\n                            toArrayAccessForm(result, childName, childPath);\n                        }\n                        else {\n                            if(result[childName] != null) {\n                                if( !(result[childName] instanceof Array)) {\n                                    result[childName] = [result[childName]];\n                                    toArrayAccessForm(result, childName, childPath);\n                                }\n                            }\n\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\n                                var o = {};\n                                o[childName] = c;\n                                children.push( o );\n                            }\n                            (result[childName])[result[childName].length] = c;\n                        }\n                    }\n                }\n            }\n\n            result.__children = children;\n\n            // Attributes\n            var nodeLocalName = getNodeLocalName(node)\n            for(var aidx=0; aidx <node.attributes.length; aidx++) {\n                var attr = node.attributes[aidx];\n                result.__cnt++;\n\n                var value2 = attr.value;\n                for(var m=0, ml=config.matchers.length; m < ml; m++) {\n                    var matchobj = config.matchers[m];\n                    if (matchobj.test(attr, nodeLocalName))\n                        value2 = matchobj.converter(attr.value);\n                }\n\n                result[config.attributePrefix+attr.name]=value2;\n            }\n\n            // Node namespace prefix\n            var nodePrefix = getNodePrefix(node);\n            if(nodePrefix!=null && nodePrefix!=\"\") {\n                result.__cnt++;\n                result.__prefix=nodePrefix;\n            }\n\n            if(result[\"#text\"]!=null) {\n                result.__text = result[\"#text\"];\n                if(result.__text instanceof Array) {\n                    result.__text = result.__text.join(\"\\n\");\n                }\n                //if(config.escapeMode)\n                //\tresult.__text = unescapeXmlChars(result.__text);\n                if(config.stripWhitespaces)\n                    result.__text = result.__text.trim();\n                delete result[\"#text\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#text_asArray\"];\n                result.__text = checkFromXmlDateTimePaths(result.__text, childName, path+\".\"+childName);\n            }\n            if(result[\"#cdata-section\"]!=null) {\n                result.__cdata = result[\"#cdata-section\"];\n                delete result[\"#cdata-section\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#cdata-section_asArray\"];\n            }\n\n            if( result.__cnt == 0 && config.emptyNodeForm==\"text\" ) {\n                result = '';\n            }\n            else\n            if( result.__cnt == 1 && result.__text!=null  ) {\n                result = result.__text;\n            }\n            else\n            if( result.__cnt == 1 && result.__cdata!=null && !config.keepCData  ) {\n                result = result.__cdata;\n            }\n            else\n            if ( result.__cnt > 1 && result.__text!=null && config.skipEmptyTextNodesForObj) {\n                if( (config.stripWhitespaces && result.__text==\"\") || (result.__text.trim()==\"\")) {\n                    delete result.__text;\n                }\n            }\n            delete result.__cnt;\n\n            if( config.enableToStringFunc && (result.__text!=null || result.__cdata!=null )) {\n                result.toString = function() {\n                    return (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\n                };\n            }\n\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n            return node.nodeValue;\n        }\n    }\n\n    function startTag(jsonObj, element, attrList, closed) {\n        var resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\n        if(attrList!=null) {\n            for(var aidx = 0; aidx < attrList.length; aidx++) {\n                var attrName = attrList[aidx];\n                var attrVal = jsonObj[attrName];\n                if(config.escapeMode)\n                    attrVal=escapeXmlChars(attrVal);\n                resultStr+=\" \"+attrName.substr(config.attributePrefix.length)+\"=\";\n                if(config.useDoubleQuotes)\n                    resultStr+='\"'+attrVal+'\"';\n                else\n                    resultStr+=\"'\"+attrVal+\"'\";\n            }\n        }\n        if(!closed)\n            resultStr+=\">\";\n        else\n            resultStr+=\"/>\";\n        return resultStr;\n    }\n\n    function endTag(jsonObj,elementName) {\n        return \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\n    }\n\n    function endsWith(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\n        if((config.arrayAccessForm==\"property\" && endsWith(jsonObjField.toString(),(\"_asArray\")))\n                || jsonObjField.toString().indexOf(config.attributePrefix)==0\n                || jsonObjField.toString().indexOf(\"__\")==0\n                || (jsonObj[jsonObjField] instanceof Function) )\n            return true;\n        else\n            return false;\n    }\n\n    function jsonXmlElemCount ( jsonObj ) {\n        var elementsCnt = 0;\n        if(jsonObj instanceof Object ) {\n            for( var it in jsonObj  ) {\n                if(jsonXmlSpecialElem ( jsonObj, it) )\n                    continue;\n                elementsCnt++;\n            }\n        }\n        return elementsCnt;\n    }\n\n    function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\n        return config.jsonPropertiesFilter.length == 0\n            || jsonObjPath==\"\"\n            || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\n    }\n\n    function parseJSONAttributes ( jsonObj ) {\n        var attrList = [];\n        if(jsonObj instanceof Object ) {\n            for( var ait in jsonObj  ) {\n                if(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(config.attributePrefix)==0) {\n                    attrList.push(ait);\n                }\n            }\n        }\n        return attrList;\n    }\n\n    function parseJSONTextAttrs ( jsonTxtObj ) {\n        var result =\"\";\n\n        if(jsonTxtObj.__cdata!=null) {\n            result+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\n        }\n\n        if(jsonTxtObj.__text!=null) {\n            if(config.escapeMode)\n                result+=escapeXmlChars(jsonTxtObj.__text);\n            else\n                result+=jsonTxtObj.__text;\n        }\n        return result;\n    }\n\n    function parseJSONTextObject ( jsonTxtObj ) {\n        var result =\"\";\n\n        if( jsonTxtObj instanceof Object ) {\n            result+=parseJSONTextAttrs ( jsonTxtObj );\n        }\n        else\n            if(jsonTxtObj!=null) {\n                if(config.escapeMode)\n                    result+=escapeXmlChars(jsonTxtObj);\n                else\n                    result+=jsonTxtObj;\n            }\n\n        return result;\n    }\n\n    function getJsonPropertyPath(jsonObjPath, jsonPropName) {\n        if (jsonObjPath===\"\") {\n            return jsonPropName;\n        }\n        else\n            return jsonObjPath+\".\"+jsonPropName;\n    }\n\n    function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {\n        var result = \"\";\n        if(jsonArrRoot.length == 0) {\n            result+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\n        }\n        else {\n            for(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                result+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                result+=parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath,jsonArrObj));\n                result+=endTag(jsonArrRoot[arIdx],jsonArrObj);\n            }\n        }\n        return result;\n    }\n\n    function parseJSONObject ( jsonObj, jsonObjPath ) {\n        var result = \"\";\n\n        var elementsCnt = jsonXmlElemCount ( jsonObj );\n\n        if(elementsCnt > 0) {\n            for( var it in jsonObj ) {\n\n                if(jsonXmlSpecialElem ( jsonObj, it) || (jsonObjPath!=\"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath,it))) )\n                    continue;\n\n                var subObj = jsonObj[it];\n\n                var attrList = parseJSONAttributes( subObj )\n\n                if(subObj == null || subObj == undefined) {\n                    result+=startTag(subObj, it, attrList, true);\n                }\n                else\n                if(subObj instanceof Object) {\n\n                    if(subObj instanceof Array) {\n                        result+=parseJSONArray( subObj, it, attrList, jsonObjPath );\n                    }\n                    else if(subObj instanceof Date) {\n                        result+=startTag(subObj, it, attrList, false);\n                        result+=subObj.toISOString();\n                        result+=endTag(subObj,it);\n                    }\n                    else {\n                        var subObjElementsCnt = jsonXmlElemCount ( subObj );\n                        if(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\n                            result+=startTag(subObj, it, attrList, false);\n                            result+=parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath,it));\n                            result+=endTag(subObj,it);\n                        }\n                        else {\n                            result+=startTag(subObj, it, attrList, true);\n                        }\n                    }\n                }\n                else {\n                    result+=startTag(subObj, it, attrList, false);\n                    result+=parseJSONTextObject(subObj);\n                    result+=endTag(subObj,it);\n                }\n            }\n        }\n        result+=parseJSONTextObject(jsonObj);\n\n        return result;\n    }\n\n    this.parseXmlString = function(xmlDocStr) {\n        var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n        if (xmlDocStr === undefined) {\n            return null;\n        }\n        var xmlDoc;\n        if (window.DOMParser) {\n            var parser=new window.DOMParser();\n            var parsererrorNS = null;\n            try {\n                xmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\n                if(xmlDoc.getElementsByTagNameNS(\"*\", \"parsererror\").length > 0) {\n                    xmlDoc = null;\n                }\n            }\n            catch(err) {\n                xmlDoc = null;\n            }\n        }\n        else {\n            // IE :(\n            if(xmlDocStr.indexOf(\"<?\")==0) {\n                xmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\n            }\n            xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async=\"false\";\n            xmlDoc.loadXML(xmlDocStr);\n        }\n        return xmlDoc;\n    };\n\n    this.asArray = function(prop) {\n        if (prop === undefined || prop == null)\n            return [];\n        else\n        if(prop instanceof Array)\n            return prop;\n        else\n            return [prop];\n    };\n\n    this.toXmlDateTime = function(dt) {\n        if(dt instanceof Date)\n            return dt.toISOString();\n        else\n        if(typeof(dt) === 'number' )\n            return new Date(dt).toISOString();\n        else\n            return null;\n    };\n\n    this.asDateTime = function(prop) {\n        if(typeof(prop) == \"string\") {\n            return fromXmlDateTime(prop);\n        }\n        else\n            return prop;\n    };\n\n    this.xml2json = function (xmlDoc) {\n        return parseDOMChildren ( xmlDoc );\n    };\n\n    this.xml_str2json = function (xmlDocStr) {\n        var xmlDoc = this.parseXmlString(xmlDocStr);\n        if(xmlDoc!=null)\n            return this.xml2json(xmlDoc);\n        else\n            return null;\n    };\n\n    this.json2xml_str = function (jsonObj) {\n        return parseJSONObject ( jsonObj, \"\" );\n    };\n\n    this.json2xml = function (jsonObj) {\n        var xmlDocStr = this.json2xml_str (jsonObj);\n        return this.parseXmlString(xmlDocStr);\n    };\n\n    this.getVersion = function () {\n        return VERSION;\n    };\n}\n\nexport default X2JS;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MediaPlayer from './src/streaming/MediaPlayer';\nimport FactoryMaker from './src/core/FactoryMaker';\nimport Debug from './src/core/Debug';\nimport {getVersionString} from './src/core/Version';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MediaPlayer = MediaPlayer;\ndashjs.FactoryMaker = FactoryMaker;\ndashjs.Debug = Debug;\ndashjs.Version = getVersionString();\n\nexport default dashjs;\nexport { MediaPlayer, FactoryMaker, Debug};\n","/*! codem-isoboxer v0.3.5 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset + 8));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1 box\nISOBox.prototype._boxProcessors['avc1'] = ISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // AVCSampleEntry fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  this._procField('scheme_id_uri',            'string', -1);\n  this._procField('value',                    'string', -1);\n  this._procField('timescale',                'uint',   32);\n  this._procField('presentation_time_delta',  'uint',   32);\n  this._procField('event_duration',           'uint',   32);\n  this._procField('id',                       'uint',   32);\n  this._procField('message_data',             'data',   -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  var arrA = isArray(a)\n    , arrB = isArray(b)\n    , i\n    , length\n    , key;\n\n  if (arrA && arrB) {\n    length = a.length;\n    if (length != b.length) return false;\n    for (i = 0; i < length; i++)\n      if (!equal(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  var dateA = a instanceof Date\n    , dateB = b instanceof Date;\n  if (dateA != dateB) return false;\n  if (dateA && dateB) return a.getTime() == b.getTime();\n\n  var regexpA = a instanceof RegExp\n    , regexpB = b instanceof RegExp;\n  if (regexpA != regexpB) return false;\n  if (regexpA && regexpB) return a.toString() == b.toString();\n\n  if (a instanceof Object && b instanceof Object) {\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = 0; i < length; i++)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require(19);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require(16);\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require(11);\nutil.inherits = require(14);\n/*</replacement>*/\n\nvar Readable = require(21);\nvar Writable = require(23);\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require(22);\n\n/*<replacement>*/\nvar util = require(11);\nutil.inherits = require(14);\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require(19);\n\n/*<replacement>*/\nvar util = require(11);\nutil.inherits = require(14);\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require(33).Buffer;\nvar util = require(8);\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require(16);\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require(12).EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require(33).Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","module.exports = require(30).PassThrough\n","exports = module.exports = require(21);\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require(23);\nexports.Duplex = require(19);\nexports.Transform = require(22);\nexports.PassThrough = require(20);\n","module.exports = require(30).Transform\n","module.exports = require(23);\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require(9)\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require(12).EventEmitter;\nvar inherits = require(14);\n\ninherits(Stream, EE);\nStream.Readable = require(30);\nStream.Writable = require(32);\nStream.Duplex = require(18);\nStream.Transform = require(31);\nStream.PassThrough = require(29);\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require(9).Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscDoc\r\n */\r\n\r\n;\r\n(function (imscDoc, sax, imscNames, imscStyles, imscUtils) {\r\n\r\n\r\n    /**\r\n     * Allows a client to provide callbacks to handle children of the <metadata> element\r\n     * @typedef {Object} MetadataHandler\r\n     * @property {?OpenTagCallBack} onOpenTag\r\n     * @property {?CloseTagCallBack} onCloseTag\r\n     * @property {?TextCallBack} onText\r\n     */\r\n\r\n    /**\r\n     * Called when the opening tag of an element node is encountered.\r\n     * @callback OpenTagCallBack\r\n     * @param {string} ns Namespace URI of the element\r\n     * @param {string} name Local name of the element\r\n     * @param {Object[]} attributes List of attributes, each consisting of a\r\n     *                              `uri`, `name` and `value`\r\n     */\r\n\r\n    /**\r\n     * Called when the closing tag of an element node is encountered.\r\n     * @callback CloseTagCallBack\r\n     */\r\n\r\n    /**\r\n     * Called when a text node is encountered.\r\n     * @callback TextCallBack\r\n     * @param {string} contents Contents of the text node\r\n     */\r\n\r\n    /**\r\n     * Parses an IMSC1 document into an opaque in-memory representation that exposes\r\n     * a single method <pre>getMediaTimeEvents()</pre> that returns a list of time\r\n     * offsets (in seconds) of the ISD, i.e. the points in time where the visual\r\n     * representation of the document change. `metadataHandler` allows the caller to\r\n     * be called back when nodes are present in <metadata> elements. \r\n     * \r\n     * @param {string} xmlstring XML document\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {?MetadataHandler} metadataHandler Callback for <Metadata> elements\r\n     * @returns {Object} Opaque in-memory representation of an IMSC1 document\r\n     */\r\n\r\n    imscDoc.fromXML = function (xmlstring, errorHandler, metadataHandler) {\r\n        var p = sax.parser(true, {xmlns: true});\r\n        var estack = [];\r\n        var xmllangstack = [];\r\n        var xmlspacestack = [];\r\n        var metadata_depth = 0;\r\n        var doc = null;\r\n\r\n        p.onclosetag = function (node) {\r\n\r\n            if (estack[0] instanceof Styling) {\r\n\r\n                /* flatten chained referential styling */\r\n\r\n                for (var sid in estack[0].styles) {\r\n\r\n                    mergeChainedStyles(estack[0], estack[0].styles[sid], errorHandler);\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof P || estack[0] instanceof Span) {\r\n\r\n                /* merge anonymous spans */\r\n\r\n                if (estack[0].contents.length > 1) {\r\n\r\n                    var cs = [estack[0].contents[0]];\r\n\r\n                    var c;\r\n\r\n                    for (c = 1; c < estack[0].contents.length; c++) {\r\n\r\n                        if (estack[0].contents[c] instanceof AnonymousSpan &&\r\n                                cs[cs.length - 1] instanceof AnonymousSpan) {\r\n\r\n                            cs[cs.length - 1].text += estack[0].contents[c].text;\r\n\r\n                        } else {\r\n\r\n                            cs.push(estack[0].contents[c]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    estack[0].contents = cs;\r\n\r\n                }\r\n\r\n                // remove redundant nested anonymous spans (9.3.3(1)(c))\r\n\r\n                if (estack[0] instanceof Span &&\r\n                        estack[0].contents.length === 1 &&\r\n                        estack[0].contents[0] instanceof AnonymousSpan) {\r\n\r\n                    estack[0].text = estack[0].contents[0].text;\r\n                    delete estack[0].contents;\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (estack[0].node.uri === imscNames.ns_tt &&\r\n                        estack[0].node.local === 'metadata') {\r\n\r\n                    /* leave the metadata element */\r\n\r\n                    metadata_depth--;\r\n\r\n                } else if (metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onCloseTag' in metadataHandler) {\r\n\r\n                    /* end of child of metadata element */\r\n\r\n                    metadataHandler.onCloseTag();\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // TODO: delete stylerefs?\r\n\r\n            // maintain the xml:space stack\r\n\r\n            xmlspacestack.shift();\r\n\r\n            // maintain the xml:lang stack\r\n\r\n            xmllangstack.shift();\r\n\r\n            // prepare for the next element\r\n\r\n            estack.shift();\r\n        };\r\n\r\n        p.ontext = function (str) {\r\n\r\n            if (estack[0] === undefined) {\r\n\r\n                /* ignoring text outside of elements */\r\n\r\n            } else if (estack[0] instanceof Span || estack[0] instanceof P) {\r\n\r\n                /* create an anonymous span */\r\n\r\n                var s = new AnonymousSpan();\r\n\r\n                s.initFromText(doc, estack[0], str, xmlspacestack[0], errorHandler);\r\n\r\n                estack[0].contents.push(s);\r\n\r\n            } else if (estack[0] instanceof ForeignElement &&\r\n                    metadata_depth > 0 &&\r\n                    metadataHandler &&\r\n                    'onText' in metadataHandler) {\r\n\r\n                /* text node within a child of metadata element */\r\n\r\n                metadataHandler.onText(str);\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        p.onopentag = function (node) {\r\n\r\n            // maintain the xml:space stack\r\n\r\n            var xmlspace = node.attributes[\"xml:space\"];\r\n\r\n            if (xmlspace) {\r\n\r\n                xmlspacestack.unshift(xmlspace.value);\r\n\r\n            } else {\r\n\r\n                if (xmlspacestack.length === 0) {\r\n\r\n                    xmlspacestack.unshift(\"default\");\r\n\r\n                } else {\r\n\r\n                    xmlspacestack.unshift(xmlspacestack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* maintain the xml:lang stack */\r\n\r\n\r\n            var xmllang = node.attributes[\"xml:lang\"];\r\n\r\n            if (xmllang) {\r\n\r\n                xmllangstack.unshift(xmllang.value);\r\n\r\n            } else {\r\n\r\n                if (xmllangstack.length === 0) {\r\n\r\n                    xmllangstack.unshift(\"\");\r\n\r\n                } else {\r\n\r\n                    xmllangstack.unshift(xmllangstack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            /* process the element */\r\n\r\n            if (node.uri === imscNames.ns_tt) {\r\n\r\n                if (node.local === 'tt') {\r\n\r\n                    if (doc !== null) {\r\n\r\n                        reportFatal(\"Two <tt> elements at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    doc = new TT();\r\n\r\n                    doc.initFromNode(node, errorHandler);\r\n\r\n                    estack.unshift(doc);\r\n\r\n                } else if (node.local === 'head') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n                        reportFatal(\"Parent of <head> element is not <tt> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    if (doc.head !== null) {\r\n                        reportFatal(\"Second <head> element at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    doc.head = new Head();\r\n\r\n                    estack.unshift(doc.head);\r\n\r\n                } else if (node.local === 'styling') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n                        reportFatal(\"Parent of <styling> element is not <head> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    if (doc.head.styling !== null) {\r\n                        reportFatal(\"Second <styling> element at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    doc.head.styling = new Styling();\r\n\r\n                    estack.unshift(doc.head.styling);\r\n\r\n                } else if (node.local === 'style') {\r\n\r\n                    var s;\r\n\r\n                    if (estack[0] instanceof Styling) {\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        /* ignore <style> element missing @id */\r\n\r\n                        if (!s.id) {\r\n\r\n                            reportError(\"<style> element missing @id attribute\");\r\n\r\n                        } else {\r\n\r\n                            doc.head.styling.styles[s.id] = s;\r\n\r\n                        }\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else if (estack[0] instanceof Region) {\r\n\r\n                        /* nested styles can be merged with specified styles\r\n                         * immediately, with lower priority\r\n                         * (see 8.4.4.2(3) at TTML1 )\r\n                         */\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        mergeStylesIfNotPresent(s.styleAttrs, estack[0].styleAttrs);\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <style> element is not <styling> or <region> at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                } else if (node.local === 'layout') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <layout> element is not <head> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    if (doc.head.layout !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Second <layout> element at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    doc.head.layout = new Layout();\r\n\r\n                    estack.unshift(doc.head.layout);\r\n\r\n                } else if (node.local === 'region') {\r\n\r\n                    if (!(estack[0] instanceof Layout)) {\r\n                        reportFatal(errorHandler, \"Parent of <region> element is not <layout> at \" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    var r = new Region();\r\n\r\n                    r.initFromNode(doc, node, errorHandler);\r\n\r\n                    if (!r.id || r.id in doc.head.layout.regions) {\r\n\r\n                        reportError(errorHandler, \"Ignoring <region> with duplicate or missing @id at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    } else {\r\n\r\n                        doc.head.layout.regions[r.id] = r;\r\n\r\n                    }\r\n\r\n                    estack.unshift(r);\r\n\r\n                } else if (node.local === 'body') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <body> element is not <tt> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    if (doc.body !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Second <body> element at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var b = new Body();\r\n\r\n                    b.initFromNode(doc, node, errorHandler);\r\n\r\n                    doc.body = b;\r\n\r\n                    estack.unshift(b);\r\n\r\n                } else if (node.local === 'div') {\r\n\r\n                    if (!(estack[0] instanceof Div || estack[0] instanceof Body)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <div> element is not <body> or <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var d = new Div();\r\n\r\n                    d.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].contents.push(d);\r\n\r\n                    estack.unshift(d);\r\n\r\n                } else if (node.local === 'p') {\r\n\r\n                    if (!(estack[0] instanceof Div)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <p> element is not <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var p = new P();\r\n\r\n                    p.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].contents.push(p);\r\n\r\n                    estack.unshift(p);\r\n\r\n                } else if (node.local === 'span') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <span> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var ns = new Span();\r\n\r\n                    ns.initFromNode(doc, estack[0], node, xmlspacestack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(ns);\r\n\r\n                    estack.unshift(ns);\r\n\r\n                } else if (node.local === 'br') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <br> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var nb = new Br();\r\n\r\n                    nb.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].contents.push(nb);\r\n\r\n                    estack.unshift(nb);\r\n\r\n                } else if (node.local === 'set') {\r\n\r\n                    if (!(estack[0] instanceof Span ||\r\n                            estack[0] instanceof P ||\r\n                            estack[0] instanceof Div ||\r\n                            estack[0] instanceof Body ||\r\n                            estack[0] instanceof Region ||\r\n                            estack[0] instanceof Br)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <set> element is not a content element or a region at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var st = new Set();\r\n\r\n                    st.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].sets.push(st);\r\n\r\n                    estack.unshift(st);\r\n\r\n                } else {\r\n\r\n                    /* element in the TT namespace, but not a content element */\r\n\r\n                    estack.unshift(new ForeignElement(node));\r\n                }\r\n\r\n            } else {\r\n\r\n                /* ignore elements not in the TTML namespace unless in metadata element */\r\n\r\n                estack.unshift(new ForeignElement(node));\r\n\r\n            }\r\n\r\n            /* handle metadata callbacks */\r\n\r\n            if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (node.uri === imscNames.ns_tt &&\r\n                        node.local === 'metadata') {\r\n\r\n                    /* enter the metadata element */\r\n\r\n                    metadata_depth++;\r\n\r\n                } else if (\r\n                        metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onOpenTag' in metadataHandler\r\n                        ) {\r\n\r\n                    /* start of child of metadata element */\r\n\r\n                    var attrs = [];\r\n\r\n                    for (var a in node.attributes) {\r\n                        attrs[node.attributes[a].uri + \" \" + node.attributes[a].local] =\r\n                                {\r\n                                    uri: node.attributes[a].uri,\r\n                                    local: node.attributes[a].local,\r\n                                    value: node.attributes[a].value\r\n                                };\r\n                    }\r\n\r\n                    metadataHandler.onOpenTag(node.uri, node.local, attrs);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // parse the document\r\n\r\n        p.write(xmlstring).close();\r\n\r\n        // all referential styling has been flatten, so delete the styling elements if there is a head\r\n        // otherwise create an empty head\r\n\r\n        if (doc.head !== null) {\r\n            delete doc.head.styling;\r\n        } else {\r\n            doc.head = new Head();\r\n        }\r\n\r\n        // create default region if no regions specified\r\n\r\n        if (doc.head.layout === null) {\r\n\r\n            doc.head.layout = new Layout();\r\n\r\n        }\r\n\r\n        var hasRegions = false;\r\n\r\n        /* AFAIK the only way to determine whether an object has members */\r\n\r\n        for (var i in doc.head.layout.regions) {\r\n\r\n            hasRegions = true;\r\n\r\n            break;\r\n\r\n        }\r\n\r\n        if (!hasRegions) {\r\n\r\n            /* create default region */\r\n\r\n            var dr = Region.prototype.createDefaultRegion();\r\n\r\n            doc.head.layout.regions[dr.id] = dr;\r\n\r\n        }\r\n\r\n        /* resolve desired timing for regions */\r\n\r\n        for (var region_i in doc.head.layout.regions) {\r\n\r\n            resolveTiming(doc, doc.head.layout.regions[region_i], null, null);\r\n\r\n        }\r\n\r\n        /* resolve desired timing for content elements */\r\n\r\n        if (doc.body) {\r\n            resolveTiming(doc, doc.body, null, null);\r\n        }\r\n\r\n        return doc;\r\n    };\r\n\r\n    function resolveTiming(doc, element, prev_sibling, parent) {\r\n\r\n        /* are we in a seq container? */\r\n\r\n        var isinseq = parent && parent.timeContainer === \"seq\";\r\n\r\n        /* determine implicit begin */\r\n\r\n        var implicit_begin = 0; /* default */\r\n\r\n        if (parent) {\r\n\r\n            if (isinseq && prev_sibling) {\r\n\r\n                /*\r\n                 * if seq time container, offset from the previous sibling end\r\n                 */\r\n\r\n                implicit_begin = prev_sibling.end;\r\n\r\n\r\n            } else {\r\n\r\n                implicit_begin = parent.begin;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute desired begin */\r\n\r\n        element.begin = element.explicit_begin ? element.explicit_begin + implicit_begin : implicit_begin;\r\n\r\n\r\n        /* determine implicit end */\r\n\r\n        var implicit_end = element.begin;\r\n\r\n        var s = null;\r\n\r\n        for (var set_i in element.sets) {\r\n\r\n            resolveTiming(doc, element.sets[set_i], s, element);\r\n\r\n            if (element.timeContainer === \"seq\") {\r\n\r\n                implicit_end = element.sets[set_i].end;\r\n\r\n            } else {\r\n\r\n                implicit_end = Math.max(implicit_end, element.sets[set_i].end);\r\n\r\n            }\r\n\r\n            s = element.sets[set_i];\r\n\r\n        }\r\n\r\n        if (!('contents' in element)) {\r\n\r\n            /* anonymous spans and regions and <set> and <br>s and spans with only children text nodes */\r\n\r\n            if (isinseq) {\r\n\r\n                /* in seq container, implicit duration is zero */\r\n\r\n                implicit_end = element.begin;\r\n\r\n            } else {\r\n\r\n                /* in par container, implicit duration is indefinite */\r\n\r\n                implicit_end = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            for (var content_i in element.contents) {\r\n\r\n                resolveTiming(doc, element.contents[content_i], s, element);\r\n\r\n                if (element.timeContainer === \"seq\") {\r\n\r\n                    implicit_end = element.contents[content_i].end;\r\n\r\n                } else {\r\n\r\n                    implicit_end = Math.max(implicit_end, element.contents[content_i].end);\r\n\r\n                }\r\n\r\n                s = element.contents[content_i];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine desired end */\r\n        /* it is never made really clear in SMIL that the explicit end is offset by the implicit begin */\r\n\r\n        if (element.explicit_end !== null && element.explicit_dur !== null) {\r\n\r\n            element.end = Math.min(element.begin + element.explicit_dur, implicit_begin + element.explicit_end);\r\n\r\n        } else if (element.explicit_end === null && element.explicit_dur !== null) {\r\n\r\n            element.end = element.begin + element.explicit_dur;\r\n\r\n        } else if (element.explicit_end !== null && element.explicit_dur === null) {\r\n\r\n            element.end = implicit_begin + element.explicit_end;\r\n\r\n        } else {\r\n\r\n            element.end = implicit_end;\r\n        }\r\n\r\n        delete element.explicit_begin;\r\n        delete element.explicit_dur;\r\n        delete element.explicit_end;\r\n\r\n        doc._registerEvent(element);\r\n\r\n    }\r\n\r\n    function ForeignElement(node) {\r\n        this.node = node;\r\n    }\r\n\r\n    function TT() {\r\n        this.events = [];\r\n        this.head = null;\r\n        this.body = null;\r\n    }\r\n\r\n    TT.prototype.initFromNode = function (node, errorHandler) {\r\n\r\n        /* compute cell resolution */\r\n\r\n        this.cellResolution = extractCellResolution(node, errorHandler);\r\n\r\n        /* extract frame rate and tick rate */\r\n\r\n        var frtr = extractFrameAndTickRate(node, errorHandler);\r\n\r\n        this.effectiveFrameRate = frtr.effectiveFrameRate;\r\n\r\n        this.tickRate = frtr.tickRate;\r\n\r\n        /* extract aspect ratio */\r\n\r\n        this.aspectRatio = extractAspectRatio(node, errorHandler);\r\n\r\n        /* check timebase */\r\n\r\n        var attr = findAttribute(node, imscNames.ns_ttp, \"timeBase\");\r\n\r\n        if (attr !== null && attr !== \"media\") {\r\n\r\n            reportFatal(errorHandler, \"Unsupported time base\");\r\n\r\n        }\r\n\r\n        /* retrieve extent */\r\n\r\n        var e = extractExtent(node, errorHandler);\r\n\r\n        if (e === null) {\r\n\r\n            /* TODO: remove once unit tests are ready */\r\n\r\n            this.pxDimensions = {'h': 480, 'w': 640};\r\n\r\n        } else {\r\n\r\n            if (e.h.unit !== \"px\" || e.w.unit !== \"px\") {\r\n                reportFatal(errorHandler, \"Extent on TT must be in px or absent\");\r\n            }\r\n\r\n            this.pxDimensions = {'h': e.h.value, 'w': e.w.value};\r\n        }\r\n\r\n    };\r\n\r\n    /* register a temporal events */\r\n    TT.prototype._registerEvent = function (elem) {\r\n\r\n        /* skip if begin is not < then end */\r\n\r\n        if (elem.end <= elem.begin)\r\n            return;\r\n\r\n        /* index the begin time of the event */\r\n\r\n        var b_i = indexOf(this.events, elem.begin);\r\n\r\n        if (!b_i.found) {\r\n            this.events.splice(b_i.index, 0, elem.begin);\r\n        }\r\n\r\n        /* index the end time of the event */\r\n\r\n        if (elem.end !== Number.POSITIVE_INFINITY) {\r\n\r\n            var e_i = indexOf(this.events, elem.end);\r\n\r\n            if (!e_i.found) {\r\n                this.events.splice(e_i.index, 0, elem.end);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Retrieves the range of ISD times covered by the document\r\n     * \r\n     * @returns {Array} Array of two elements: min_begin_time and max_begin_time\r\n     * \r\n     */\r\n    TT.prototype.getMediaTimeRange = function () {\r\n\r\n        return [this.events[0], this.events[this.events.length - 1]];\r\n    };\r\n\r\n    /*\r\n     * Returns list of ISD begin times  \r\n     * \r\n     * @returns {Array}\r\n     */\r\n    TT.prototype.getMediaTimeEvents = function () {\r\n\r\n        return this.events;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Head element\r\n     */\r\n\r\n    function Head() {\r\n        this.styling = null;\r\n        this.layout = null;\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Styling element\r\n     */\r\n\r\n    function Styling() {\r\n        this.styles = {};\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Style element\r\n     */\r\n\r\n    function Style() {\r\n        this.id = null;\r\n        this.styleAttrs = null;\r\n        this.styleRefs = null;\r\n    }\r\n\r\n    Style.prototype.initFromNode = function (node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n        this.styleRefs = elementGetStyleRefs(node);\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Layout element\r\n     * \r\n     */\r\n\r\n    function Layout() {\r\n        this.regions = {};\r\n    }\r\n\r\n    /*\r\n     * TTML element utility functions\r\n     * \r\n     */\r\n\r\n    function ContentElement(kind) {\r\n        this.kind = kind;\r\n    }\r\n\r\n    function IdentifiedElement(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    IdentifiedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n    };\r\n\r\n    function LayoutElement(id) {\r\n        this.regionID = id;\r\n    }\r\n\r\n    LayoutElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.regionID = elementGetRegionID(node);\r\n    };\r\n\r\n    function StyledElement(styleAttrs) {\r\n        this.styleAttrs = styleAttrs;\r\n    }\r\n\r\n    StyledElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n\r\n        if (doc.head !== null && doc.head.styling !== null) {\r\n            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);\r\n        }\r\n\r\n    };\r\n\r\n    function AnimatedElement(sets) {\r\n        this.sets = sets;\r\n    }\r\n\r\n    AnimatedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.sets = [];\r\n    };\r\n\r\n    function ContainerElement(contents) {\r\n        this.contents = contents;\r\n    }\r\n\r\n    ContainerElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.contents = [];\r\n    };\r\n\r\n    function TimedElement(explicit_begin, explicit_end, explicit_dur) {\r\n        this.explicit_begin = explicit_begin;\r\n        this.explicit_end = explicit_end;\r\n        this.explicit_dur = explicit_dur;\r\n    }\r\n\r\n    TimedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        var t = processTiming(doc, parent, node, errorHandler);\r\n        this.explicit_begin = t.explicit_begin;\r\n        this.explicit_end = t.explicit_end;\r\n        this.explicit_dur = t.explicit_dur;\r\n\r\n        this.timeContainer = elementGetTimeContainer(node, errorHandler);\r\n    };\r\n\r\n\r\n    /*\r\n     * Represents a TTML body element\r\n     */\r\n\r\n\r\n\r\n    function Body() {\r\n        ContentElement.call(this, 'body');\r\n    }\r\n\r\n\r\n    Body.prototype.initFromNode = function (doc, node, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML div element\r\n     */\r\n\r\n    function Div() {\r\n        ContentElement.call(this, 'div');\r\n    }\r\n\r\n    Div.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML p element\r\n     */\r\n\r\n    function P() {\r\n        ContentElement.call(this, 'p');\r\n    }\r\n\r\n    P.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML span element\r\n     */\r\n\r\n    function Span() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    Span.prototype.initFromNode = function (doc, parent, node, xmlspace, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.space = xmlspace;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML anonymous span element\r\n     */\r\n\r\n    function AnonymousSpan() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    AnonymousSpan.prototype.initFromText = function (doc, parent, text, xmlspace, errorHandler) {\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, null, errorHandler);\r\n\r\n        this.text = text;\r\n        this.space = xmlspace;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML br element\r\n     */\r\n\r\n    function Br() {\r\n        ContentElement.call(this, 'br');\r\n    }\r\n\r\n    Br.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Region element\r\n     * \r\n     */\r\n\r\n    function Region() {\r\n    }\r\n\r\n    Region.prototype.createDefaultRegion = function () {\r\n        var r = new Region();\r\n\r\n        IdentifiedElement.call(r, '');\r\n        StyledElement.call(r, {});\r\n        AnimatedElement.call(r, []);\r\n        TimedElement.call(r, 0, Number.POSITIVE_INFINITY, null);\r\n\r\n        return r;\r\n    };\r\n\r\n    Region.prototype.initFromNode = function (doc, node, errorHandler) {\r\n        IdentifiedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n\r\n        /* immediately merge referenced styles */\r\n\r\n        if (doc.head !== null && doc.head.styling !== null) {\r\n            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Set element\r\n     * \r\n     */\r\n\r\n    function Set() {\r\n    }\r\n\r\n    Set.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        var styles = elementGetStyles(node, errorHandler);\r\n\r\n        this.qname = null;\r\n        this.value = null;\r\n\r\n        for (var qname in styles) {\r\n\r\n            if (this.qname) {\r\n\r\n                reportError(errorHandler, \"More than one style specified on set\");\r\n                break;\r\n\r\n            }\r\n\r\n            this.qname = qname;\r\n            this.value = styles[qname];\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n     * Utility functions\r\n     * \r\n     */\r\n\r\n\r\n    function elementGetXMLID(node) {\r\n        return node && 'xml:id' in node.attributes ? node.attributes['xml:id'].value || null : null;\r\n    }\r\n\r\n    function elementGetRegionID(node) {\r\n        return node && 'region' in node.attributes ? node.attributes.region.value : '';\r\n    }\r\n\r\n    function elementGetTimeContainer(node, errorHandler) {\r\n\r\n        var tc = node && 'timeContainer' in node.attributes ? node.attributes.timeContainer.value : null;\r\n\r\n        if ((!tc) || tc === \"par\") {\r\n\r\n            return \"par\";\r\n\r\n        } else if (tc === \"seq\") {\r\n\r\n            return \"seq\";\r\n\r\n        } else {\r\n\r\n            reportError(errorHandler, \"Illegal value of timeContainer (assuming 'par')\");\r\n\r\n            return \"par\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function elementGetStyleRefs(node) {\r\n\r\n        return node && 'style' in node.attributes ? node.attributes.style.value.split(\" \") : [];\r\n\r\n    }\r\n\r\n    function elementGetStyles(node, errorHandler) {\r\n\r\n        var s = {};\r\n\r\n        if (node !== null) {\r\n\r\n            for (var i in node.attributes) {\r\n\r\n                var qname = node.attributes[i].uri + \" \" + node.attributes[i].local;\r\n\r\n                var sa = imscStyles.byQName[qname];\r\n\r\n                if (sa !== undefined) {\r\n\r\n                    var val = sa.parse(node.attributes[i].value);\r\n\r\n                    if (val !== null) {\r\n\r\n                        s[qname] = val;\r\n\r\n                        /* TODO: consider refactoring errorHandler into parse and compute routines */\r\n\r\n                        if (sa === imscStyles.byName.zIndex) {\r\n                            reportWarning(errorHandler, \"zIndex attribute present but not used by IMSC1 since regions do not overlap\");\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        reportError(errorHandler, \"Cannot parse styling attribute \" + qname + \" --> \" + node.attributes[i].value);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    function findAttribute(node, ns, name) {\r\n        for (var i in node.attributes) {\r\n\r\n            if (node.attributes[i].uri === ns &&\r\n                    node.attributes[i].local === name) {\r\n\r\n                return node.attributes[i].value;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function extractAspectRatio(node, errorHandler) {\r\n\r\n        var ar = findAttribute(node, imscNames.ns_ittp, \"aspectRatio\");\r\n\r\n        var rslt = null;\r\n\r\n        if (ar !== null) {\r\n\r\n            var ASPECT_RATIO_RE = /(\\d+) (\\d+)/;\r\n\r\n            var m = ASPECT_RATIO_RE.exec(ar);\r\n\r\n            if (m !== null) {\r\n\r\n                var w = parseInt(m[1]);\r\n\r\n                var h = parseInt(m[2]);\r\n\r\n                if (w !== 0 && h !== 0) {\r\n\r\n                    rslt = w / h;\r\n\r\n                } else {\r\n\r\n                    reportError(errorHandler, \"Illegal aspectRatio values (ignoring)\");\r\n                }\r\n\r\n            } else {\r\n\r\n                reportError(errorHandler, \"Malformed aspectRatio attribute (ignoring)\");\r\n            }\r\n\r\n        }\r\n\r\n        return rslt;\r\n\r\n    }\r\n\r\n    /*\r\n     * Returns the cellResolution attribute from a node\r\n     * \r\n     */\r\n    function extractCellResolution(node, errorHandler) {\r\n\r\n        var cr = findAttribute(node, imscNames.ns_ttp, \"cellResolution\");\r\n\r\n        // initial value\r\n\r\n        var h = 15;\r\n        var w = 32;\r\n\r\n        if (cr !== null) {\r\n\r\n            var CELL_RESOLUTION_RE = /(\\d+) (\\d+)/;\r\n\r\n            var m = CELL_RESOLUTION_RE.exec(cr);\r\n\r\n            if (m !== null) {\r\n\r\n                w = parseInt(m[1]);\r\n\r\n                h = parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed cellResolution value (using initial value instead)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {'w': w, 'h': h};\r\n\r\n    }\r\n\r\n\r\n    function extractFrameAndTickRate(node, errorHandler) {\r\n\r\n        // subFrameRate is ignored per IMSC1 specification\r\n\r\n        // extract frame rate\r\n\r\n        var fps_attr = findAttribute(node, imscNames.ns_ttp, \"frameRate\");\r\n\r\n        // initial value\r\n\r\n        var fps = 30;\r\n\r\n        // match variable\r\n\r\n        var m;\r\n\r\n        if (fps_attr !== null) {\r\n\r\n            var FRAME_RATE_RE = /(\\d+)/;\r\n\r\n            m = FRAME_RATE_RE.exec(fps_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                fps = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        // extract frame rate multiplier\r\n\r\n        var frm_attr = findAttribute(node, imscNames.ns_ttp, \"frameRateMultiplier\");\r\n\r\n        // initial value\r\n\r\n        var frm = 1;\r\n\r\n        if (frm_attr !== null) {\r\n\r\n            var FRAME_RATE_MULT_RE = /(\\d+) (\\d+)/;\r\n\r\n            m = FRAME_RATE_MULT_RE.exec(frm_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                frm = parseInt(m[1]) / parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate multiplier attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        var efps = frm * fps;\r\n\r\n        // extract tick rate\r\n\r\n        var tr = 1;\r\n\r\n        var trattr = findAttribute(node, imscNames.ns_ttp, \"tickRate\");\r\n\r\n        if (trattr === null) {\r\n\r\n            if (fps_attr !== null)\r\n                tr = efps;\r\n\r\n        } else {\r\n\r\n            var TICK_RATE_RE = /(\\d+)/;\r\n\r\n            m = TICK_RATE_RE.exec(trattr);\r\n\r\n            if (m !== null) {\r\n\r\n                tr = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed tick rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        return {effectiveFrameRate: efps, tickRate: tr};\r\n\r\n    }\r\n\r\n    function extractExtent(node, errorHandler) {\r\n\r\n        var attr = findAttribute(node, imscNames.ns_tts, \"extent\");\r\n\r\n        if (attr === null)\r\n            return null;\r\n\r\n        var s = attr.split(\" \");\r\n\r\n        if (s.length !== 2) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        var w = imscUtils.parseLength(s[0]);\r\n\r\n        var h = imscUtils.parseLength(s[1]);\r\n\r\n        if (!h || !w) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent values (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        return {'h': h, 'w': w};\r\n\r\n    }\r\n\r\n    function parseTimeExpression(tickRate, effectiveFrameRate, str) {\r\n\r\n        var CLOCK_TIME_FRACTION_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d(?:\\.\\d+)?)$/;\r\n        var CLOCK_TIME_FRAMES_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d)\\:(\\d{2,})$/;\r\n        var OFFSET_FRAME_RE = /^(\\d+(?:\\.\\d+)?)f$/;\r\n        var OFFSET_TICK_RE = /^(\\d+(?:\\.\\d+)?)t$/;\r\n        var OFFSET_MS_RE = /^(\\d+(?:\\.\\d+)?)ms$/;\r\n        var OFFSET_S_RE = /^(\\d+(?:\\.\\d+)?)s$/;\r\n        var OFFSET_H_RE = /^(\\d+(?:\\.\\d+)?)h$/;\r\n        var OFFSET_M_RE = /^(\\d+(?:\\.\\d+)?)m$/;\r\n        var m;\r\n        var r = null;\r\n        if ((m = OFFSET_FRAME_RE.exec(str)) !== null) {\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / effectiveFrameRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_TICK_RE.exec(str)) !== null) {\r\n\r\n            if (tickRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / tickRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_MS_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) / 1000.0;\r\n\r\n        } else if ((m = OFFSET_S_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]);\r\n\r\n        } else if ((m = OFFSET_H_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 3600.0;\r\n\r\n        } else if ((m = OFFSET_M_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 60.0;\r\n\r\n        } else if ((m = CLOCK_TIME_FRACTION_RE.exec(str)) !== null) {\r\n\r\n            r = parseInt(m[1]) * 3600 +\r\n                    parseInt(m[2]) * 60 +\r\n                    parseFloat(m[3]);\r\n\r\n        } else if ((m = CLOCK_TIME_FRAMES_RE.exec(str)) !== null) {\r\n\r\n            /* this assumes that HH:MM:SS is a clock-time-with-fraction */\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseInt(m[1]) * 3600 +\r\n                        parseInt(m[2]) * 60 +\r\n                        parseInt(m[3]) +\r\n                        (m[4] === null ? 0 : parseInt(m[4]) / effectiveFrameRate);\r\n            }\r\n\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    function processTiming(doc, parent, node, errorHandler) {\r\n\r\n        /* determine explicit begin */\r\n\r\n        var explicit_begin = null;\r\n\r\n        if (node && 'begin' in node.attributes) {\r\n\r\n            explicit_begin = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.begin.value);\r\n\r\n            if (explicit_begin === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed begin value \" + node.attributes.begin.value + \" (using 0)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit duration */\r\n\r\n        var explicit_dur = null;\r\n\r\n        if (node && 'dur' in node.attributes) {\r\n\r\n            explicit_dur = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.dur.value);\r\n\r\n            if (explicit_dur === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed dur value \" + node.attributes.dur.value + \" (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit end */\r\n\r\n        var explicit_end = null;\r\n\r\n        if (node && 'end' in node.attributes) {\r\n\r\n            explicit_end = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.end.value);\r\n\r\n            if (explicit_end === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed end value (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {explicit_begin: explicit_begin,\r\n            explicit_end: explicit_end,\r\n            explicit_dur: explicit_dur};\r\n\r\n    }\r\n\r\n\r\n\r\n    function mergeChainedStyles(styling, style, errorHandler) {\r\n\r\n        while (style.styleRefs.length > 0) {\r\n\r\n            var sref = style.styleRefs.pop();\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeChainedStyles(styling, styling.styles[sref], errorHandler);\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, style.styleAttrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeReferencedStyles(styling, stylerefs, styleattrs, errorHandler) {\r\n\r\n        for (var i = stylerefs.length - 1; i >= 0; i--) {\r\n\r\n            var sref = stylerefs[i];\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, styleattrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeStylesIfNotPresent(from_styles, into_styles) {\r\n\r\n        for (var sname in from_styles) {\r\n\r\n            if (sname in into_styles)\r\n                continue;\r\n\r\n            into_styles[sname] = from_styles[sname];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* TODO: validate style format at parsing */\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n    /*\r\n     * Binary search utility function\r\n     * \r\n     * @typedef {Object} BinarySearchResult\r\n     * @property {boolean} found Was an exact match found?\r\n     * @property {number} index Position of the exact match or insert position\r\n     * \r\n     * @returns {BinarySearchResult}\r\n     */\r\n\r\n    function indexOf(arr, searchval) {\r\n\r\n        var min = 0;\r\n        var max = arr.length - 1;\r\n        var cur;\r\n\r\n        while (min <= max) {\r\n\r\n            cur = Math.floor((min + max) / 2);\r\n\r\n            var curval = arr[cur];\r\n\r\n            if (curval < searchval) {\r\n\r\n                min = cur + 1;\r\n\r\n            } else if (curval > searchval) {\r\n\r\n                max = cur - 1;\r\n\r\n            } else {\r\n\r\n                return {found: true, index: cur};\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {found: false, index: min};\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscDoc = {} : exports,\r\n        typeof sax === 'undefined' ? require(44) : sax,\r\n        typeof imscNames === 'undefined' ? require(41) : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(42) : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(43) : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscHTML\r\n */\r\n\r\n;\r\n(function (imscHTML, imscNames, imscStyles) {\r\n\r\n    /**\r\n     * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource\r\n     * @callback IMGResolver\r\n     * @param {string} <pre>smpte:background</pre> URI\r\n     * @return {string} PNG resource URL\r\n     */\r\n\r\n\r\n    /**\r\n     * Renders an ISD object (returned by <pre>generateISD()</pre>) into a \r\n     * parent element, that must be attached to the DOM. The ISD will be rendered\r\n     * into a child <pre>div</pre>\r\n     * with heigh and width equal to the clientHeight and clientWidth of the element,\r\n     * unless explicitly specified otherwise by the caller. Images URIs specified \r\n     * by <pre>smpte:background</pre> attributes are mapped to image resource URLs\r\n     * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>\r\n     * attribute and an <code>img</code> DOM element as input, and is expected to\r\n     * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.\r\n     * <pre>displayForcedOnlyMode</pre> sets the (boolean)\r\n     * value of the IMSC1 displayForcedOnlyMode parameter. The function returns\r\n     * an opaque object that should passed in <code>previousISDState</code> when this function\r\n     * is called for the next ISD, otherwise <code>previousISDState</code> should be set to \r\n     * <code>null</code>.\r\n     * \r\n     * @param {Object} isd ISD to be rendered\r\n     * @param {Object} element Element into which the ISD is rendered\r\n     * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.\r\n     * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null \r\n     *                  to use clientHeight of the parent element\r\n     * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null\r\n     *                  to use clientWidth of the parent element\r\n     * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,\r\n     *                   or false if null         \r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call\r\n     * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)\r\n     * @return {Object} ISD state to be provided when this funtion is called for the next ISD\r\n     */\r\n\r\n    imscHTML.render = function (isd,\r\n        element,\r\n        imgResolver,\r\n        eheight,\r\n        ewidth,\r\n        displayForcedOnlyMode,\r\n        errorHandler,\r\n        previousISDState,\r\n        enableRollUp\r\n        ) {\r\n\r\n        /* maintain aspect ratio if specified */\r\n\r\n        var height = eheight || element.clientHeight;\r\n        var width = ewidth || element.clientWidth;\r\n\r\n        if (isd.aspectRatio !== null) {\r\n\r\n            var twidth = height * isd.aspectRatio;\r\n\r\n            if (twidth > width) {\r\n\r\n                height = Math.round(width / isd.aspectRatio);\r\n\r\n            } else {\r\n\r\n                width = twidth;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var rootcontainer = document.createElement(\"div\");\r\n\r\n        rootcontainer.style.position = \"relative\";\r\n        rootcontainer.style.width = width + \"px\";\r\n        rootcontainer.style.height = height + \"px\";\r\n        rootcontainer.style.margin = \"auto\";\r\n        rootcontainer.style.top = 0;\r\n        rootcontainer.style.bottom = 0;\r\n        rootcontainer.style.left = 0;\r\n        rootcontainer.style.right = 0;\r\n        rootcontainer.style.zIndex = 0;\r\n\r\n        var context = {\r\n            h: height,\r\n            w: width,\r\n            regionH: null,\r\n            regionW: null,\r\n            imgResolver: imgResolver,\r\n            displayForcedOnlyMode: displayForcedOnlyMode || false,\r\n            isd: isd,\r\n            errorHandler: errorHandler,\r\n            previousISDState: previousISDState,\r\n            enableRollUp: enableRollUp || false,\r\n            currentISDState: {},\r\n            flg: null, /* current fillLineGap value if active, null otherwise */\r\n            lp: null, /* current linePadding value if active, null otherwise */\r\n            mra: null, /* current multiRowAlign value if active, null otherwise */\r\n            ipd: null, /* inline progression direction (lr, rl, tb) */\r\n            bpd: null /* block progression direction (lr, rl, tb) */\r\n        };\r\n\r\n        element.appendChild(rootcontainer);\r\n\r\n        for (var i in isd.contents) {\r\n\r\n            processElement(context, rootcontainer, isd.contents[i]);\r\n\r\n        }\r\n\r\n        return context.currentISDState;\r\n\r\n    };\r\n\r\n    function processElement(context, dom_parent, isd_element) {\r\n\r\n        var e;\r\n\r\n        if (isd_element.kind === 'region') {\r\n\r\n            e = document.createElement(\"div\");\r\n            e.style.position = \"absolute\";\r\n\r\n        } else if (isd_element.kind === 'body') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'div') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'p') {\r\n\r\n            e = document.createElement(\"p\");\r\n\r\n        } else if (isd_element.kind === 'span') {\r\n\r\n            e = document.createElement(\"span\");\r\n\r\n            //e.textContent = isd_element.text;\r\n\r\n        } else if (isd_element.kind === 'br') {\r\n\r\n            e = document.createElement(\"br\");\r\n\r\n        }\r\n\r\n        if (!e) {\r\n\r\n            reportError(context.errorHandler, \"Error processing ISD element kind: \" + isd_element.kind);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /* override UA default margin */\r\n        /* TODO: should apply to <p> only */\r\n\r\n        e.style.margin = \"0\";\r\n\r\n        /* tranform TTML styles to CSS styles */\r\n\r\n        for (var i in STYLING_MAP_DEFS) {\r\n\r\n            var sm = STYLING_MAP_DEFS[i];\r\n\r\n            var attr = isd_element.styleAttrs[sm.qname];\r\n\r\n            if (attr !== undefined && sm.map !== null) {\r\n\r\n                sm.map(context, e, isd_element, attr);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var proc_e = e;\r\n\r\n        /* remember writing direction */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n            if (wdir === \"lrtb\" || wdir === \"lr\") {\r\n\r\n                context.ipd = \"lr\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"rltb\" || wdir === \"rl\") {\r\n\r\n                context.ipd = \"rl\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"tblr\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"lr\";\r\n\r\n            } else if (wdir === \"tbrl\" || wdir === \"tb\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"rl\";\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* do we have linePadding ? */\r\n\r\n        var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];\r\n\r\n        if (lp && lp > 0) {\r\n\r\n            /* apply padding to the <p> so that line padding does not cause line wraps */\r\n\r\n            if (context.bpd === \"tb\") {\r\n\r\n                proc_e.style.paddingLeft = lp * context.h + \"px\";\r\n                proc_e.style.paddingRight = lp * context.h + \"px\";\r\n\r\n            } else {\r\n\r\n                proc_e.style.paddingTop = lp * context.h + \"px\";\r\n                proc_e.style.paddingBottom = lp * context.h + \"px\";\r\n\r\n            }\r\n\r\n            context.lp = lp;\r\n        }\r\n\r\n        // do we have multiRowAlign?\r\n\r\n        var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];\r\n\r\n        if (mra && mra !== \"auto\") {\r\n\r\n            /* create inline block to handle multirowAlign */\r\n\r\n            var s = document.createElement(\"span\");\r\n\r\n            s.style.display = \"inline-block\";\r\n\r\n            s.style.textAlign = mra;\r\n\r\n            e.appendChild(s);\r\n\r\n            proc_e = s;\r\n\r\n            context.mra = mra;\r\n\r\n        }\r\n\r\n        /* remember we are filling line gaps */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {\r\n            context.flg = true;\r\n        }\r\n\r\n\r\n        if (isd_element.kind === \"span\" && isd_element.text) {\r\n\r\n            if (context.lp || context.mra || context.flg) {\r\n\r\n                // wrap characters in spans to find the line wrap locations\r\n\r\n                for (var j = 0; j < isd_element.text.length; j++) {\r\n\r\n                    var span = document.createElement(\"span\");\r\n\r\n                    span.textContent = isd_element.text.charAt(j);\r\n\r\n                    e.appendChild(span);\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                e.textContent = isd_element.text;\r\n\r\n            }\r\n        }\r\n\r\n        dom_parent.appendChild(e);\r\n\r\n        /* process the children of the ISD element */\r\n\r\n        for (var k in isd_element.contents) {\r\n\r\n            processElement(context, proc_e, isd_element.contents[k]);\r\n\r\n        }\r\n\r\n        /* list of lines */\r\n\r\n        var linelist = [];\r\n\r\n\r\n        /* paragraph processing */\r\n        /* TODO: linePadding only supported for horizontal scripts */\r\n\r\n        if ((context.lp || context.mra || context.flg) && isd_element.kind === \"p\") {\r\n\r\n            constructLineList(context, proc_e, linelist, null);\r\n\r\n            /* insert line breaks for multirowalign */\r\n\r\n            if (context.mra) {\r\n\r\n                applyMultiRowAlign(linelist);\r\n\r\n                context.mra = null;\r\n\r\n            }\r\n\r\n            /* add linepadding */\r\n\r\n            if (context.lp) {\r\n\r\n                applyLinePadding(linelist, context.lp * context.h, context);\r\n\r\n                context.lp = null;\r\n\r\n            }\r\n\r\n            /* fill line gaps linepadding */\r\n\r\n            if (context.flg) {\r\n\r\n                var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);\r\n\r\n                applyFillLineGap(linelist, par_edges.before, par_edges.after, context);\r\n\r\n                context.flg = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* region processing */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            /* build line list */\r\n\r\n            constructLineList(context, proc_e, linelist);\r\n\r\n            /* perform roll up if needed */\r\n\r\n            if ((context.bpd === \"tb\") &&\r\n                context.enableRollUp &&\r\n                isd_element.contents.length > 0 &&\r\n                isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {\r\n\r\n                /* horrible hack, perhaps default region id should be underscore everywhere? */\r\n\r\n                var rid = isd_element.id === '' ? '_' : isd_element.id;\r\n\r\n                var rb = new RegionPBuffer(rid, linelist);\r\n\r\n                context.currentISDState[rb.id] = rb;\r\n\r\n                if (context.previousISDState &&\r\n                    rb.id in context.previousISDState &&\r\n                    context.previousISDState[rb.id].plist.length > 0 &&\r\n                    rb.plist.length > 1 &&\r\n                    rb.plist[rb.plist.length - 2].text ===\r\n                    context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {\r\n\r\n                    var body_elem = e.firstElementChild;\r\n                    \r\n                    var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;\r\n\r\n                    body_elem.style.bottom = \"-\" + h + \"px\";\r\n                    body_elem.style.transition = \"transform 0.4s\";\r\n                    body_elem.style.position = \"relative\";\r\n                    body_elem.style.transform = \"translateY(-\" + h + \"px)\";\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* TODO: clean-up the spans ? */\r\n\r\n        }\r\n    }\r\n\r\n    function applyLinePadding(lineList, lp, context) {\r\n\r\n        for (var i in lineList) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            var se = lineList[i].elements[lineList[i].start_elem];\r\n\r\n            var ee = lineList[i].elements[lineList[i].end_elem];\r\n\r\n            if (l !== 0) {\r\n\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    se.node.style.paddingLeft = lp + \"px\";\r\n                    se.node.style.marginLeft = \"-\" + lp + \"px\";\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    se.node.style.paddingRight = lp + \"px\";\r\n                    se.node.style.marginRight = \"-\" + lp + \"px\";\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    se.node.style.paddingTop = lp + \"px\";\r\n                    se.node.style.marginTop = \"-\" + lp + \"px\";\r\n\r\n                }\r\n\r\n                se.node.style.backgroundColor = se.bgcolor;\r\n\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    ee.node.style.paddingRight = lp + \"px\";\r\n                    ee.node.style.marginRight = \"-\" + lp + \"px\";\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    ee.node.style.paddingLeft = lp + \"px\";\r\n                    ee.node.style.marginLeft = \"-\" + lp + \"px\";\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    ee.node.style.paddingBottom = lp + \"px\";\r\n                    ee.node.style.marginBottom = \"-\" + lp + \"px\";\r\n\r\n                }\r\n\r\n                ee.node.style.backgroundColor = ee.bgcolor;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyMultiRowAlign(lineList) {\r\n\r\n        /* apply an explicit br to all but the last line */\r\n\r\n        for (var i = 0; i < lineList.length - 1; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            if (l !== 0 && lineList[i].br === false) {\r\n                var br = document.createElement(\"br\");\r\n\r\n                var lastnode = lineList[i].elements[l - 1].node;\r\n\r\n                lastnode.parentElement.insertBefore(br, lastnode.nextSibling);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyFillLineGap(lineList, par_before, par_after, context) {\r\n\r\n        /* positive for BPD = lr and tb, negative for BPD = rl */\r\n        var s = Math.sign(par_after - par_before);\r\n\r\n        for (var i = 0; i <= lineList.length; i++) {\r\n\r\n            /* compute frontier between lines */\r\n\r\n            var frontier;\r\n\r\n            if (i === 0) {\r\n\r\n                frontier = par_before;\r\n\r\n            } else if (i === lineList.length) {\r\n\r\n                frontier = par_after;\r\n\r\n            } else {\r\n\r\n                frontier = (lineList[i].before + lineList[i - 1].after) / 2;\r\n\r\n            }\r\n\r\n            /* padding amount */\r\n\r\n            var pad;\r\n\r\n            /* current element */\r\n\r\n            var e;\r\n\r\n            /* before line */\r\n\r\n            if (i > 0) {\r\n\r\n                for (var j = 0; j < lineList[i - 1].elements.length; j++) {\r\n\r\n                    if (lineList[i - 1].elements[j].bgcolor === null) continue;\r\n\r\n                    e = lineList[i - 1].elements[j];\r\n\r\n                    if (s * (e.after - frontier) < 0) {\r\n\r\n                        pad = Math.ceil(Math.abs(frontier - e.after)) + \"px\";\r\n\r\n                        e.node.style.backgroundColor = e.bgcolor;\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            e.node.style.paddingRight = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            e.node.style.paddingLeft = pad;\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            e.node.style.paddingBottom = pad;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* after line */\r\n\r\n            if (i < lineList.length) {\r\n\r\n                for (var k = 0; k < lineList[i].elements.length; k++) {\r\n\r\n                    e = lineList[i].elements[k];\r\n\r\n                    if (e.bgcolor === null) continue;\r\n\r\n                    if (s * (e.before - frontier) > 0) {\r\n\r\n                        pad = Math.ceil(Math.abs(e.before - frontier)) + \"px\";\r\n\r\n                        e.node.style.backgroundColor = e.bgcolor;\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            e.node.style.paddingLeft = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            e.node.style.paddingRight = pad;\r\n\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            e.node.style.paddingTop = pad;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function RegionPBuffer(id, lineList) {\r\n\r\n        this.id = id;\r\n\r\n        this.plist = lineList;\r\n\r\n    }\r\n\r\n    function pruneEmptySpans(element) {\r\n\r\n        var child = element.firstChild;\r\n\r\n        while (child) {\r\n\r\n            var nchild = child.nextSibling;\r\n\r\n            if (child.nodeType === Node.ELEMENT_NODE &&\r\n                child.localName === 'span') {\r\n\r\n                pruneEmptySpans(child);\r\n\r\n                if (child.childElementCount === 0 &&\r\n                    child.textContent.length === 0) {\r\n\r\n                    element.removeChild(child);\r\n\r\n                }\r\n            }\r\n\r\n            child = nchild;\r\n        }\r\n\r\n    }\r\n\r\n    function rect2edges(rect, context) {\r\n\r\n        var edges = {before: null, after: null, start: null, end: null};\r\n\r\n        if (context.bpd === \"tb\") {\r\n\r\n            edges.before = rect.top;\r\n            edges.after = rect.bottom;\r\n\r\n            if (context.ipd === \"lr\") {\r\n\r\n                edges.start = rect.left;\r\n                edges.end = rect.right;\r\n\r\n            } else {\r\n\r\n                edges.start = rect.right;\r\n                edges.end = rect.left;\r\n            }\r\n\r\n        } else if (context.bpd === \"lr\") {\r\n\r\n            edges.before = rect.left;\r\n            edges.after = rect.right;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        } else if (context.bpd === \"rl\") {\r\n\r\n            edges.before = rect.right;\r\n            edges.after = rect.left;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        }\r\n\r\n        return edges;\r\n\r\n    }\r\n\r\n    function constructLineList(context, element, llist, bgcolor) {\r\n\r\n        var curbgcolor = element.style.backgroundColor || bgcolor;\r\n\r\n        if (element.childElementCount === 0) {\r\n\r\n            if (element.localName === 'span') {\r\n\r\n                var r = element.getBoundingClientRect();\r\n\r\n                /* skip if span is not displayed */\r\n\r\n                if (r.height === 0 || r.width === 0) return;\r\n\r\n                var edges = rect2edges(r, context);\r\n\r\n                if (llist.length === 0 ||\r\n                    (!isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after))\r\n                    ) {\r\n\r\n                    llist.push({\r\n                        before: edges.before,\r\n                        after: edges.after,\r\n                        start: edges.start,\r\n                        end: edges.end,\r\n                        start_elem: 0,\r\n                        end_elem: 0,\r\n                        elements: [],\r\n                        text: \"\",\r\n                        br: false\r\n                    });\r\n\r\n                } else {\r\n\r\n                    /* positive for BPD = lr and tb, negative for BPD = rl */\r\n                    var bpd_dir = Math.sign(edges.after - edges.before);\r\n\r\n                    /* positive for IPD = lr and tb, negative for IPD = rl */\r\n                    var ipd_dir = Math.sign(edges.end - edges.start);\r\n\r\n                    /* check if the line height has increased */\r\n\r\n                    if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {\r\n                        llist[llist.length - 1].before = edges.before;\r\n                    }\r\n\r\n                    if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {\r\n                        llist[llist.length - 1].after = edges.after;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {\r\n                        llist[llist.length - 1].start = edges.start;\r\n                        llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {\r\n                        llist[llist.length - 1].end = edges.end;\r\n                        llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                }\r\n\r\n                llist[llist.length - 1].text += element.textContent;\r\n\r\n                llist[llist.length - 1].elements.push(\r\n                    {\r\n                        node: element,\r\n                        bgcolor: curbgcolor,\r\n                        before: edges.before,\r\n                        after: edges.after\r\n                    }\r\n                );\r\n\r\n            } else if (element.localName === 'br' && llist.length !== 0) {\r\n\r\n                llist[llist.length - 1].br = true;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            var child = element.firstChild;\r\n\r\n            while (child) {\r\n\r\n                if (child.nodeType === Node.ELEMENT_NODE) {\r\n\r\n                    constructLineList(context, child, llist, curbgcolor);\r\n\r\n                }\r\n\r\n                child = child.nextSibling;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isSameLine(before1, after1, before2, after2) {\r\n\r\n        return ((after1 < after2) && (before1 > before2)) || ((after2 <= after1) && (before2 >= before1));\r\n\r\n    }\r\n\r\n    function HTMLStylingMapDefintion(qName, mapFunc) {\r\n        this.qname = qName;\r\n        this.map = mapFunc;\r\n    }\r\n\r\n    var STYLING_MAP_DEFS = [\r\n\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling backgroundColor\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                /* skip if transparent */\r\n                if (attr[3] === 0) return;\r\n\r\n                dom_element.style.backgroundColor = \"rgba(\" +\r\n                    attr[0].toString() + \",\" +\r\n                    attr[1].toString() + \",\" +\r\n                    attr[2].toString() + \",\" +\r\n                    (attr[3] / 255).toString() +\r\n                    \")\";\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling color\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.color = \"rgba(\" +\r\n                    attr[0].toString() + \",\" +\r\n                    attr[1].toString() + \",\" +\r\n                    attr[2].toString() + \",\" +\r\n                    (attr[3] / 255).toString() +\r\n                    \")\";\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling direction\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.direction = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling display\",\r\n            function (context, dom_element, isd_element, attr) {}\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling displayAlign\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */\r\n\r\n                /* TODO: is this affected by writing direction? */\r\n\r\n                dom_element.style.display = \"flex\";\r\n                dom_element.style.flexDirection = \"column\";\r\n\r\n\r\n                if (attr === \"before\") {\r\n\r\n                    dom_element.style.justifyContent = \"flex-start\";\r\n\r\n                } else if (attr === \"center\") {\r\n\r\n                    dom_element.style.justifyContent = \"center\";\r\n\r\n                } else if (attr === \"after\") {\r\n\r\n                    dom_element.style.justifyContent = \"flex-end\";\r\n                }\r\n\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling extent\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                /* TODO: this is super ugly */\r\n\r\n                context.regionH = (attr.h * context.h);\r\n                context.regionW = (attr.w * context.w);\r\n\r\n                /* \r\n                 * CSS height/width are measured against the content rectangle,\r\n                 * whereas TTML height/width include padding\r\n                 */\r\n\r\n                var hdelta = 0;\r\n                var wdelta = 0;\r\n\r\n                var p = isd_element.styleAttrs[\"http://www.w3.org/ns/ttml#styling padding\"];\r\n\r\n                if (!p) {\r\n\r\n                    /* error */\r\n\r\n                } else {\r\n\r\n                    hdelta = (p[0] + p[2]) * context.h;\r\n                    wdelta = (p[1] + p[3]) * context.w;\r\n\r\n                }\r\n\r\n                dom_element.style.height = (context.regionH - hdelta) + \"px\";\r\n                dom_element.style.width = (context.regionW - wdelta) + \"px\";\r\n\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling fontFamily\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                var rslt = [];\r\n\r\n                /* per IMSC1 */\r\n\r\n                for (var i in attr) {\r\n\r\n                    if (attr[i] === \"monospaceSerif\") {\r\n\r\n                        rslt.push(\"Courier New\");\r\n                        rslt.push('\"Liberation Mono\"');\r\n                        rslt.push(\"Courier\");\r\n                        rslt.push(\"monospace\");\r\n\r\n                    } else if (attr[i] === \"proportionalSansSerif\") {\r\n\r\n                        rslt.push(\"Arial\");\r\n                        rslt.push(\"Helvetica\");\r\n                        rslt.push('\"Liberation Sans\"');\r\n                        rslt.push(\"sans-serif\");\r\n\r\n                    } else if (attr[i] === \"monospace\") {\r\n\r\n                        rslt.push(\"monospace\");\r\n\r\n                    } else if (attr[i] === \"sansSerif\") {\r\n\r\n                        rslt.push(\"sans-serif\");\r\n\r\n                    } else if (attr[i] === \"serif\") {\r\n\r\n                        rslt.push(\"serif\");\r\n\r\n                    } else if (attr[i] === \"monospaceSansSerif\") {\r\n\r\n                        rslt.push(\"Consolas\");\r\n                        rslt.push(\"monospace\");\r\n\r\n                    } else if (attr[i] === \"proportionalSerif\") {\r\n\r\n                        rslt.push(\"serif\");\r\n\r\n                    } else {\r\n\r\n                        rslt.push(attr[i]);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                dom_element.style.fontFamily = rslt.join(\",\");\r\n            }\r\n        ),\r\n\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling fontSize\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.fontSize = (attr * context.h) + \"px\";\r\n            }\r\n        ),\r\n\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling fontStyle\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.fontStyle = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling fontWeight\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.fontWeight = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling lineHeight\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                if (attr === \"normal\") {\r\n\r\n                    dom_element.style.lineHeight = \"normal\";\r\n\r\n                } else {\r\n\r\n                    dom_element.style.lineHeight = (attr * context.h) + \"px\";\r\n                }\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling opacity\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.opacity = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling origin\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.top = (attr.h * context.h) + \"px\";\r\n                dom_element.style.left = (attr.w * context.w) + \"px\";\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling overflow\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.overflow = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling padding\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                /* attr: top,left,bottom,right*/\r\n\r\n                /* style: top right bottom left*/\r\n\r\n                var rslt = [];\r\n\r\n                rslt[0] = (attr[0] * context.h) + \"px\";\r\n                rslt[1] = (attr[3] * context.w) + \"px\";\r\n                rslt[2] = (attr[2] * context.h) + \"px\";\r\n                rslt[3] = (attr[1] * context.w) + \"px\";\r\n\r\n                dom_element.style.padding = rslt.join(\" \");\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling showBackground\",\r\n            null\r\n            ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling textAlign\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                var ta;\r\n                var dir = isd_element.styleAttrs[imscStyles.byName.direction.qname];\r\n\r\n                /* handle UAs that do not understand start or end */\r\n\r\n                if (attr === \"start\") {\r\n\r\n                    ta = (dir === \"rtl\") ? \"right\" : \"left\";\r\n\r\n                } else if (attr === \"end\") {\r\n\r\n                    ta = (dir === \"rtl\") ? \"left\" : \"right\";\r\n\r\n                } else {\r\n\r\n                    ta = attr;\r\n\r\n                }\r\n\r\n                dom_element.style.textAlign = ta;\r\n\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling textDecoration\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.textDecoration = attr.join(\" \").replace(\"lineThrough\", \"line-through\");\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling textOutline\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                if (attr === \"none\") {\r\n\r\n                    dom_element.style.textShadow = \"\";\r\n\r\n                } else {\r\n\r\n                    dom_element.style.textShadow = \"rgba(\" +\r\n                        attr.color[0].toString() + \",\" +\r\n                        attr.color[1].toString() + \",\" +\r\n                        attr.color[2].toString() + \",\" +\r\n                        (attr.color[3] / 255).toString() +\r\n                        \")\" + \" 0px 0px \" +\r\n                        (attr.thickness * context.h) + \"px\";\r\n\r\n                }\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling unicodeBidi\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                var ub;\r\n\r\n                if (attr === 'bidiOverride') {\r\n                    ub = \"bidi-override\";\r\n                } else {\r\n                    ub = attr;\r\n                }\r\n\r\n                dom_element.style.unicodeBidi = ub;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling visibility\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.visibility = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling wrapOption\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                if (attr === \"wrap\") {\r\n\r\n                    if (isd_element.space === \"preserve\") {\r\n                        dom_element.style.whiteSpace = \"pre-wrap\";\r\n                    } else {\r\n                        dom_element.style.whiteSpace = \"normal\";\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (isd_element.space === \"preserve\") {\r\n\r\n                        dom_element.style.whiteSpace = \"pre\";\r\n\r\n                    } else {\r\n                        dom_element.style.whiteSpace = \"noWrap\";\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling writingMode\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                if (attr === \"lrtb\" || attr === \"lr\") {\r\n\r\n                    dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                } else if (attr === \"rltb\" || attr === \"rl\") {\r\n\r\n                    dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                } else if (attr === \"tblr\") {\r\n\r\n                    dom_element.style.writingMode = \"vertical-lr\";\r\n\r\n                } else if (attr === \"tbrl\" || attr === \"tb\") {\r\n\r\n                    dom_element.style.writingMode = \"vertical-rl\";\r\n\r\n                }\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml#styling zIndex\",\r\n            function (context, dom_element, isd_element, attr) {\r\n                dom_element.style.zIndex = attr;\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt backgroundImage\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                if (context.imgResolver !== null && attr !== null) {\r\n\r\n                    var img = document.createElement(\"img\");\r\n\r\n                    var uri = context.imgResolver(attr, img);\r\n\r\n                    if (uri)\r\n                        img.src = uri;\r\n\r\n                    img.height = context.regionH;\r\n                    img.width = context.regionW;\r\n\r\n                    dom_element.appendChild(img);\r\n                }\r\n            }\r\n        ),\r\n        new HTMLStylingMapDefintion(\r\n            \"http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay\",\r\n            function (context, dom_element, isd_element, attr) {\r\n\r\n                if (context.displayForcedOnlyMode && attr === false) {\r\n                    dom_element.style.visibility = \"hidden\";\r\n                }\r\n\r\n            }\r\n        )\r\n    ];\r\n\r\n    var STYLMAP_BY_QNAME = {};\r\n\r\n    for (var i in STYLING_MAP_DEFS) {\r\n\r\n        STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n})(typeof exports === 'undefined' ? this.imscHTML = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(41) : imscNames,\r\n    typeof imscStyles === 'undefined' ? require(42) : imscStyles);","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscISD\r\n */\r\n\r\n\r\n;\r\n(function (imscISD, imscNames, imscStyles) { // wrapper for non-node envs\r\n\r\n    /** \r\n     * Creates a canonical representation of an IMSC1 document returned by <pre>imscDoc.fromXML()</pre>\r\n     * at a given absolute offset in seconds. This offset does not have to be one of the values returned\r\n     * by <pre>getMediaTimeEvents()</pre>.\r\n     * \r\n     * @param {Object} tt IMSC1 document\r\n     * @param {number} offset Absolute offset (in seconds)\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @returns {Object} Opaque in-memory representation of an ISD\r\n     */\r\n\r\n    imscISD.generateISD = function (tt, offset, errorHandler) {\r\n\r\n        /* TODO check for tt and offset validity */\r\n\r\n        /* create the ISD object from the IMSC1 doc */\r\n\r\n        var isd = new ISD(tt);\r\n        \r\n        /* context */\r\n        \r\n        var context = {\r\n          \r\n            /* empty for now */\r\n            \r\n        };\r\n\r\n        /* process regions */\r\n\r\n        for (var r in tt.head.layout.regions) {\r\n\r\n            /* post-order traversal of the body tree per [construct intermediate document] */\r\n\r\n            var c = isdProcessContentElement(tt, offset, tt.head.layout.regions[r], tt.body, null, '', tt.head.layout.regions[r], errorHandler, context);\r\n\r\n            if (c !== null) {\r\n\r\n                /* add the region to the ISD */\r\n\r\n                isd.contents.push(c.element);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return isd;\r\n    };\r\n\r\n    function isdProcessContentElement(doc, offset, region, body, parent, inherited_region_id, elem, errorHandler, context) {\r\n\r\n        /* prune if temporally inactive (<br> are not included in timing) */\r\n\r\n        if (elem.kind !== 'br' && (offset < elem.begin || offset >= elem.end)) {\r\n            return null;\r\n        }\r\n\r\n        /* \r\n         * set the associated region as specified by the regionID attribute, or the \r\n         * inherited associated region otherwise\r\n         */\r\n\r\n        var associated_region_id = 'regionID' in elem && elem.regionID !== '' ? elem.regionID : inherited_region_id;\r\n\r\n        /* prune the element if either:\r\n         * - the element is not terminal and the associated region is neither the default\r\n         *   region nor the parent region (this allows children to be associated with a \r\n         *   region later on)\r\n         * - the element is terminal and the associated region is not the parent region\r\n         */\r\n        \r\n        /* TODO: improve detection of terminal elements since <region> has no contents */\r\n\r\n        if (parent !== null /* are we in the region element */ &&\r\n            associated_region_id !== region.id &&\r\n                (\r\n                    (! ('contents' in elem)) ||\r\n                    ('contents' in elem && elem.contents.length === 0) ||\r\n                    associated_region_id !== ''\r\n                )\r\n             )\r\n            return null;\r\n\r\n        /* create an ISD element, including applying specified styles */\r\n\r\n        var isd_element = new ISDContentElement(elem);\r\n\r\n        /* apply set (animation) styling */\r\n\r\n        for (var i in elem.sets) {\r\n\r\n            if (offset < elem.sets[i].begin || offset >= elem.sets[i].end)\r\n                continue;\r\n\r\n            isd_element.styleAttrs[elem.sets[i].qname] = elem.sets[i].value;\r\n\r\n        }\r\n\r\n        /* \r\n         * keep track of specified styling attributes so that we\r\n         * can compute them later\r\n         */\r\n\r\n        var spec_attr = {};\r\n\r\n        for (var qname in isd_element.styleAttrs) {\r\n\r\n            spec_attr[qname] = true;\r\n\r\n            /* special rule for tts:writingMode (section 7.29.1 of XSL)\r\n             * direction is set consistently with writingMode only\r\n             * if writingMode sets inline-direction to LTR or RTL  \r\n             */\r\n\r\n            if (qname === imscStyles.byName.writingMode.qname &&\r\n                !(imscStyles.byName.direction.qname in isd_element.styleAttrs)) {\r\n\r\n                var wm = isd_element.styleAttrs[qname];\r\n\r\n                if (wm === \"lrtb\" || wm === \"lr\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"ltr\";\r\n\r\n                } else if (wm === \"rltb\" || wm === \"rl\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"rtl\";\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* inherited styling */\r\n\r\n        if (parent !== null) {\r\n\r\n            for (var j in imscStyles.all) {\r\n\r\n                var sa = imscStyles.all[j];\r\n\r\n                /* textDecoration has special inheritance rules */\r\n\r\n                if (sa.qname === imscStyles.byName.textDecoration.qname) {\r\n\r\n                    /* handle both textDecoration inheritance and specification */\r\n\r\n                    var ps = parent.styleAttrs[sa.qname];\r\n                    var es = isd_element.styleAttrs[sa.qname];\r\n                    var outs = [];\r\n\r\n                    if (es === undefined) {\r\n\r\n                        outs = ps;\r\n\r\n                    } else if (es.indexOf(\"none\") === -1) {\r\n\r\n                        if ((es.indexOf(\"noUnderline\") === -1 &&\r\n                            ps.indexOf(\"underline\") !== -1) ||\r\n                            es.indexOf(\"underline\") !== -1) {\r\n\r\n                            outs.push(\"underline\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noLineThrough\") === -1 &&\r\n                            ps.indexOf(\"lineThrough\") !== -1) ||\r\n                            es.indexOf(\"lineThrough\") !== -1) {\r\n\r\n                            outs.push(\"lineThrough\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noOverline\") === -1 &&\r\n                            ps.indexOf(\"overline\") !== -1) ||\r\n                            es.indexOf(\"overline\") !== -1) {\r\n\r\n                            outs.push(\"overline\");\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        outs.push(\"none\");\r\n\r\n                    }\r\n\r\n                    isd_element.styleAttrs[sa.qname] = outs;\r\n\r\n                } else if (sa.inherit &&\r\n                    (sa.qname in parent.styleAttrs) &&\r\n                    !(sa.qname in isd_element.styleAttrs)) {\r\n\r\n                    isd_element.styleAttrs[sa.qname] = parent.styleAttrs[sa.qname];\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* initial value styling */\r\n\r\n        for (var k in imscStyles.all) {\r\n\r\n            var ivs = imscStyles.all[k];\r\n\r\n            /* skip if value is already specified */\r\n\r\n            if (ivs.qname in isd_element.styleAttrs) continue;\r\n\r\n            /* apply initial value to elements other than region only if non-inherited */\r\n\r\n            if (isd_element.kind === 'region' || (ivs.inherit === false && ivs.initial !== null)) {\r\n\r\n                isd_element.styleAttrs[ivs.qname] = ivs.parse(ivs.initial);\r\n\r\n                /* keep track of the style as specified */\r\n\r\n                spec_attr[ivs.qname] = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute styles (only for non-inherited styles) */\r\n        /* TODO: get rid of spec_attr */\r\n\r\n        for (var z in imscStyles.all) {\r\n\r\n            var cs = imscStyles.all[z];\r\n\r\n            if (!(cs.qname in spec_attr)) continue;\r\n\r\n            if (cs.compute !== null) {\r\n\r\n                var cstyle = cs.compute(\r\n                    /*doc, parent, element, attr, context*/\r\n                    doc,\r\n                    parent,\r\n                    isd_element,\r\n                    isd_element.styleAttrs[cs.qname],\r\n                    context\r\n                    );\r\n\r\n                if (cstyle !== null) {\r\n                    isd_element.styleAttrs[cs.qname] = cstyle;\r\n                } else {\r\n                    reportError(errorHandler, \"Style '\" + cs.qname + \"' on element '\" + isd_element.kind + \"' cannot be computed\");\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        /* prune if tts:display is none */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.display.qname] === \"none\")\r\n            return null;\r\n\r\n        /* process contents of the element */\r\n\r\n        var contents;\r\n\r\n        if (parent === null) {\r\n\r\n            /* we are processing the region */\r\n\r\n            if (body === null) {\r\n\r\n                /* if there is no body, still process the region but with empty content */\r\n\r\n                contents = [];\r\n\r\n            } else {\r\n\r\n                /*use the body element as contents */\r\n\r\n                contents = [body];\r\n\r\n            }\r\n\r\n        } else if ('contents' in elem) {\r\n\r\n            contents = elem.contents;\r\n\r\n        }\r\n\r\n        for (var x in contents) {\r\n\r\n            var c = isdProcessContentElement(doc, offset, region, body, isd_element, associated_region_id, contents[x], errorHandler, context);\r\n\r\n            /* \r\n             * keep child element only if they are non-null and their region match \r\n             * the region of this element\r\n             */\r\n\r\n            if (c !== null) {\r\n\r\n                isd_element.contents.push(c.element);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute used value of lineHeight=\"normal\" */\r\n\r\n        /*        if (isd_element.styleAttrs[imscStyles.byName.lineHeight.qname] === \"normal\"  ) {\r\n         \r\n         isd_element.styleAttrs[imscStyles.byName.lineHeight.qname] =\r\n         isd_element.styleAttrs[imscStyles.byName.fontSize.qname] * 1.2;\r\n         \r\n         }\r\n         */\r\n\r\n        /* remove styles that are not applicable */\r\n\r\n        for (var qnameb in isd_element.styleAttrs) {\r\n            var da = imscStyles.byQName[qnameb];\r\n\r\n            if (da.applies.indexOf(isd_element.kind) === -1) {\r\n                delete isd_element.styleAttrs[qnameb];\r\n            }\r\n        }\r\n\r\n        /* collapse white space if space is \"default\" */\r\n\r\n        if (isd_element.kind === 'span' && isd_element.text && isd_element.space === \"default\") {\r\n\r\n            var trimmedspan = isd_element.text.replace(/\\s+/g, ' ');\r\n\r\n            isd_element.text = trimmedspan;\r\n\r\n        }\r\n\r\n        /* trim whitespace around explicit line breaks */\r\n\r\n        if (isd_element.kind === 'p') {\r\n\r\n            var elist = [];\r\n\r\n            constructSpanList(isd_element, elist);\r\n\r\n            var l = 0;\r\n\r\n            var state = \"after_br\";\r\n            var br_pos = 0;\r\n\r\n            while (true) {\r\n\r\n                if (state === \"after_br\") {\r\n\r\n                    if (l >= elist.length || elist[l].kind === \"br\") {\r\n\r\n                        state = \"before_br\";\r\n                        br_pos = l;\r\n                        l--;\r\n\r\n                    } else {\r\n\r\n                        if (elist[l].space !== \"preserve\") {\r\n\r\n                            elist[l].text = elist[l].text.replace(/^\\s+/g, '');\r\n\r\n                        }\r\n\r\n                        if (elist[l].text.length > 0) {\r\n\r\n                            state = \"looking_br\";\r\n                            l++;\r\n\r\n                        } else {\r\n\r\n                            elist.splice(l, 1);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if (state === \"before_br\") {\r\n\r\n                    if (l < 0 || elist[l].kind === \"br\") {\r\n\r\n                        state = \"after_br\";\r\n                        l = br_pos + 1;\r\n\r\n                        if (l >= elist.length) break;\r\n\r\n                    } else {\r\n\r\n                        if (elist[l].space !== \"preserve\") {\r\n\r\n                            elist[l].text = elist[l].text.replace(/\\s+$/g, '');\r\n\r\n                        }\r\n\r\n                        if (elist[l].text.length > 0) {\r\n\r\n                            state = \"after_br\";\r\n                            l = br_pos + 1;\r\n\r\n                            if (l >= elist.length) break;\r\n\r\n                        } else {\r\n\r\n                            elist.splice(l, 1);\r\n                            l--;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (l >= elist.length || elist[l].kind === \"br\") {\r\n\r\n                        state = \"before_br\";\r\n                        br_pos = l;\r\n                        l--;\r\n\r\n                    } else {\r\n\r\n                        l++;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n            \r\n            pruneEmptySpans(isd_element);\r\n\r\n        }\r\n\r\n        /* keep element if:\r\n         * * contains a background image\r\n         * * <br/>\r\n         * * if there are children\r\n         * * if <span> and has text\r\n         * * if region and showBackground = always\r\n         */\r\n\r\n        if ((isd_element.kind === 'div' && imscStyles.byName.backgroundImage.qname in isd_element.styleAttrs) ||\r\n            isd_element.kind === 'br' ||\r\n            ('contents' in isd_element && isd_element.contents.length > 0) ||\r\n            (isd_element.kind === 'span' && isd_element.text !== null) ||\r\n            (isd_element.kind === 'region' &&\r\n                isd_element.styleAttrs[imscStyles.byName.showBackground.qname] === 'always')) {\r\n\r\n            return {\r\n                region_id: associated_region_id,\r\n                element: isd_element\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function constructSpanList(element, elist) {\r\n\r\n        if ('contents' in element) {\r\n\r\n            for (var i in element.contents) {\r\n                constructSpanList(element.contents[i], elist);\r\n            }\r\n\r\n        } else {\r\n\r\n            elist.push(element);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function pruneEmptySpans(element) {\r\n\r\n        if (element.kind === 'br') {\r\n            \r\n            return false;\r\n            \r\n        } else if ('text' in element) {\r\n            \r\n            return  element.text.length === 0;\r\n            \r\n        } else if ('contents' in element) {\r\n            \r\n            var i = element.contents.length;\r\n\r\n            while (i--) {\r\n                \r\n                if (pruneEmptySpans(element.contents[i])) {\r\n                    element.contents.splice(i, 1);\r\n                }\r\n                \r\n            }\r\n            \r\n            return element.contents.length === 0;\r\n\r\n        }\r\n    }\r\n\r\n    function ISD(tt) {\r\n        this.contents = [];\r\n        this.aspectRatio = tt.aspectRatio;\r\n    }\r\n\r\n    function ISDContentElement(ttelem) {\r\n\r\n        /* assume the element is a region if it does not have a kind */\r\n\r\n        this.kind = ttelem.kind || 'region';\r\n        \r\n        /* copy id */\r\n        \r\n        if (ttelem.id) {\r\n            this.id = ttelem.id;\r\n        }\r\n\r\n        /* deep copy of style attributes */\r\n        this.styleAttrs = {};\r\n\r\n        for (var sname in ttelem.styleAttrs) {\r\n\r\n            this.styleAttrs[sname] =\r\n                ttelem.styleAttrs[sname];\r\n        }\r\n\r\n        /* TODO: clean this! */\r\n\r\n        if ('text' in ttelem) {\r\n\r\n            this.text = ttelem.text;\r\n\r\n        } else if (ttelem.kind !== 'br') {\r\n            \r\n            this.contents = [];\r\n        }\r\n\r\n        if ('space' in ttelem) {\r\n\r\n            this.space = ttelem.space;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscISD = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(41) : imscNames,\r\n    typeof imscStyles === 'undefined' ? require(42) : imscStyles\r\n    );\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nexports.generateISD = require(39).generateISD;\r\nexports.fromXML = require(37).fromXML;\r\nexports.renderHTML = require(38).render;","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscNames\r\n */\r\n\r\n;\r\n(function (imscNames) { // wrapper for non-node envs\r\n\r\n    imscNames.ns_tt = \"http://www.w3.org/ns/ttml\";\r\n    imscNames.ns_tts = \"http://www.w3.org/ns/ttml#styling\";\r\n    imscNames.ns_ttp = \"http://www.w3.org/ns/ttml#parameter\";\r\n    imscNames.ns_xml = \"http://www.w3.org/XML/1998/namespace\";\r\n    imscNames.ns_itts = \"http://www.w3.org/ns/ttml/profile/imsc1#styling\";\r\n    imscNames.ns_ittp = \"http://www.w3.org/ns/ttml/profile/imsc1#parameter\";\r\n    imscNames.ns_smpte = \"http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt\";\r\n    imscNames.ns_ebutts = \"urn:ebu:tt:style\";\r\n    \r\n})(typeof exports === 'undefined' ? this.imscNames = {} : exports);\r\n\r\n\r\n\r\n\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscStyles\r\n */\r\n\r\n;\r\n(function (imscStyles, imscNames, imscUtils) { // wrapper for non-node envs\r\n\r\n    function StylingAttributeDefinition(ns, name, initialValue, appliesTo, isInherit, isAnimatable, parseFunc, computeFunc) {\r\n        this.name = name;\r\n        this.ns = ns;\r\n        this.qname = ns + \" \" + name;\r\n        this.inherit = isInherit;\r\n        this.animatable = isAnimatable;\r\n        this.initial = initialValue;\r\n        this.applies = appliesTo;\r\n        this.parse = parseFunc;\r\n        this.compute = computeFunc;\r\n    }\r\n\r\n    imscStyles.all = [\r\n\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"backgroundColor\",\r\n                \"transparent\",\r\n                ['body', 'div', 'p', 'region', 'span'],\r\n                false,\r\n                true,\r\n                imscUtils.parseColor,\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"color\",\r\n                \"white\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                imscUtils.parseColor,\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"direction\",\r\n                \"ltr\",\r\n                ['p', 'span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"display\",\r\n                \"auto\",\r\n                ['body', 'div', 'p', 'region', 'span'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"displayAlign\",\r\n                \"before\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"extent\",\r\n                \"auto\",\r\n                ['tt', 'region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n\r\n                    if (str === \"auto\") {\r\n\r\n                        return str;\r\n\r\n                    } else {\r\n\r\n                        var s = str.split(\" \");\r\n                        if (s.length !== 2) return null;\r\n                        var w = imscUtils.parseLength(s[0]);\r\n                        var h = imscUtils.parseLength(s[1]);\r\n                        if (!h || !w) return null;\r\n                        return {'h': h, 'w': w};\r\n                    }\r\n\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    var h;\r\n                    var w;\r\n\r\n                    if (attr === \"auto\") {\r\n\r\n                        h = 1;\r\n\r\n                    } else if (attr.h.unit === \"%\") {\r\n\r\n                        h = attr.h.value / 100;\r\n\r\n                    } else if (attr.h.unit === \"px\") {\r\n\r\n                        h = attr.h.value / doc.pxDimensions.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    if (attr === \"auto\") {\r\n\r\n                        w = 1;\r\n\r\n                    } else if (attr.w.unit === \"%\") {\r\n\r\n                        w = attr.w.value / 100;\r\n\r\n                    } else if (attr.w.unit === \"px\") {\r\n\r\n                        w = attr.w.value / doc.pxDimensions.w;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    return {'h': h, 'w': w};\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"fontFamily\",\r\n                \"default\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    var ffs = str.split(\",\");\r\n                    var rslt = [];\r\n\r\n                    for (var i in ffs) {\r\n\r\n                        if (ffs[i].charAt(0) !== \"'\" && ffs[i].charAt(0) !== '\"') {\r\n\r\n                            if (ffs[i] === \"default\") {\r\n\r\n                                /* per IMSC1 */\r\n\r\n                                rslt.push(\"monospaceSerif\");\r\n\r\n                            } else {\r\n\r\n                                rslt.push(ffs[i]);\r\n\r\n                            }\r\n\r\n                        } else {\r\n\r\n                            rslt.push(ffs[i]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    return rslt;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"fontSize\",\r\n                \"1c\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                imscUtils.parseLength,\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    var fs;\r\n\r\n                    if (attr.unit === \"%\") {\r\n\r\n                        if (parent !== null) {\r\n\r\n                            fs = parent.styleAttrs[imscStyles.byName.fontSize.qname] * attr.value / 100;\r\n\r\n                        } else {\r\n\r\n                            /* region, so percent of 1c */\r\n\r\n                            fs = attr.value / 100 / doc.cellResolution.h;\r\n\r\n                        }\r\n\r\n                    } else if (attr.unit === \"em\") {\r\n\r\n                        if (parent !== null) {\r\n\r\n                            fs = parent.styleAttrs[imscStyles.byName.fontSize.qname] * attr.value;\r\n\r\n                        } else {\r\n\r\n                            /* region, so percent of 1c */\r\n\r\n                            fs = attr.value / doc.cellResolution.h;\r\n\r\n                        }\r\n\r\n                    } else if (attr.unit === \"c\") {\r\n\r\n                        fs = attr.value / doc.cellResolution.h;\r\n\r\n                    } else if (attr.unit === \"px\") {\r\n\r\n                        fs = attr.value / doc.pxDimensions.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    return fs;\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"fontStyle\",\r\n                \"normal\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    /* TODO: handle font style */\r\n\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"fontWeight\",\r\n                \"normal\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    /* TODO: handle font weight */\r\n\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"lineHeight\",\r\n                \"normal\",\r\n                ['p'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    if (str === \"normal\") {\r\n                        return str;\r\n                    } else {\r\n                        return imscUtils.parseLength(str);\r\n                    }\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    var lh;\r\n\r\n                    if (attr === \"normal\") {\r\n\r\n                        /* inherit normal per https://github.com/w3c/ttml1/issues/220 */\r\n\r\n                        lh = attr;\r\n\r\n                    } else if (attr.unit === \"%\") {\r\n\r\n                        lh = element.styleAttrs[imscStyles.byName.fontSize.qname] * attr.value / 100;\r\n\r\n                    } else if (attr.unit === \"em\") {\r\n\r\n                        lh = element.styleAttrs[imscStyles.byName.fontSize.qname] * attr.value;\r\n\r\n                    } else if (attr.unit === \"c\") {\r\n\r\n                        lh = attr.value / doc.cellResolution.h;\r\n\r\n                    } else if (attr.unit === \"px\") {\r\n\r\n                        /* TODO: handle error if no px dimensions are provided */\r\n\r\n                        lh = attr.value / doc.pxDimensions.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    /* TODO: create a Length constructor */\r\n\r\n                    return lh;\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"opacity\",\r\n                1.0,\r\n                ['region'],\r\n                false,\r\n                true,\r\n                parseFloat,\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"origin\",\r\n                \"auto\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n\r\n                    if (str === \"auto\") {\r\n\r\n                        return str;\r\n\r\n                    } else {\r\n\r\n                        var s = str.split(\" \");\r\n                        if (s.length !== 2) return null;\r\n                        var w = imscUtils.parseLength(s[0]);\r\n                        var h = imscUtils.parseLength(s[1]);\r\n                        if (!h || !w) return null;\r\n                        return {'h': h, 'w': w};\r\n                    }\r\n\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    var h;\r\n                    var w;\r\n\r\n                    if (attr === \"auto\") {\r\n\r\n                        h = 0;\r\n\r\n                    } else if (attr.h.unit === \"%\") {\r\n\r\n                        h = attr.h.value / 100;\r\n\r\n                    } else if (attr.h.unit === \"px\") {\r\n\r\n                        h = attr.h.value / doc.pxDimensions.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    if (attr === \"auto\") {\r\n\r\n                        w = 0;\r\n\r\n                    } else if (attr.w.unit === \"%\") {\r\n\r\n                        w = attr.w.value / 100;\r\n\r\n                    } else if (attr.w.unit === \"px\") {\r\n\r\n                        w = attr.w.value / doc.pxDimensions.w;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    return {'h': h, 'w': w};\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"overflow\",\r\n                \"hidden\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"padding\",\r\n                \"0px\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n\r\n                    var s = str.split(\" \");\r\n                    if (s.length > 4) return null;\r\n                    var r = [];\r\n                    for (var i in s) {\r\n\r\n                        var l = imscUtils.parseLength(s[i]);\r\n                        if (!l) return null;\r\n                        r.push(l);\r\n                    }\r\n\r\n                    return r;\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    var padding;\r\n\r\n                    /* TODO: make sure we are in region */\r\n\r\n                    /*\r\n                     * expand padding shortcuts to \r\n                     * [before, end, after, start]\r\n                     * \r\n                     */\r\n\r\n                    if (attr.length === 1) {\r\n\r\n                        padding = [attr[0], attr[0], attr[0], attr[0]];\r\n\r\n                    } else if (attr.length === 2) {\r\n\r\n                        padding = [attr[0], attr[1], attr[0], attr[1]];\r\n\r\n                    } else if (attr.length === 3) {\r\n\r\n                        padding = [attr[0], attr[1], attr[2], attr[1]];\r\n\r\n                    } else if (attr.length === 4) {\r\n\r\n                        padding = [attr[0], attr[1], attr[2], attr[3]];\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    /* TODO: take into account tts:direction */\r\n\r\n                    /* \r\n                     * transform [before, end, after, start] according to writingMode to \r\n                     * [top,left,bottom,right]\r\n                     * \r\n                     */\r\n\r\n                    var dir = element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n                    if (dir === \"lrtb\" || dir === \"lr\") {\r\n\r\n                        padding = [padding[0], padding[3], padding[2], padding[1]];\r\n\r\n                    } else if (dir === \"rltb\" || dir === \"rl\") {\r\n\r\n                        padding = [padding[0], padding[1], padding[2], padding[3]];\r\n\r\n                    } else if (dir === \"tblr\") {\r\n\r\n                        padding = [padding[3], padding[0], padding[1], padding[2]];\r\n\r\n                    } else if (dir === \"tbrl\" || dir === \"tb\") {\r\n\r\n                        padding = [padding[3], padding[2], padding[1], padding[0]];\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                    var out = [];\r\n\r\n                    for (var i in padding) {\r\n\r\n                        if (padding[i].value === 0) {\r\n\r\n                            out[i] = 0;\r\n\r\n                        } else if (padding[i].unit === \"%\") {\r\n\r\n                            if (i === \"0\" || i === \"2\") {\r\n\r\n                                out[i] = element.styleAttrs[imscStyles.byName.extent.qname].h * padding[i].value / 100;\r\n\r\n                            } else {\r\n\r\n                                out[i] = element.styleAttrs[imscStyles.byName.extent.qname].w * padding[i].value / 100;\r\n                            }\r\n\r\n                        } else if (padding[i].unit === \"em\") {\r\n\r\n                            out[i] = element.styleAttrs[imscStyles.byName.fontSize.qname] * padding[i].value;\r\n\r\n                        } else if (padding[i].unit === \"c\") {\r\n\r\n                            out[i] = padding[i].value / doc.cellResolution.h;\r\n\r\n                        } else if (padding[i].unit === \"px\") {\r\n\r\n                            out[i] = padding[i].value / doc.pxDimensions.h;\r\n\r\n                        } else {\r\n\r\n                            return null;\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                    return out;\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"showBackground\",\r\n                \"always\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"textAlign\",\r\n                \"start\",\r\n                ['p'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n                    \r\n                    /* Section 7.16.9 of XSL */\r\n                    \r\n                    if (attr === \"left\") {\r\n                        \r\n                        return \"start\";\r\n                        \r\n                    } else if (attr === \"right\") {\r\n                        \r\n                        return \"end\";\r\n                        \r\n                    } else {\r\n                        \r\n                        return attr;\r\n                        \r\n                    }\r\n                }\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"textDecoration\",\r\n                \"none\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str.split(\" \");\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"textOutline\",\r\n                \"none\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n\r\n                    /*\r\n                     * returns {c: <color>?, thichness: <length>} | \"none\"\r\n                     * \r\n                     */\r\n\r\n                    if (str === \"none\") {\r\n\r\n                        return str;\r\n\r\n                    } else {\r\n\r\n                        var r = {};\r\n                        var s = str.split(\" \");\r\n                        if (s.length === 0 || s.length > 2) return null;\r\n                        var c = imscUtils.parseColor(s[0]);\r\n                       \r\n                        r.color = c;\r\n                        \r\n                        if (c !== null) s.shift();\r\n\r\n                        if (s.length !== 1) return null;\r\n\r\n                        var l = imscUtils.parseLength(s[0]);\r\n\r\n                        if (!l) return null;\r\n\r\n                        r.thickness = l;\r\n\r\n                        return r;\r\n                    }\r\n\r\n                },\r\n                function (doc, parent, element, attr, context) {\r\n\r\n                    /*\r\n                     * returns {color: <color>, thickness: <norm length>}\r\n                     * \r\n                     */\r\n\r\n                    if (attr === \"none\") return attr;\r\n\r\n                    var rslt = {};\r\n\r\n                    if (attr.color === null) {\r\n                        \r\n                        rslt.color = element.styleAttrs[imscStyles.byName.color.qname];\r\n                        \r\n                    } else {\r\n                        \r\n                        rslt.color = attr.color;\r\n\r\n                    }\r\n\r\n                    if (attr.thickness.unit === \"%\") {\r\n\r\n                        rslt.thickness = element.styleAttrs[imscStyles.byName.fontSize.qname] * attr.thickness.value / 100;\r\n\r\n                    } else if (attr.thickness.unit === \"em\") {\r\n\r\n                        rslt.thickness = element.styleAttrs[imscStyles.byName.fontSize.qname] * attr.thickness.value;\r\n\r\n                    } else if (attr.thickness.unit === \"c\") {\r\n\r\n                        rslt.thickness = attr.thickness.value / doc.cellResolution.h;\r\n\r\n                    } else if (attr.thickness.unit === \"px\") {\r\n\r\n                        rslt.thickness = attr.thickness.value / doc.pxDimensions.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n\r\n                    return rslt;\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"unicodeBidi\",\r\n                \"normal\",\r\n                ['span', 'p'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"visibility\",\r\n                \"visible\",\r\n                ['body', 'div', 'p', 'region', 'span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"wrapOption\",\r\n                \"wrap\",\r\n                ['span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"writingMode\",\r\n                \"lrtb\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_tts,\r\n                \"zIndex\",\r\n                \"auto\",\r\n                ['region'],\r\n                false,\r\n                true,\r\n                function (str) {\r\n                    \r\n                    var rslt;\r\n                    \r\n                    if (str === 'auto') {\r\n                        \r\n                        rslt = str;\r\n                        \r\n                    } else {\r\n                        \r\n                        rslt = parseInt(str);\r\n                        \r\n                        if (isNaN(rslt)) {\r\n                            rslt = null;\r\n                        }\r\n                        \r\n                    }\r\n                    \r\n                    return rslt;\r\n                },\r\n                null\r\n                ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_ebutts,\r\n                \"linePadding\",\r\n                \"0c\",\r\n                ['p'],\r\n                true,\r\n                false,\r\n                imscUtils.parseLength,\r\n                function (doc, parent, element, attr, context) {\r\n                    if (attr.unit === \"c\") {\r\n\r\n                        return attr.value / doc.cellResolution.h;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n                }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_ebutts,\r\n                \"multiRowAlign\",\r\n                \"auto\",\r\n                ['p'],\r\n                true,\r\n                false,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_smpte,\r\n                \"backgroundImage\",\r\n                null,\r\n                ['div'],\r\n                false,\r\n                false,\r\n                function (str) {\r\n                    return str;\r\n                },\r\n                null\r\n                ),\r\n\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_itts,\r\n                \"forcedDisplay\",\r\n                \"false\",\r\n                ['body', 'div', 'p', 'region', 'span'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str === 'true' ? true : false;\r\n                },\r\n                null\r\n                ),\r\n\r\n        new StylingAttributeDefinition(\r\n                imscNames.ns_itts,\r\n                \"fillLineGap\",\r\n                \"false\",\r\n                ['p'],\r\n                true,\r\n                true,\r\n                function (str) {\r\n                    return str === 'true' ? true : false;\r\n                },\r\n                null\r\n                )\r\n    ];\r\n\r\n    /* TODO: allow null parse function */\r\n\r\n    imscStyles.byQName = {};\r\n    for (var i in imscStyles.all) {\r\n\r\n        imscStyles.byQName[imscStyles.all[i].qname] = imscStyles.all[i];\r\n    }\r\n\r\n    imscStyles.byName = {};\r\n    for (var j in imscStyles.all) {\r\n\r\n        imscStyles.byName[imscStyles.all[j].name] = imscStyles.all[j];\r\n    }\r\n\r\n})(typeof exports === 'undefined' ? this.imscStyles = {} : exports,\r\n        typeof imscNames === 'undefined' ? require(41) : imscNames,\r\n        typeof imscUtils === 'undefined' ? require(43) : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscUtils\r\n */\r\n\r\n;\r\n(function (imscUtils) { // wrapper for non-node envs\r\n    \r\n    /* Documents the error handler interface */\r\n    \r\n    /**\r\n     * @classdesc Generic interface for handling events. The interface exposes four\r\n     * methods:\r\n     * * <pre>info</pre>: unusual event that does not result in an inconsistent state\r\n     * * <pre>warn</pre>: unexpected event that should not result in an inconsistent state\r\n     * * <pre>error</pre>: unexpected event that may result in an inconsistent state\r\n     * * <pre>fatal</pre>: unexpected event that results in an inconsistent state\r\n     *   and termination of processing\r\n     * Each method takes a single <pre>string</pre> describing the event as argument,\r\n     * and returns a single <pre>boolean</pre>, which terminates processing if <pre>true</pre>.\r\n     *\r\n     * @name ErrorHandler\r\n     * @class\r\n     */\r\n\r\n\r\n    /*\r\n     * Parses a TTML color expression\r\n     * \r\n     */\r\n\r\n    var HEX_COLOR_RE = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/;\r\n    var DEC_COLOR_RE = /rgb\\((\\d+),(\\d+),(\\d+)\\)/;\r\n    var DEC_COLORA_RE = /rgba\\((\\d+),(\\d+),(\\d+),(\\d+)\\)/;\r\n    var NAMED_COLOR = {\r\n        transparent: [0, 0, 0, 0],\r\n        black: [0, 0, 0, 255],\r\n        silver: [192, 192, 192, 255],\r\n        gray: [128, 128, 128, 255],\r\n        white: [255, 255, 255, 255],\r\n        maroon: [128, 0, 0, 255],\r\n        red: [255, 0, 0, 255],\r\n        purple: [128, 0, 128, 255],\r\n        fuchsia: [255, 0, 255, 255],\r\n        magenta: [255, 0, 255, 255],\r\n        green: [0, 128, 0, 255],\r\n        lime: [0, 255, 0, 255],\r\n        olive: [128, 128, 0, 255],\r\n        yellow: [255, 255, 0, 255],\r\n        navy: [0, 0, 128, 255],\r\n        blue: [0, 0, 255, 255],\r\n        teal: [0, 128, 128, 255],\r\n        aqua: [0, 255, 255, 255],\r\n        cyan: [0, 255, 255, 255]\r\n    };\r\n\r\n    imscUtils.parseColor = function (str) {\r\n\r\n        var m;\r\n        var r = null;\r\n        if (str in NAMED_COLOR) {\r\n\r\n            r = NAMED_COLOR[str];\r\n\r\n        } else if ((m = HEX_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1], 16),\r\n                parseInt(m[2], 16),\r\n                parseInt(m[3], 16),\r\n                (m[4] !== undefined ? parseInt(m[4], 16) : 255)];\r\n        } else if ((m = DEC_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                255];\r\n        } else if ((m = DEC_COLORA_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                parseInt(m[4])];\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    var LENGTH_RE = /^((?:\\+|\\-)?\\d*(?:\\.\\d+)?)(px|em|c|%)$/;\r\n\r\n    imscUtils.parseLength = function (str) {\r\n\r\n        var m;\r\n\r\n        var r = null;\r\n\r\n        if ((m = LENGTH_RE.exec(str)) !== null) {\r\n\r\n            r = {value: parseFloat(m[1]), unit: m[2]};\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n})(typeof exports === 'undefined' ? this.imscUtils = {} : exports);\r\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\nconst LOG_LEVEL_NONE = 0;\nconst LOG_LEVEL_FATAL = 1;\nconst LOG_LEVEL_ERROR = 2;\nconst LOG_LEVEL_WARNING = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DEBUG = 5;\n\n/**\n * @module Debug\n */\nfunction Debug() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const logFn = [];\n\n    let instance,\n        showLogTimestamp,\n        showCalleeName,\n        startTime,\n        logLevel;\n\n    function setup() {\n        showLogTimestamp = true;\n        showCalleeName = true;\n        logLevel = LOG_LEVEL_WARNING;\n        startTime = new Date().getTime();\n\n        if (typeof window !== 'undefined' && window.console) {\n            logFn[LOG_LEVEL_FATAL] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_ERROR] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_WARNING] = getLogFn(window.console.warn);\n            logFn[LOG_LEVEL_INFO] = getLogFn(window.console.info);\n            logFn[LOG_LEVEL_DEBUG] = getLogFn(window.console.debug);\n        }\n    }\n\n    function getLogFn(fn) {\n        if (fn && fn.bind) {\n            return fn.bind(window.console);\n        }\n        // if not define, return the default function for reporting logs\n        return window.console.log.bind(window.console);\n    }\n\n    /**\n     * Retrieves a logger which can be used to write logging information in browser console.\n     * @param {object} instance Object for which the logger is created. It is used\n     * to include calle object information in log messages.\n     * @memberof module:Debug\n     * @returns {Logger}\n     * @instance\n     */\n    function getLogger(instance) {\n        return {\n            fatal: fatal.bind(instance),\n            error: error.bind(instance),\n            warn: warn.bind(instance),\n            info: info.bind(instance),\n            debug: debug.bind(instance)\n        };\n    }\n\n    /**\n     * Sets up the log level. The levels are cumulative. For example, if you set the log level\n     * to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged. Possible values\n     *\n     * <ul>\n     * <li>dashjs.Debug.LOG_LEVEL_NONE<br/>\n     * No message is written in the browser console.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_FATAL<br/>\n     * Log fatal errors. An error is considered fatal when it causes playback to fail completely.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_ERROR<br/>\n     * Log error messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_WARNING<br/>\n     * Log warning messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_INFO<br/>\n     * Log info messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_DEBUG<br/>\n     * Log debug messages.\n     * </ul>\n     * @param {number} value Log level\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogLevel(value) {\n        logLevel = value;\n    }\n\n    /**\n     * Use this method to get the current log level.\n     * @memberof module:Debug\n     * @instance\n     */\n    function getLogLevel() {\n        return logLevel;\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default LOG_LEVEL_WARNING\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n    /**\n     * Prepends the callee object name, and media type if available, to each log message.\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setCalleeNameVisible(value) {\n        showCalleeName = value;\n    }\n    /**\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     * @deprecated\n     */\n    function setLogToBrowserConsole(value) {\n        // Replicate functionality previous to log levels feature\n        if (value) {\n            logLevel = LOG_LEVEL_DEBUG;\n        } else {\n            logLevel = LOG_LEVEL_NONE;\n        }\n    }\n    /**\n     * Use this method to get the state of logToBrowserConsole.\n     * @returns {boolean} The current value of logToBrowserConsole\n     * @memberof module:Debug\n     * @instance\n     * @deprecated\n     */\n    function getLogToBrowserConsole() {\n        return logLevel !== LOG_LEVEL_NONE;\n    }\n\n    function fatal(...params) {\n        doLog(LOG_LEVEL_FATAL, this, ...params);\n    }\n\n    function error(...params) {\n        doLog(LOG_LEVEL_ERROR, this, ...params);\n    }\n\n    function warn(...params) {\n        doLog(LOG_LEVEL_WARNING, this, ...params);\n    }\n\n    function info(...params) {\n        doLog(LOG_LEVEL_INFO, this, ...params);\n    }\n\n    function debug(...params) {\n        doLog(LOG_LEVEL_DEBUG, this, ...params);\n    }\n\n    function doLog(level, _this, ...params) {\n        if (logLevel < level) {\n            return;\n        }\n\n        let message = '';\n        let logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (showCalleeName && _this && _this.getClassName) {\n            message += '[' + _this.getClassName() + ']';\n            if (_this.getType) {\n                message += '[' + _this.getType() + ']';\n            }\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, params).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        if (logFn[level]) {\n            logFn[level](message);\n        }\n\n        // TODO: To be removed\n        eventBus.trigger(Events.LOG, {message: message});\n    }\n\n    instance = {\n        getLogger: getLogger,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setCalleeNameVisible: setCalleeNameVisible,\n        setLogToBrowserConsole: setLogToBrowserConsole,\n        getLogToBrowserConsole: getLogToBrowserConsole,\n        setLogLevel: setLogLevel,\n        getLogLevel: getLogLevel\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\n\nconst factory = FactoryMaker.getSingletonFactory(Debug);\nfactory.LOG_LEVEL_NONE = LOG_LEVEL_NONE;\nfactory.LOG_LEVEL_FATAL = LOG_LEVEL_FATAL;\nfactory.LOG_LEVEL_ERROR = LOG_LEVEL_ERROR;\nfactory.LOG_LEVEL_WARNING = LOG_LEVEL_WARNING;\nfactory.LOG_LEVEL_INFO = LOG_LEVEL_INFO;\nfactory.LOG_LEVEL_DEBUG = LOG_LEVEL_DEBUG;\nFactoryMaker.updateSingletonFactory(Debug.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (item && priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type][idx] = null;\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type] = handlers[type].filter((item) => item);\n        handlers[type].forEach( handler => handler && handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nconst FactoryMaker = (function () {\n\n    let instance;\n    const singletonContexts = [];\n    const singletonFactories = {};\n    const classFactories = {};\n\n    function extend(name, childInstance, override, context) {\n        if (!context[name] && childInstance) {\n            context[name] = {\n                instance: childInstance,\n                override: override\n            };\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({\n            name: className,\n            context: context,\n            instance: instance\n        });\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Factories storage Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function getFactoryByName(name, factoriesArray) {\n        return factoriesArray[name];\n    }\n\n    function updateFactory(name, factory, factoriesArray) {\n        if (name in factoriesArray) {\n            factoriesArray[name] = factory;\n        }\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Class Factories Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateClassFactory(name, factory) {\n        updateFactory(name, factory, classFactories);\n    }\n\n    function getClassFactoryByName(name) {\n        return getFactoryByName(name, classFactories);\n    }\n\n    function getClassFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\n\n        if (!factory) {\n            factory = function (context) {\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    create: function () {\n                        return merge(classConstructor, context, arguments);\n                    }\n                };\n            };\n\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n        return factory;\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Singleton Factory MAangement\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateSingletonFactory(name, factory) {\n        updateFactory(name, factory, singletonFactories);\n    }\n\n    function getSingletonFactoryByName(name) {\n        return getFactoryByName(name, singletonFactories);\n    }\n\n    function getSingletonFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\n        if (!factory) {\n            factory = function (context) {\n                let instance;\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    getInstance: function () {\n                        // If we don't have an instance yet check for one on the context\n                        if (!instance) {\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                        }\n                        // If there's no instance on the context then create one\n                        if (!instance) {\n                            instance = merge(classConstructor, context, arguments);\n                            singletonContexts.push({\n                                name: classConstructor.__dashjs_factory_name,\n                                context: context,\n                                instance: instance\n                            });\n                        }\n                        return instance;\n                    }\n                };\n            };\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n\n        return factory;\n    }\n\n    function merge(classConstructor, context, args) {\n\n        let classInstance;\n        const className = classConstructor.__dashjs_factory_name;\n        const extensionObject = context[className];\n\n        if (extensionObject) {\n\n            let extension = extensionObject.instance;\n\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n\n                classInstance = classConstructor.apply({context}, args);\n                extension = extension.apply({\n                    context,\n                    factory: instance,\n                    parent: classInstance\n                }, args);\n\n                for (const prop in extension) {\n                    if (classInstance.hasOwnProperty(prop)) {\n                        classInstance[prop] = extension[prop];\n                    }\n                }\n\n            } else { //replace parent object completely with new object. Same as dijon.\n\n                return extension.apply({\n                    context,\n                    factory: instance\n                }, args);\n\n            }\n        } else {\n            // Create new instance of the class\n            classInstance = classConstructor.apply({context}, args);\n        }\n\n        // Add getClassName function to class instance prototype (used by Debug)\n        classInstance.getClassName = function () {return className;};\n\n        return classInstance;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getSingletonFactoryByName: getSingletonFactoryByName,\n        updateSingletonFactory: updateSingletonFactory,\n        getClassFactory: getClassFactory,\n        getClassFactoryByName: getClassFactoryByName,\n        updateClassFactory: updateClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","const VERSION = '2.8.0';\nexport function getVersionString() {\n    return VERSION;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * These are internal events that should not be needed at the player level.\n * If you find and event in here that you would like access to from MediaPlayer level\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.BYTES_APPENDED_END_FRAGMENT = 'bytesAppendedEndFragment';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.LOADING_DATA_PROGRESS = 'loadingDataProgress';\n        this.LOADING_ABANDONED = 'loadingAborted';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_ADD = 'serviceLocationBlacklistAdd';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.TEXT_TRACKS_QUEUE_INITIALIZED = 'textTracksQueueInitialized';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../streaming/constants/Constants';\nimport RepresentationInfo from '../streaming/vo/RepresentationInfo';\nimport MediaInfo from '../streaming/vo/MediaInfo';\nimport StreamInfo from '../streaming/vo/StreamInfo';\nimport ManifestInfo from '../streaming/vo/ManifestInfo';\nimport Event from './vo/Event';\nimport FactoryMaker from '../core/FactoryMaker';\nimport cea608parser from '../../externals/cea608-parser';\n\nfunction DashAdapter() {\n    let instance,\n        dashManifestModel,\n        voPeriods,\n        voAdaptations;\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n\n    function getRepresentationForRepresentationInfo(representationInfo, representationController) {\n        return representationController && representationInfo ? representationController.getRepresentationForQuality(representationInfo.quality) : null;\n    }\n\n    function getAdaptationForMediaInfo(mediaInfo) {\n\n        if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations[mediaInfo.streamInfo.id]) return null;\n        return voAdaptations[mediaInfo.streamInfo.id][mediaInfo.index];\n    }\n\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\n        const ln = voPeriodsArray.length;\n\n        for (let i = 0; i < ln; i++) {\n            let voPeriod = voPeriodsArray[i];\n\n            if (streamInfo.id === voPeriod.id) return voPeriod;\n        }\n\n        return null;\n    }\n\n    function convertRepresentationToRepresentationInfo(voRepresentation) {\n        let representationInfo = new RepresentationInfo();\n        const realAdaptation = voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];\n        const realRepresentation = dashManifestModel.getRepresentationFor(voRepresentation.index, realAdaptation);\n\n        representationInfo.id = voRepresentation.id;\n        representationInfo.quality = voRepresentation.index;\n        representationInfo.bandwidth = dashManifestModel.getBandwidth(realRepresentation);\n        representationInfo.DVRWindow = voRepresentation.segmentAvailabilityRange;\n        representationInfo.fragmentDuration = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length > 0 ? voRepresentation.segments[0].duration : NaN);\n        representationInfo.MSETimeOffset = voRepresentation.MSETimeOffset;\n        representationInfo.useCalculatedLiveEdgeTime = voRepresentation.useCalculatedLiveEdgeTime;\n        representationInfo.mediaInfo = convertAdaptationToMediaInfo(voRepresentation.adaptation);\n\n        return representationInfo;\n    }\n\n    function convertAdaptationToMediaInfo(adaptation) {\n        let mediaInfo = new MediaInfo();\n        const realAdaptation = adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];\n        let viewpoint;\n\n        mediaInfo.id = adaptation.id;\n        mediaInfo.index = adaptation.index;\n        mediaInfo.type = adaptation.type;\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\n        viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\n        mediaInfo.viewpoint = viewpoint ? viewpoint.value : undefined;\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation).map(function (accessibility) {\n            let accessibilityValue = accessibility.value;\n            let accessibilityData = accessibilityValue;\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\n                if (accessibilityValue) {\n                    accessibilityData = 'cea-608:' + accessibilityValue;\n                } else {\n                    accessibilityData = 'cea-608';\n                }\n                mediaInfo.embeddedCaptions = true;\n            }\n            return accessibilityData;\n        });\n\n        mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation).map(function (audioChannelConfiguration) {\n            return audioChannelConfiguration.value;\n        });\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(realAdaptation).map(function (role) {\n            return role.value;\n        });\n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionData(realAdaptation);\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\n\n        if (mediaInfo.contentProtection) {\n            mediaInfo.contentProtection.forEach(function (item) {\n                item.KID = dashManifestModel.getKID(item);\n            });\n        }\n\n        mediaInfo.isText = dashManifestModel.getIsTextTrack(mediaInfo.mimeType);\n\n        return mediaInfo;\n    }\n\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\n        mediaInfo.type = Constants.EMBEDDED_TEXT;\n        mediaInfo.codec = 'cea-608-in-SEI';\n        mediaInfo.isText = true;\n        mediaInfo.isEmbedded = true;\n        mediaInfo.lang = lang;\n        mediaInfo.roles = ['caption'];\n    }\n\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\n        mediaInfo.type = Constants.IMAGE;\n    }\n\n    function convertPeriodToStreamInfo(period) {\n        let streamInfo = new StreamInfo();\n        const THRESHOLD = 1;\n\n        streamInfo.id = period.id;\n        streamInfo.index = period.index;\n        streamInfo.start = period.start;\n        streamInfo.duration = period.duration;\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\n        streamInfo.isLast = period.mpd.manifest.Period_asArray.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\n\n        return streamInfo;\n    }\n\n    function convertMpdToManifestInfo(mpd) {\n        let manifestInfo = new ManifestInfo();\n\n        manifestInfo.DVRWindowSize = mpd.timeShiftBufferDepth;\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\n\n        return manifestInfo;\n    }\n\n    function getMediaInfoForType(streamInfo, type) {\n\n        if (voPeriods.length === 0) {\n            return null;\n        }\n\n        const manifest = voPeriods[0].mpd.manifest;\n        let realAdaptation = dashManifestModel.getAdaptationForType(manifest, streamInfo.index, type, streamInfo);\n        if (!realAdaptation) return null;\n\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        let periodId = selectedVoPeriod.id;\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, manifest, streamInfo.index);\n\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        return convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\n    }\n\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\n        let voLocalPeriods = voPeriods;\n        let manifest = externalManifest;\n        let mediaArr = [];\n        let data,\n            media,\n            idx,\n            i,\n            j,\n            ln;\n\n        if (manifest) {\n            checkSetConfigCall();\n            const mpd = dashManifestModel.getMpd(manifest);\n\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\n        } else {\n            if (voPeriods.length > 0) {\n                manifest = voPeriods[0].mpd.manifest;\n            } else {\n                return mediaArr;\n            }\n        }\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\n        const periodId = selectedVoPeriod.id;\n        const adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo.index, type !== Constants.EMBEDDED_TEXT ? type : Constants.VIDEO);\n\n        if (!adaptationsForType) return mediaArr;\n\n        voAdaptations[periodId] = voAdaptations[periodId] || dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        for (i = 0, ln = adaptationsForType.length; i < ln; i++) {\n            data = adaptationsForType[i];\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n            media = convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);\n\n            if (type === Constants.EMBEDDED_TEXT) {\n                let accessibilityLength = media.accessibility.length;\n                for (j = 0; j < accessibilityLength; j++) {\n                    if (!media) {\n                        continue;\n                    }\n                    let accessibility = media.accessibility[j];\n                    if (accessibility.indexOf('cea-608:') === 0) {\n                        let value = accessibility.substring(8);\n                        let parts = value.split(';');\n                        if (parts[0].substring(0, 2) === 'CC') {\n                            for (j = 0; j < parts.length; j++) {\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        } else {\n                            for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\n                                if (!media) {\n                                    media = convertAdaptationToMediaInfo.call(this, voAdaptations[periodId][idx]);\n                                }\n                                convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\n                                mediaArr.push(media);\n                                media = null;\n                            }\n                        }\n                    } else if (accessibility.indexOf('cea-608') === 0) { // Nothing known. We interpret it as CC1=eng\n                        convertVideoInfoToEmbeddedTextInfo(media, Constants.CC1, 'eng');\n                        mediaArr.push(media);\n                        media = null;\n                    }\n                }\n            } else if (type === Constants.IMAGE) {\n                convertVideoInfoToThumbnailInfo(media);\n                mediaArr.push(media);\n                media = null;\n            } else if (media) {\n                mediaArr.push(media);\n            }\n        }\n\n        return mediaArr;\n    }\n\n    function checkSetConfigCall() {\n        if (!dashManifestModel || !dashManifestModel.hasOwnProperty('getMpd') || !dashManifestModel.hasOwnProperty('getRegularPeriods')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updatePeriods(newManifest) {\n        if (!newManifest) return null;\n\n        checkSetConfigCall();\n\n        const mpd = dashManifestModel.getMpd(newManifest);\n\n        voPeriods = dashManifestModel.getRegularPeriods(mpd);\n        voAdaptations = {};\n    }\n\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\n        const streams = [];\n        let voLocalPeriods = voPeriods;\n\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\n        if (externalManifest) {\n            checkSetConfigCall();\n            const mpd = dashManifestModel.getMpd(externalManifest);\n\n            voLocalPeriods = dashManifestModel.getRegularPeriods(mpd);\n        }\n\n        if (!maxStreamsInfo) {\n            maxStreamsInfo = voLocalPeriods.length;\n        }\n        for (let i = 0; i < maxStreamsInfo; i++) {\n            streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\n        }\n\n        return streams;\n    }\n\n    function checkStreamProcessor(streamProcessor) {\n        if (!streamProcessor || !streamProcessor.hasOwnProperty('getRepresentationController') || !streamProcessor.hasOwnProperty('getIndexHandler') ||\n            !streamProcessor.hasOwnProperty('getMediaInfo') || !streamProcessor.hasOwnProperty('getType') || !streamProcessor.hasOwnProperty('getStreamInfo')) {\n            throw new Error('streamProcessor parameter is missing or malformed!');\n        }\n    }\n\n    function checkRepresentationController(representationController) {\n        if (!representationController || !representationController.hasOwnProperty('getRepresentationForQuality') || !representationController.hasOwnProperty('getCurrentRepresentation')) {\n            throw new Error('representationController parameter is missing or malformed!');\n        }\n    }\n\n    function checkQuality(quality) {\n        const isInt = quality !== null && !isNaN(quality) && (quality % 1 === 0);\n\n        if (!isInt) {\n            throw new Error('quality argument is not an integer');\n        }\n    }\n\n    function getInitRequest(streamProcessor, quality) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        checkStreamProcessor(streamProcessor);\n        checkQuality(quality);\n\n        representationController = streamProcessor.getRepresentationController();\n        indexHandler = streamProcessor.getIndexHandler();\n\n        representation = representationController ? representationController.getRepresentationForQuality(quality) : null;\n\n        return indexHandler ? indexHandler.getInitRequest(representation) : null;\n    }\n\n    function getNextFragmentRequest(streamProcessor, representationInfo) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        checkStreamProcessor(streamProcessor);\n\n        representationController = streamProcessor.getRepresentationController();\n        representation = getRepresentationForRepresentationInfo(representationInfo, representationController);\n        indexHandler = streamProcessor.getIndexHandler();\n\n        return indexHandler ? indexHandler.getNextSegmentRequest(representation) : null;\n    }\n\n    function getFragmentRequestForTime(streamProcessor, representationInfo, time, options) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        checkStreamProcessor(streamProcessor);\n\n        representationController = streamProcessor.getRepresentationController();\n        representation = getRepresentationForRepresentationInfo(representationInfo, representationController);\n        indexHandler = streamProcessor.getIndexHandler();\n\n        return indexHandler ? indexHandler.getSegmentRequestForTime(representation, time, options) : null;\n    }\n\n    function generateFragmentRequestForTime(streamProcessor, representationInfo, time) {\n        let representationController,\n            representation,\n            indexHandler;\n\n        checkStreamProcessor(streamProcessor);\n\n        representationController = streamProcessor.getRepresentationController();\n        representation = getRepresentationForRepresentationInfo(representationInfo, representationController);\n        indexHandler = streamProcessor.getIndexHandler();\n\n        return indexHandler ? indexHandler.generateSegmentRequestForTime(representation, time) : null;\n    }\n\n    function getIndexHandlerTime(streamProcessor) {\n        checkStreamProcessor(streamProcessor);\n\n        const indexHandler = streamProcessor.getIndexHandler();\n\n        if (indexHandler) {\n            return indexHandler.getCurrentTime();\n        }\n        return NaN;\n    }\n\n    function setIndexHandlerTime(streamProcessor, value) {\n        checkStreamProcessor(streamProcessor);\n\n        const indexHandler = streamProcessor.getIndexHandler();\n        if (indexHandler) {\n            indexHandler.setCurrentTime(value);\n        }\n    }\n\n    function updateData(streamProcessor) {\n        checkStreamProcessor(streamProcessor);\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamProcessor.getStreamInfo(), voPeriods);\n        const mediaInfo = streamProcessor.getMediaInfo();\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\n        const type = streamProcessor.getType();\n\n        let id,\n            realAdaptation;\n\n        id = mediaInfo ? mediaInfo.id : null;\n        if (voPeriods.length > 0) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo.index, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n            streamProcessor.getRepresentationController().updateData(realAdaptation, voAdaptation, type);\n        }\n    }\n\n    function getRepresentationInfoForQuality(representationController, quality) {\n        checkRepresentationController(representationController);\n        checkQuality(quality);\n\n        const voRepresentation = representationController.getRepresentationForQuality(quality);\n        return voRepresentation ? convertRepresentationToRepresentationInfo(voRepresentation) : null;\n    }\n\n    function getCurrentRepresentationInfo(representationController) {\n        checkRepresentationController(representationController);\n        let voRepresentation = representationController.getCurrentRepresentation();\n        return voRepresentation ? convertRepresentationToRepresentationInfo(voRepresentation) : null;\n    }\n\n    function getEvent(eventBox, eventStreams, startTime) {\n        if (!eventBox || !eventStreams) {\n            return null;\n        }\n        const event = new Event();\n        const schemeIdUri = eventBox.scheme_id_uri;\n        const value = eventBox.value;\n        const timescale = eventBox.timescale;\n        const presentationTimeDelta = eventBox.presentation_time_delta;\n        const duration = eventBox.event_duration;\n        const id = eventBox.id;\n        const messageData = eventBox.message_data;\n        const presentationTime = startTime * timescale + presentationTimeDelta;\n\n        if (!eventStreams[schemeIdUri]) return null;\n\n        event.eventStream = eventStreams[schemeIdUri];\n        event.eventStream.value = value;\n        event.eventStream.timescale = timescale;\n        event.duration = duration;\n        event.id = id;\n        event.presentationTime = presentationTime;\n        event.messageData = messageData;\n        event.presentationTimeDelta = presentationTimeDelta;\n\n        return event;\n    }\n\n    function getEventsFor(info, streamProcessor) {\n        let events = [];\n\n        if (voPeriods.length === 0) {\n            return events;\n        }\n\n        const manifest = voPeriods[0].mpd.manifest;\n\n        if (info instanceof StreamInfo) {\n            events = dashManifestModel.getEventsForPeriod(getPeriodForStreamInfo(info, voPeriods));\n        } else if (info instanceof MediaInfo) {\n            events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info));\n        } else if (info instanceof RepresentationInfo) {\n            events = dashManifestModel.getEventStreamForRepresentation(manifest, getRepresentationForRepresentationInfo(info, streamProcessor.getRepresentationController()));\n        }\n\n        return events;\n    }\n\n    function reset() {\n        voPeriods = [];\n        voAdaptations = {};\n    }\n\n    instance = {\n        convertDataToRepresentationInfo: convertRepresentationToRepresentationInfo,\n        getDataForMedia: getAdaptationForMediaInfo,\n        getStreamsInfo: getStreamsInfo,\n        getMediaInfoForType: getMediaInfoForType,\n        getAllMediaInfoForType: getAllMediaInfoForType,\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\n        updateData: updateData,\n        getInitRequest: getInitRequest,\n        getNextFragmentRequest: getNextFragmentRequest,\n        getFragmentRequestForTime: getFragmentRequestForTime,\n        generateFragmentRequestForTime: generateFragmentRequestForTime,\n        getIndexHandlerTime: getIndexHandlerTime,\n        setIndexHandlerTime: setIndexHandlerTime,\n        getEventsFor: getEventsFor,\n        getEvent: getEvent,\n        setConfig: setConfig,\n        updatePeriods: updatePeriods,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../streaming/constants/Constants';\nimport DashConstants from './constants/DashConstants';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport URLUtils from '../streaming/utils/URLUtils';\nimport Representation from './vo/Representation';\nimport {\n    replaceIDForTemplate,\n    unescapeDollarsInTemplate,\n    replaceTokenForTemplate,\n    getTimeBasedSegment,\n    getSegmentByIndex\n} from './utils/SegmentsUtils';\nimport SegmentsGetter from './utils/SegmentsGetter';\n\nimport SegmentBaseLoader from './SegmentBaseLoader';\nimport WebmSegmentBaseLoader from './WebmSegmentBaseLoader';\n\nconst SEGMENTS_UNAVAILABLE_ERROR_CODE = 1;\n\nfunction DashHandler(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let segmentBaseLoader;\n    const timelineConverter = config.timelineConverter;\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const errHandler = config.errHandler;\n    const baseURLController = config.baseURLController;\n\n    let instance,\n        logger,\n        index,\n        requestedTime,\n        currentTime,\n        earliestTime,\n        streamProcessor,\n        segmentsGetter;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        segmentBaseLoader = isWebM(config.mimeType) ? WebmSegmentBaseLoader(context).getInstance() : SegmentBaseLoader(context).getInstance();\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler\n        });\n\n        eventBus.on(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\n        eventBus.on(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\n    }\n\n    function isWebM (mimeType) {\n        const type = mimeType.split('/')[1];\n        return 'webm' === type.toLowerCase();\n    }\n\n    function initialize(StreamProcessor) {\n        streamProcessor = StreamProcessor;\n\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n\n        segmentBaseLoader.initialize();\n\n        segmentsGetter = SegmentsGetter(context).create(config, isDynamic);\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function setCurrentTime(value) {\n        currentTime = value;\n    }\n\n    function getCurrentTime() {\n        return currentTime;\n    }\n\n    function getEarliestTime() {\n        return earliestTime;\n    }\n\n    function resetInitialSettings() {\n        index = -1;\n        currentTime = 0;\n        earliestTime = NaN;\n        requestedTime = null;\n        streamProcessor = null;\n        segmentsGetter = null;\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        eventBus.off(Events.INITIALIZATION_LOADED, onInitializationLoaded, instance);\n        eventBus.off(Events.SEGMENTS_LOADED, onSegmentsLoaded, instance);\n    }\n\n    function setRequestUrl(request, destination, representation) {\n        const baseURL = baseURLController.resolve(representation.path);\n        let url,\n            serviceLocation;\n\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\n            url = destination;\n        } else {\n            url = baseURL.url;\n            serviceLocation = baseURL.serviceLocation;\n\n            if (destination) {\n                url = urlUtils.resolve(destination, url);\n            }\n        }\n\n        if (urlUtils.isRelative(url)) {\n            return false;\n        }\n\n        request.url = url;\n        request.serviceLocation = serviceLocation;\n\n        return true;\n    }\n\n    function generateInitRequest(representation, mediaType) {\n        const request = new FragmentRequest();\n        const period = representation.adaptation.period;\n        const presentationStartTime = period.start;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n\n        request.mediaType = mediaType;\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\n        request.range = representation.range;\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, period.mpd, isDynamic);\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, period.mpd, isDynamic);\n        request.quality = representation.index;\n        request.mediaInfo = streamProcessor ? streamProcessor.getMediaInfo() : null;\n        request.representationId = representation.id;\n\n        if (setRequestUrl(request, representation.initialization, representation)) {\n            return request;\n        }\n    }\n\n    function getInitRequest(representation) {\n        const type = streamProcessor ? streamProcessor.getType() : null;\n        if (!representation) return null;\n        const request = generateInitRequest(representation, type);\n        return request;\n    }\n\n    function isMediaFinished(representation) {\n        let isFinished = false;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n\n        if (!isDynamic && index === representation.availableSegmentsNumber) {\n            isFinished = true;\n        } else {\n            const seg = getSegmentByIndex(index, representation);\n            if (seg) {\n                const time = parseFloat((seg.presentationStartTime - representation.adaptation.period.start).toFixed(5));\n                const duration = representation.adaptation.period.duration;\n                logger.debug(representation.segmentInfoType + ': ' + time + ' / ' + duration);\n                isFinished = representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE && isDynamic ? false : time >= duration;\n            } else {\n                logger.debug('isMediaFinished - no segment found');\n            }\n        }\n\n        return isFinished;\n    }\n\n    function updateSegments(voRepresentation) {\n        segmentsGetter.getSegments(voRepresentation, requestedTime, index, onSegmentListUpdated);\n    }\n\n    function onSegmentListUpdated(voRepresentation, segments) {\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n        voRepresentation.segments = segments;\n        if (segments && segments.length > 0) {\n            earliestTime = isNaN(earliestTime) ? segments[0].presentationStartTime : Math.min(segments[0].presentationStartTime,  earliestTime);\n            if (isDynamic && isNaN(timelineConverter.getExpectedLiveEdge())) {\n                const lastSegment = segments[segments.length - 1];\n                const liveEdge = lastSegment.presentationStartTime;\n                const metrics = metricsModel.getMetricsFor(Constants.STREAM);\n                // the last segment is the Expected, not calculated, live edge.\n                timelineConverter.setExpectedLiveEdge(liveEdge);\n                metricsModel.updateManifestUpdateInfo(dashMetrics.getCurrentManifestUpdate(metrics), {presentationStartTime: liveEdge});\n            }\n        }\n    }\n\n    function updateSegmentList(voRepresentation) {\n        if (!voRepresentation) {\n            throw new Error('no representation');\n        }\n\n        voRepresentation.segments = null;\n\n        updateSegments(voRepresentation);\n    }\n\n    function updateRepresentation(voRepresentation, keepIdx) {\n        const hasInitialization = Representation.hasInitialization(voRepresentation);\n        const hasSegments = Representation.hasSegments(voRepresentation);\n        const type = streamProcessor ? streamProcessor.getType() : null;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n        let error;\n\n        if (!voRepresentation.segmentDuration && !voRepresentation.segments) {\n            updateSegmentList(voRepresentation);\n        }\n\n        voRepresentation.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(voRepresentation, isDynamic);\n\n        if ((voRepresentation.segmentAvailabilityRange.end < voRepresentation.segmentAvailabilityRange.start) && !voRepresentation.useCalculatedLiveEdgeTime) {\n            error = new DashJSError(SEGMENTS_UNAVAILABLE_ERROR_CODE, 'no segments are available yet', {availabilityDelay: voRepresentation.segmentAvailabilityRange.start - voRepresentation.segmentAvailabilityRange.end});\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: voRepresentation, error: error});\n            return;\n        }\n\n        if (!keepIdx) index = -1;\n\n        if (voRepresentation.segmentDuration) {\n            updateSegmentList(voRepresentation);\n        }\n\n        if (!hasInitialization) {\n            segmentBaseLoader.loadInitialization(voRepresentation);\n        }\n\n        if (!hasSegments) {\n            segmentBaseLoader.loadSegments(voRepresentation, type, voRepresentation.indexRange);\n        }\n\n        if (hasInitialization && hasSegments) {\n            eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: voRepresentation});\n        }\n    }\n\n    function getIndexForSegments(time, representation, timeThreshold) {\n        const segments = representation.segments;\n        const ln = segments ? segments.length : null;\n\n        let idx = -1;\n        let epsilon,\n            frag,\n            ft,\n            fd,\n            i;\n\n        if (segments && ln > 0) {\n            // In case timeThreshold is not provided, let's use the default value set in MediaPlayerModel\n            timeThreshold = (timeThreshold === undefined || timeThreshold === null) ?\n                mediaPlayerModel.getSegmentOverlapToleranceTime() : timeThreshold;\n\n            for (i = 0; i < ln; i++) {\n                frag = segments[i];\n                ft = frag.presentationStartTime;\n                fd = frag.duration;\n                // In case timeThreshold is null, set epsilon to half the fragment duration\n                epsilon = (timeThreshold === undefined || timeThreshold === null) ? fd / 2 : timeThreshold;\n                if ((time + epsilon) >= ft &&\n                    (time - epsilon) < (ft + fd)) {\n                    idx = frag.availabilityIdx;\n                    break;\n                }\n            }\n        }\n\n        return idx;\n    }\n\n    function getRequestForSegment(segment) {\n        if (segment === null || segment === undefined) {\n            return null;\n        }\n\n        const request = new FragmentRequest();\n        const representation = segment.representation;\n        const bandwidth = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;\n        let url = segment.media;\n        const type = streamProcessor ? streamProcessor.getType() : null;\n\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\n        url = replaceIDForTemplate(url, representation.id);\n        url = unescapeDollarsInTemplate(url);\n\n        request.mediaType = type;\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.range = segment.mediaRange;\n        request.startTime = segment.presentationStartTime;\n        request.duration = segment.duration;\n        request.timescale = representation.timescale;\n        request.availabilityStartTime = segment.availabilityStartTime;\n        request.availabilityEndTime = segment.availabilityEndTime;\n        request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = segment.availabilityIdx;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n\n        if (setRequestUrl(request, url, representation)) {\n            return request;\n        }\n    }\n\n    function getSegmentRequestForTime(representation, time, options) {\n        let request,\n            segment,\n            finished;\n\n        const type = streamProcessor ? streamProcessor.getType() : null;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n        const idx = index;\n        const keepIdx = options ? options.keepIdx : false;\n        const timeThreshold = options ? options.timeThreshold : null;\n        const ignoreIsFinished = (options && options.ignoreIsFinished) ? true : false;\n\n        if (!representation) {\n            return null;\n        }\n\n        if (requestedTime !== time) { // When playing at live edge with 0 delay we may loop back with same time and index until it is available. Reduces verboseness of logs.\n            requestedTime = time;\n            logger.debug('Getting the request for ' + type + ' time : ' + time);\n        }\n\n        updateSegments(representation);\n        index = getIndexForSegments(time, representation, timeThreshold);\n\n        //Index may be -1 if getSegments needs to update again.  So after getSegments is called and updated then try to get index again.\n        if (index < 0) {\n            updateSegments(representation);\n            index = getIndexForSegments(time, representation, timeThreshold);\n        }\n\n        if (index > 0) {\n            logger.debug('Index for ' + type + ' time ' + time + ' is ' + index );\n        }\n\n        finished = !ignoreIsFinished ? isMediaFinished(representation) : false;\n        if (finished) {\n            request = new FragmentRequest();\n            request.action = FragmentRequest.ACTION_COMPLETE;\n            request.index = index;\n            request.mediaType = type;\n            request.mediaInfo = streamProcessor.getMediaInfo();\n            logger.debug('Signal complete in getSegmentRequestForTime -', type);\n        } else {\n            segment = getSegmentByIndex(index, representation);\n            request = getRequestForSegment(segment);\n        }\n\n        if (keepIdx && idx >= 0) {\n            index = representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE && isDynamic ? index : idx;\n        }\n\n        return request;\n    }\n\n    function generateSegmentRequestForTime(representation, time) {\n        const step = (representation.segmentAvailabilityRange.end - representation.segmentAvailabilityRange.start) / 2;\n\n        representation.segments = null;\n        representation.segmentAvailabilityRange = {start: time - step, end: time + step};\n        return getSegmentRequestForTime(representation, time, {keepIdx: false, ignoreIsFinished: true});\n    }\n\n    function getNextSegmentRequest(representation) {\n        let request,\n            segment,\n            finished;\n\n        const type = streamProcessor ? streamProcessor.getType() : null;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n\n        if (!representation || index === -1) {\n            return null;\n        }\n\n        requestedTime = null;\n        index++;\n\n        logger.debug('Getting the next request at index: ' + index + ', type: ' + type);\n\n        // check that there is a segment in this index. If none, update segments and wait for next time loop is called\n        const seg = getSegmentByIndex(index, representation);\n        if (!seg && isDynamic) {\n            logger.debug('No segment found at index: ' + index + '. Wait for next loop');\n            updateSegments(representation);\n            index--;\n            return null;\n        }\n\n        finished = isMediaFinished(representation);\n        if (finished) {\n            request = new FragmentRequest();\n            request.action = FragmentRequest.ACTION_COMPLETE;\n            request.index = index;\n            request.mediaType = type;\n            request.mediaInfo = streamProcessor.getMediaInfo();\n            logger.debug('Signal complete -', type);\n        } else {\n            updateSegments(representation);\n            segment = getSegmentByIndex(index, representation);\n            request = getRequestForSegment(segment);\n            if (!segment && isDynamic) {\n                /*\n                 Sometimes when playing dynamic streams with 0 fragment delay at live edge we ask for\n                 an index before it is available so we decrement index back and send null request\n                 which triggers the validate loop to rerun and the next time the segment should be\n                 available.\n                 */\n                index-- ;\n            }\n        }\n\n        return request;\n    }\n\n    function onInitializationLoaded(e) {\n        const representation = e.representation;\n        if (!representation.segments) return;\n\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\n    }\n\n    function onSegmentsLoaded(e) {\n        const type = streamProcessor ? streamProcessor.getType() : null;\n        const isDynamic = streamProcessor ? streamProcessor.getStreamInfo().manifestInfo.isDynamic : null;\n        if (e.error || (type !== e.mediaType)) return;\n\n        const fragments = e.segments;\n        const representation = e.representation;\n        const segments = [];\n        let count = 0;\n\n        let i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = fragments.length; i < len; i++) {\n            s = fragments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            segments.push(seg);\n            seg = null;\n            count++;\n        }\n\n        representation.segmentAvailabilityRange = {start: segments[0].presentationStartTime, end: segments[len - 1].presentationStartTime};\n        representation.availableSegmentsNumber = len;\n\n        onSegmentListUpdated(representation, segments);\n\n        if (!Representation.hasInitialization(representation)) return;\n\n        eventBus.trigger(Events.REPRESENTATION_UPDATED, {sender: this, representation: representation});\n    }\n\n    instance = {\n        initialize: initialize,\n        getStreamProcessor: getStreamProcessor,\n        getInitRequest: getInitRequest,\n        getSegmentRequestForTime: getSegmentRequestForTime,\n        getNextSegmentRequest: getNextSegmentRequest,\n        generateSegmentRequestForTime: generateSegmentRequestForTime,\n        updateRepresentation: updateRepresentation,\n        updateSegmentList: updateSegmentList,\n        setCurrentTime: setCurrentTime,\n        getCurrentTime: getCurrentTime,\n        getEarliestTime: getEarliestTime,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashHandler.__dashjs_factory_name = 'DashHandler';\nconst factory = FactoryMaker.getClassFactory(DashHandler);\nfactory.SEGMENTS_UNAVAILABLE_ERROR_CODE = SEGMENTS_UNAVAILABLE_ERROR_CODE;\nFactoryMaker.updateClassFactory(DashHandler.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FactoryMaker from '../core/FactoryMaker';\nimport MetricsConstants from '../streaming/constants/MetricsConstants';\nimport Round10 from './utils/Round10';\n\n/**\n * @module DashMetrics\n * @param {object} config configuration passed to DashMetrics\n */\nfunction DashMetrics(config) {\n\n    config = config || {};\n    let instance;\n    let dashManifestModel = config.dashManifestModel;\n    let manifestModel = config.manifestModel;\n\n    function getBandwidthForRepresentation(representationId, periodId) {\n        let representation;\n        const manifest = manifestModel.getValue();\n        let period = manifest.Period_asArray[periodId];\n\n        representation = findRepresentation(period, representationId);\n\n        if (representation === null) {\n            return null;\n        }\n\n        return representation.bandwidth;\n    }\n\n\n    /**\n     *\n     * @param {string} representationId\n     * @param {number} periodIdx\n     * @returns {*}\n     */\n    function getIndexForRepresentation(representationId, periodIdx) {\n        let representationIndex;\n        const manifest = manifestModel.getValue();\n        let period = manifest.Period_asArray[periodIdx];\n\n        representationIndex = findRepresentationIndex(period, representationId);\n        return representationIndex;\n    }\n\n    /**\n     * This method returns the current max index based on what is defined in the MPD.\n     *\n     * @param {string} bufferType - String 'audio' or 'video',\n     * @param {number} periodIdx - Make sure this is the period index not id\n     * @return {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getMaxIndexForBufferType(bufferType, periodIdx) {\n        let maxIndex;\n        const manifest = manifestModel.getValue();\n        if (!manifest) {\n            return -1;\n        }\n        let period = manifest.Period_asArray[periodIdx];\n\n        maxIndex = findMaxBufferIndex(period, bufferType);\n        return maxIndex;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentRepresentationSwitch(metrics) {\n        return getCurrent(metrics, MetricsConstants.TRACK_SWITCH);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestBufferLevelVO(metrics) {\n        return getCurrent(metrics, MetricsConstants.BUFFER_LEVEL);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferLevel(metrics) {\n        const vo = getLatestBufferLevelVO(metrics);\n\n        if (vo) {\n            return Round10.round10(vo.level / 1000, -3);\n        }\n\n        return 0;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {null|*|vo}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getRequestsQueue(metrics) {\n        return metrics ? metrics.RequestsQueue : null;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentHttpRequest(metrics) {\n        if (!metrics) {\n            return null;\n        }\n\n        const httpList = metrics.HttpList;\n        let currentHttpList = null;\n\n        let httpListLength,\n            httpListLastIndex;\n\n        if (!httpList || httpList.length <= 0) {\n            return null;\n        }\n\n        httpListLength = httpList.length;\n        httpListLastIndex = httpListLength - 1;\n\n        while (httpListLastIndex >= 0) {\n            if (httpList[httpListLastIndex].responsecode) {\n                currentHttpList = httpList[httpListLastIndex];\n                break;\n            }\n            httpListLastIndex--;\n        }\n        return currentHttpList;\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getHttpRequests(metrics) {\n        if (!metrics) {\n            return [];\n        }\n\n        return !!metrics.HttpList ? metrics.HttpList : [];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} metricName\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrent(metrics, metricName) {\n        if (!metrics) {\n            return null;\n        }\n\n        const list = metrics[metricName];\n\n        if (!list) {\n            return null;\n        }\n\n        const length = list.length;\n\n        if (length <= 0) {\n            return null;\n        }\n\n        return list[length - 1];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDroppedFrames(metrics) {\n        return getCurrent(metrics, MetricsConstants.DROPPED_FRAMES);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentSchedulingInfo(metrics) {\n        return getCurrent(metrics, MetricsConstants.SCHEDULING_INFO);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentManifestUpdate(metrics) {\n        return getCurrent(metrics, MetricsConstants.MANIFEST_UPDATE);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDVRInfo(metrics) {\n        return getCurrent(metrics, MetricsConstants.DVR_INFO);\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestMPDRequestHeaderValueByID(metrics, id) {\n        let headers = {};\n        let httpRequestList,\n            httpRequest,\n            i;\n\n        httpRequestList = getHttpRequests(metrics);\n\n        for (i = httpRequestList.length - 1; i >= 0; i--) {\n            httpRequest = httpRequestList[i];\n\n            if (httpRequest.type === HTTPRequest.MPD_TYPE) {\n                headers = parseResponseHeaders(httpRequest._responseHeaders);\n                break;\n            }\n        }\n\n        return headers[id] === undefined ? null :  headers[id];\n    }\n\n    /**\n     * @param {MetricsList} metrics\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestFragmentRequestHeaderValueByID(metrics, id) {\n        let headers = {};\n        let httpRequest = getCurrentHttpRequest(metrics);\n        if (httpRequest) {\n            headers = parseResponseHeaders(httpRequest._responseHeaders);\n        }\n        return headers[id] === undefined ? null :  headers[id];\n    }\n\n    function parseResponseHeaders(headerStr) {\n        let headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\n        // which send a string starting with a \"\\n\" character\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            let headerPair = headerPairs[i];\n            let index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    function findRepresentationIndex(period, representationId) {\n        const index = findRepresentation(period, representationId, true);\n\n        if (index !== null) {\n            return index;\n        }\n\n        return -1;\n    }\n\n    function findRepresentation(period, representationId, returnIndex) {\n        let adaptationSet,\n            adaptationSetArray,\n            representation,\n            representationArray,\n            adaptationSetArrayIndex,\n            representationArrayIndex;\n\n        if (period) {\n            adaptationSetArray = period.AdaptationSet_asArray;\n            for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n                adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n                representationArray = adaptationSet.Representation_asArray;\n                for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\n                    representation = representationArray[representationArrayIndex];\n                    if (representationId === representation.id) {\n                        if (returnIndex) {\n                            return representationArrayIndex;\n                        } else {\n                            return representation;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function adaptationIsType(adaptation, bufferType) {\n        return dashManifestModel.getIsTypeOf(adaptation, bufferType);\n    }\n\n    function findMaxBufferIndex(period, bufferType) {\n        let adaptationSet,\n            adaptationSetArray,\n            representationArray,\n            adaptationSetArrayIndex;\n\n        if (!period || !bufferType) return -1;\n\n        adaptationSetArray = period.AdaptationSet_asArray;\n        for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n            adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n            representationArray = adaptationSet.Representation_asArray;\n            if (adaptationIsType(adaptationSet, bufferType)) {\n                return representationArray.length;\n            }\n        }\n\n        return -1;\n    }\n\n    instance = {\n        getBandwidthForRepresentation: getBandwidthForRepresentation,\n        getIndexForRepresentation: getIndexForRepresentation,\n        getMaxIndexForBufferType: getMaxIndexForBufferType,\n        getCurrentRepresentationSwitch: getCurrentRepresentationSwitch,\n        getLatestBufferLevelVO: getLatestBufferLevelVO,\n        getCurrentBufferLevel: getCurrentBufferLevel,\n        getCurrentHttpRequest: getCurrentHttpRequest,\n        getHttpRequests: getHttpRequests,\n        getCurrentDroppedFrames: getCurrentDroppedFrames,\n        getCurrentSchedulingInfo: getCurrentSchedulingInfo,\n        getCurrentDVRInfo: getCurrentDVRInfo,\n        getCurrentManifestUpdate: getCurrentManifestUpdate,\n        getLatestFragmentRequestHeaderValueByID: getLatestFragmentRequestHeaderValueByID,\n        getLatestMPDRequestHeaderValueByID: getLatestMPDRequestHeaderValueByID,\n        getRequestsQueue: getRequestsQueue\n    };\n\n    return instance;\n}\n\nDashMetrics.__dashjs_factory_name = 'DashMetrics';\nexport default FactoryMaker.getSingletonFactory(DashMetrics);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport DashJSError from '../streaming/vo/DashJSError';\nimport Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport BoxParser from '../streaming/utils/BoxParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport HTTPLoader from '../streaming/net/HTTPLoader';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        errHandler,\n        boxParser,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        httpLoader,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        boxParser = BoxParser(context).getInstance();\n        requestModifier = RequestModifier(context).getInstance();\n        httpLoader = HTTPLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let initRange = null;\n        let isoFile = null;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500\n        };\n\n        logger.debug('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            isoFile = boxParser.parse(response);\n            initRange = findInitRange(isoFile);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                loadInitialization(representation, info);\n            }\n\n        };\n\n        const onerror = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {representation: representation});\n        };\n\n        httpLoader.load({request: request, success: onload, error: onerror});\n\n        logger.debug('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, type, range, loadingInfo, callback) {\n        checkSetConfigCall();\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? {start: parseFloat(parts[0]), end: parseFloat(parts[1])} : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = baseURLController.resolve(representation.path);\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, type);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                loadSegments(representation, type, info.range, info, callback);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    logger.debug('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                callback(segs, representation, type);\n                            }\n                        } else {\n                            callback(null, representation, type);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = {start: ss, end: se};\n                        loadSegments(representation, null, r, info, tmpCallback);\n                    }\n\n                } else {\n                    logger.debug('Parsing segments from SIDX.');\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, type);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(null, representation, type);\n        };\n\n        httpLoader.load({request: request, success: onload, error: onerror});\n        logger.debug('Perform SIDX load: ' + info.url);\n    }\n\n    function reset() {\n        httpLoader.abort();\n        httpLoader = null;\n        errHandler = null;\n        boxParser = null;\n        requestModifier = null;\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function findInitRange(isoFile) {\n        const ftyp = isoFile.getBox('ftyp');\n        const moov = isoFile.getBox('moov');\n\n        let initRange = null;\n        let start,\n            end;\n\n        logger.debug('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            logger.debug('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n\n        const request = new FragmentRequest();\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: segments, representation: representation, mediaType: type});\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {segments: null, representation: representation, mediaType: type, error: new DashJSError(null, 'error loading segments', null)});\n        }\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n","import Events from '../core/events/Events';\nimport EventBus from '../core/EventBus';\nimport EBMLParser from '../streaming/utils/EBMLParser';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\nimport RequestModifier from '../streaming/utils/RequestModifier';\nimport Segment from './vo/Segment';\nimport {\n    HTTPRequest\n} from '../streaming/vo/metrics/HTTPRequest';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport HTTPLoader from '../streaming/net/HTTPLoader';\n\nfunction WebmSegmentBaseLoader() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        WebM,\n        errHandler,\n        requestModifier,\n        metricsModel,\n        mediaPlayerModel,\n        httpLoader,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        requestModifier = RequestModifier(context).getInstance();\n        httpLoader = HTTPLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: requestModifier\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.metricsModel || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error('Missing config parameter(s)');\n        }\n        baseURLController = config.baseURLController;\n        metricsModel = config.metricsModel;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let cue;\n        let cueTrack;\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n            ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n                ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration;\n        let parsed;\n        let segments;\n        let segment;\n        let i;\n        let len;\n        let start;\n        let end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration;\n        let segments;\n        let parts = theRange.split('-');\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parseFloat(parts[0]),\n                end: parseFloat(parts[1])\n            },\n            request: request\n        };\n        let segmentEnd;\n        let segmentStart;\n\n        logger.debug('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n            !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                    ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                    ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            logger.error('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function checkSetConfigCall() {\n        if (!baseURLController || !baseURLController.hasOwnProperty('resolve')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function loadInitialization(representation, loadingInfo) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let initRange = representation.range.split('-');\n        let info = loadingInfo || {\n            range: {\n                start: parseFloat(initRange[0]),\n                end: parseFloat(initRange[1])\n            },\n            request: request,\n            url: media,\n            init: true\n        };\n\n        logger.info('Start loading initialization.');\n\n        request = getFragmentRequest(info);\n\n        const onload = function () {\n            // note that we don't explicitly set rep.initialization as this\n            // will be computed when all BaseURLs are resolved later\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        const onloadend = function () {\n            eventBus.trigger(Events.INITIALIZATION_LOADED, {\n                representation: representation\n            });\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform init load: ' + info.url);\n    }\n\n    function loadSegments(representation, type, theRange, callback) {\n        checkSetConfigCall();\n        let request = null;\n        let baseUrl = baseURLController.resolve(representation.path);\n        let media = baseUrl ? baseUrl.url : undefined;\n        let bytesToLoad = 8192;\n        let info = {\n            bytesLoaded: 0,\n            bytesToLoad: bytesToLoad,\n            range: {\n                start: 0,\n                end: bytesToLoad\n            },\n            request: request,\n            url: media,\n            init: false\n        };\n\n        callback = !callback ? onLoaded : callback;\n        request = getFragmentRequest(info);\n\n        // first load the header, but preserve the manifest range so we can\n        // load the cues after parsing the header\n        // NOTE: we expect segment info to appear in the first 8192 bytes\n        logger.debug('Parsing ebml header');\n\n        const onload = function (response) {\n            parseEbmlHeader(response, media, theRange, function (segments) {\n                callback(segments, representation, type);\n            });\n        };\n\n        const onloadend = function () {\n            callback(null, representation, type);\n        };\n\n        httpLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n    }\n\n    function onLoaded(segments, representation, type) {\n        if (segments) {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: segments,\n                representation: representation,\n                mediaType: type\n            });\n        } else {\n            eventBus.trigger(Events.SEGMENTS_LOADED, {\n                segments: null,\n                representation: representation,\n                mediaType: type,\n                error: new Error(null, 'error loading segments', null)\n            });\n        }\n    }\n\n    function getFragmentRequest(info) {\n        let request = new FragmentRequest();\n\n        request.type = info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.url = info.url;\n        request.range = info.range.start + '-' + info.range.end;\n\n        return request;\n    }\n\n    function reset() {\n        errHandler = null;\n        requestModifier = null;\n    }\n\n    instance = {\n        setConfig: setConfig,\n        initialize: initialize,\n        loadInitialization: loadInitialization,\n        loadSegments: loadSegments,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Dash constants declaration\n * @class\n * @ignore\n */\nclass DashConstants {\n\n    init() {\n        this.BASE_URL = 'BaseURL';\n        this.SEGMENT_BASE = 'SegmentBase';\n        this.SEGMENT_TEMPLATE = 'SegmentTemplate';\n        this.SEGMENT_LIST = 'SegmentList';\n        this.SEGMENT_URL = 'SegmentURL';\n        this.SEGMENT_TIMELINE = 'SegmentTimeline';\n        this.SEGMENT_PROFILES = 'segmentProfiles';\n        this.ADAPTATION_SET = 'AdaptationSet';\n        this.REPRESENTATION = 'Representation';\n        this.REPRESENTATION_INDEX = 'RepresentationIndex';\n        this.SUB_REPRESENTATION = 'SubRepresentation';\n        this.INITIALIZATION = 'Initialization';\n        this.INITIALIZATION_MINUS = 'initialization';\n        this.MPD = 'MPD';\n        this.PERIOD = 'Period';\n        this.ASSET_IDENTIFIER = 'AssetIdentifier';\n        this.EVENT_STREAM = 'EventStream';\n        this.ID = 'id';\n        this.PROFILES = 'profiles';\n        this.SERVICE_LOCATION = 'serviceLocation';\n        this.RANGE = 'range';\n        this.INDEX = 'index';\n        this.MEDIA = 'media';\n        this.BYTE_RANGE = 'byteRange';\n        this.INDEX_RANGE = 'indexRange';\n        this.MEDIA_RANGE = 'mediaRange';\n        this.VALUE = 'value';\n        this.CONTENT_TYPE = 'contentType';\n        this.MIME_TYPE = 'mimeType';\n        this.BITSTREAM_SWITCHING = 'BitstreamSwitching';\n        this.BITSTREAM_SWITCHING_MINUS = 'bitstreamSwitching';\n        this.CODECS = 'codecs';\n        this.DEPENDENCY_ID = 'dependencyId';\n        this.MEDIA_STREAM_STRUCTURE_ID = 'mediaStreamStructureId';\n        this.METRICS = 'Metrics';\n        this.METRICS_MINUS = 'metrics';\n        this.REPORTING = 'Reporting';\n        this.WIDTH = 'width';\n        this.HEIGHT = 'height';\n        this.SAR = 'sar';\n        this.FRAMERATE = 'frameRate';\n        this.AUDIO_SAMPLING_RATE = 'audioSamplingRate';\n        this.MAXIMUM_SAP_PERIOD = 'maximumSAPPeriod';\n        this.START_WITH_SAP = 'startWithSAP';\n        this.MAX_PLAYOUT_RATE = 'maxPlayoutRate';\n        this.CODING_DEPENDENCY = 'codingDependency';\n        this.SCAN_TYPE = 'scanType';\n        this.FRAME_PACKING = 'FramePacking';\n        this.AUDIO_CHANNEL_CONFIGURATION = 'AudioChannelConfiguration';\n        this.CONTENT_PROTECTION = 'ContentProtection';\n        this.ESSENTIAL_PROPERTY = 'EssentialProperty';\n        this.SUPPLEMENTAL_PROPERTY = 'SupplementalProperty';\n        this.INBAND_EVENT_STREAM = 'InbandEventStream';\n        this.ACCESSIBILITY = 'Accessibility';\n        this.ROLE = 'Role';\n        this.RATING = 'Rating';\n        this.CONTENT_COMPONENT = 'ContentComponent';\n        this.SUBSET = 'Subset';\n        this.LANG = 'lang';\n        this.VIEWPOINT = 'Viewpoint';\n        this.ROLE_ASARRAY = 'Role_asArray';\n        this.ACCESSIBILITY_ASARRAY = 'Accessibility_asArray';\n        this.AUDIOCHANNELCONFIGURATION_ASARRAY = 'AudioChannelConfiguration_asArray';\n        this.CONTENTPROTECTION_ASARRAY = 'ContentProtection_asArray';\n        this.MAIN = 'main';\n        this.DYNAMIC = 'dynamic';\n        this.MEDIA_PRESENTATION_DURATION = 'mediaPresentationDuration';\n        this.MINIMUM_UPDATE_PERIOD = 'minimumUpdatePeriod';\n        this.CODEC_PRIVATE_DATA = 'codecPrivateData';\n        this.BANDWITH = 'bandwidth';\n        this.SOURCE_URL = 'sourceURL';\n        this.TIMESCALE = 'timescale';\n        this.DURATION = 'duration';\n        this.START_NUMBER = 'startNumber';\n        this.PRESENTATION_TIME_OFFSET = 'presentationTimeOffset';\n        this.AVAILABILITY_START_TIME = 'availabilityStartTime';\n        this.AVAILABILITY_END_TIME = 'availabilityEndTime';\n        this.TIMESHIFT_BUFFER_DEPTH = 'timeShiftBufferDepth';\n        this.MAX_SEGMENT_DURATION = 'maxSegmentDuration';\n        this.PRESENTATION_TIME = 'presentationTime';\n        this.MIN_BUFFER_TIME = 'minBufferTime';\n        this.MAX_SUBSEGMENT_DURATION = 'maxSubsegmentDuration';\n        this.START = 'start';\n        this.AVAILABILITY_TIME_OFFSET = 'availabilityTimeOffset';\n        this.AVAILABILITY_TIME_COMPLETE = 'availabilityTimeComplete';\n        this.CENC_DEFAULT_KID = 'cenc:default_KID';\n        this.DVB_PRIORITY = 'dvb:priority';\n        this.DVB_WEIGHT = 'dvb:weight';\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new DashConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Representation from '../vo/Representation';\n\nfunction RepresentationController() {\n\n    const SEGMENTS_UPDATE_FAILED_ERROR_CODE = 1;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        realAdaptation,\n        realAdaptationIndex,\n        updating,\n        voAvailableRepresentations,\n        currentVoRepresentation,\n        abrController,\n        indexHandler,\n        playbackController,\n        metricsModel,\n        domStorage,\n        timelineConverter,\n        dashManifestModel,\n        dashMetrics,\n        streamProcessor,\n        manifestModel;\n\n    function setup() {\n        resetInitialSettings();\n\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, instance);\n        eventBus.on(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\n        eventBus.on(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\n        eventBus.on(Events.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n    }\n\n    function setConfig(config) {\n        // allow the abrController created in setup to be overidden\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.streamProcessor) {\n            streamProcessor = config.streamProcessor;\n        }\n    }\n\n    function initialize() {\n        indexHandler = streamProcessor.getIndexHandler();\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getData() {\n        return realAdaptation;\n    }\n\n    function getDataIndex() {\n        return realAdaptationIndex;\n    }\n\n    function isUpdating() {\n        return updating;\n    }\n\n    function getCurrentRepresentation() {\n        return currentVoRepresentation;\n    }\n\n    function resetInitialSettings() {\n        realAdaptation = null;\n        realAdaptationIndex = -1;\n        updating = true;\n        voAvailableRepresentations = [];\n        abrController = null;\n        playbackController = null;\n        metricsModel = null;\n        domStorage = null;\n        timelineConverter = null;\n        dashManifestModel = null;\n        dashMetrics = null;\n    }\n\n    function reset() {\n\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, instance);\n        eventBus.off(Events.REPRESENTATION_UPDATED, onRepresentationUpdated, instance);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, instance);\n        eventBus.off(Events.BUFFER_LEVEL_UPDATED, onBufferLevelUpdated, instance);\n        eventBus.off(Events.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n\n        resetInitialSettings();\n    }\n\n    function updateData(newRealAdaptation, voAdaptation, type) {\n        const streamInfo = streamProcessor.getStreamInfo();\n        const maxQuality = abrController.getTopQualityIndexFor(type, streamInfo.id);\n        const minIdx = abrController.getMinAllowedIndexFor(type);\n\n        let quality,\n            averageThroughput;\n        let bitrate = null;\n\n        updating = true;\n        eventBus.trigger(Events.DATA_UPDATE_STARTED, {sender: this});\n\n        voAvailableRepresentations = updateRepresentations(voAdaptation);\n\n        if ((realAdaptation === null || (realAdaptation.id != newRealAdaptation.id)) && type !== Constants.FRAGMENTED_TEXT) {\n            averageThroughput = abrController.getThroughputHistory().getAverageThroughput(type);\n            bitrate = averageThroughput || abrController.getInitialBitrateFor(type, streamInfo);\n            quality = abrController.getQualityForBitrate(streamProcessor.getMediaInfo(), bitrate);\n        } else {\n            quality = abrController.getQualityFor(type, streamInfo);\n        }\n\n        if (minIdx !== undefined && quality < minIdx) {\n            quality = minIdx;\n        }\n        if (quality > maxQuality) {\n            quality = maxQuality;\n        }\n\n        currentVoRepresentation = getRepresentationForQuality(quality);\n        realAdaptation = newRealAdaptation;\n\n        if (type !== Constants.VIDEO && type !== Constants.AUDIO && type !== Constants.FRAGMENTED_TEXT) {\n            updating = false;\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: realAdaptation, currentRepresentation: currentVoRepresentation});\n            return;\n        }\n\n        for (let i = 0; i < voAvailableRepresentations.length; i++) {\n            indexHandler.updateRepresentation(voAvailableRepresentations[i], true);\n        }\n    }\n\n    function addRepresentationSwitch() {\n        const now = new Date();\n        const currentRepresentation = getCurrentRepresentation();\n        const currentVideoTimeMs = playbackController.getTime() * 1000;\n\n        metricsModel.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\n    }\n\n    function addDVRMetric() {\n        const streamInfo = streamProcessor.getStreamInfo();\n        const manifestInfo = streamInfo ? streamInfo.manifestInfo : null;\n        const isDynamic = manifestInfo ? manifestInfo.isDynamic : null;\n        const range = timelineConverter.calcSegmentAvailabilityRange(currentVoRepresentation, isDynamic);\n        metricsModel.addDVRInfo(streamProcessor.getType(), playbackController.getTime(), manifestInfo, range);\n    }\n\n    function getRepresentationForQuality(quality) {\n        return voAvailableRepresentations[quality];\n    }\n\n    function getQualityForRepresentation(voRepresentation) {\n        return voAvailableRepresentations.indexOf(voRepresentation);\n    }\n\n    function isAllRepresentationsUpdated() {\n        for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\n            let segmentInfoType = voAvailableRepresentations[i].segmentInfoType;\n            if (voAvailableRepresentations[i].segmentAvailabilityRange === null || !Representation.hasInitialization(voAvailableRepresentations[i]) ||\n                ((segmentInfoType === DashConstants.SEGMENT_BASE || segmentInfoType === DashConstants.BASE_URL) && !voAvailableRepresentations[i].segments)\n            ) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function updateRepresentations(voAdaptation) {\n        let voReps;\n\n        realAdaptationIndex = dashManifestModel.getIndexForAdaptation(realAdaptation, voAdaptation.period.mpd.manifest, voAdaptation.period.index);\n        voReps = dashManifestModel.getRepresentationsForAdaptation(voAdaptation);\n\n        return voReps;\n    }\n\n    function updateAvailabilityWindow(isDynamic) {\n        let voRepresentation;\n\n        for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\n            voRepresentation = voAvailableRepresentations[i];\n            voRepresentation.segmentAvailabilityRange = timelineConverter.calcSegmentAvailabilityRange(voRepresentation, isDynamic);\n        }\n    }\n\n    function resetAvailabilityWindow() {\n        voAvailableRepresentations.forEach(rep => {\n            rep.segmentAvailabilityRange = null;\n        });\n    }\n\n    function postponeUpdate(postponeTimePeriod) {\n        let delay = postponeTimePeriod;\n        let update = function () {\n            if (isUpdating()) return;\n\n            updating = true;\n            eventBus.trigger(Events.DATA_UPDATE_STARTED, { sender: instance });\n\n            // clear the segmentAvailabilityRange for all reps.\n            // this ensures all are updated before the live edge search starts\n            resetAvailabilityWindow();\n\n            for (let i = 0; i < voAvailableRepresentations.length; i++) {\n                indexHandler.updateRepresentation(voAvailableRepresentations[i], true);\n            }\n        };\n\n        updating = false;\n        eventBus.trigger(Events.AST_IN_FUTURE, { delay: delay });\n        setTimeout(update, delay);\n    }\n\n    function onRepresentationUpdated(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor || !isUpdating()) return;\n\n        let r = e.representation;\n        let streamMetrics = metricsModel.getMetricsFor(Constants.STREAM);\n        var metrics = metricsModel.getMetricsFor(getCurrentRepresentation().adaptation.type);\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(streamMetrics);\n        let alreadyAdded = false;\n        let postponeTimePeriod = 0;\n        let repInfo,\n            err,\n            repSwitch;\n\n        if (r.adaptation.period.mpd.manifest.type === DashConstants.DYNAMIC && !r.adaptation.period.mpd.manifest.ignorePostponeTimePeriod)\n        {\n            let segmentAvailabilityTimePeriod = r.segmentAvailabilityRange.end - r.segmentAvailabilityRange.start;\n            // We must put things to sleep unless till e.g. the startTime calculation in ScheduleController.onLiveEdgeSearchCompleted fall after the segmentAvailabilityRange.start\n            let liveDelay = playbackController.computeLiveDelay(currentVoRepresentation.segmentDuration, streamProcessor.getStreamInfo().manifestInfo.DVRWindowSize);\n            postponeTimePeriod = (liveDelay - segmentAvailabilityTimePeriod) * 1000;\n        }\n\n        if (postponeTimePeriod > 0) {\n            addDVRMetric();\n            postponeUpdate(postponeTimePeriod);\n            err = new DashJSError(SEGMENTS_UPDATE_FAILED_ERROR_CODE, 'Segments update failed', null);\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: realAdaptation, currentRepresentation: currentVoRepresentation, error: err});\n\n            return;\n        }\n\n        if (manifestUpdateInfo) {\n            for (let i = 0; i < manifestUpdateInfo.representationInfo.length; i++) {\n                repInfo = manifestUpdateInfo.representationInfo[i];\n                if (repInfo.index === r.index && repInfo.mediaType === streamProcessor.getType()) {\n                    alreadyAdded = true;\n                    break;\n                }\n            }\n\n            if (!alreadyAdded) {\n                metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo, r.id, r.index, r.adaptation.period.index,\n                        streamProcessor.getType(),r.presentationTimeOffset, r.startNumber, r.segmentInfoType);\n            }\n        }\n\n        if (isAllRepresentationsUpdated()) {\n            updating = false;\n            abrController.setPlaybackQuality(streamProcessor.getType(), streamProcessor.getStreamInfo(), getQualityForRepresentation(currentVoRepresentation));\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {latency: currentVoRepresentation.segmentAvailabilityRange.end - playbackController.getTime()});\n\n            repSwitch = dashMetrics.getCurrentRepresentationSwitch(metrics);\n\n            if (!repSwitch) {\n                addRepresentationSwitch();\n            }\n\n            eventBus.trigger(Events.DATA_UPDATE_COMPLETED, {sender: this, data: realAdaptation, currentRepresentation: currentVoRepresentation});\n        }\n    }\n\n    function onWallclockTimeUpdated(e) {\n        if (e.isDynamic) {\n            updateAvailabilityWindow(e.isDynamic);\n        }\n    }\n\n    function onBufferLevelUpdated(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) return;\n        let manifest = manifestModel.getValue();\n        if (!manifest.doNotUpdateDVRWindowOnBufferUpdated) {\n            addDVRMetric();\n        }\n    }\n\n    function onQualityChanged(e) {\n        if (e.mediaType !== streamProcessor.getType() || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n\n        if (e.oldQuality !== e.newQuality) {\n            currentVoRepresentation = getRepresentationForQuality(e.newQuality);\n            const bitrate = abrController.getThroughputHistory().getAverageThroughput(e.mediaType);\n            if (!isNaN(bitrate)) {\n                domStorage.setSavedBitrateSettings(e.mediaType, bitrate);\n            }\n            addRepresentationSwitch();\n        }\n    }\n\n    function onManifestValidityChanged(e) {\n        if (e.newDuration) {\n            const representation = getCurrentRepresentation();\n            if (representation && representation.adaptation.period) {\n                const period = representation.adaptation.period;\n                period.duration = e.newDuration;\n            }\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getData: getData,\n        getDataIndex: getDataIndex,\n        isUpdating: isUpdating,\n        updateData: updateData,\n        getStreamProcessor: getStreamProcessor,\n        getCurrentRepresentation: getCurrentRepresentation,\n        getRepresentationForQuality: getRepresentationForQuality,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\nexport default FactoryMaker.getClassFactory(RepresentationController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction DashManifestModel(config) {\n\n    config = config || {};\n\n    let instance,\n        logger;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n    const mediaController = config.mediaController;\n    const timelineConverter = config.timelineConverter;\n    const adapter = config.adapter;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup () {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if ((adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) &&\n            (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS))) {\n            // Just check the start of the codecs string\n            codecs = adaptation.Representation_asArray[0].codecs;\n            if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                return type === Constants.FRAGMENTED_TEXT;\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getIsMain(adaptation) {\n        return getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation_asArray !== undefined && realAdaptation.Representation_asArray !== null) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : null : null;\n        if (realAdaptations && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        const realAdaptations = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        const len = realAdaptations.length;\n\n        if (realAdaptation) {\n            for (let i = 0; i < len; i++) {\n                let objectUtils = ObjectUtils(context).getInstance();\n                if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptationSet = manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptationSet.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptationSet[i], type)) {\n                adaptations.push(processAdaptation(realAdaptationSet[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getAdaptationForType(manifest, periodIndex, type, streamInfo) {\n        const adaptations = getAdaptationsForType(manifest, periodIndex, type);\n\n        if (!adaptations || adaptations.length === 0) return null;\n\n        if (adaptations.length > 1 && streamInfo) {\n            const currentTrack = mediaController.getCurrentTrackFor(type, streamInfo);\n            const allMediaInfoForType = adapter.getAllMediaInfoForType(streamInfo, type);\n\n            if (currentTrack) {\n                for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                    if (mediaController.isTracksEqual(currentTrack, allMediaInfoForType[i])) {\n                        return adaptations[i];\n                    }\n                }\n            }\n\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            let codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n            if (addResolutionInfo && representation.width !== undefined) {\n                codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n            }\n            return codec;\n        }\n\n        return null;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getIsDVB(manifest) {\n        return hasProfile(manifest, PROFILE_DVB);\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        if (!realAdaptation || !realAdaptation.Representation_asArray || !realAdaptation.Representation_asArray.length) return null;\n\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation.Representation_asArray;\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null\n            };\n        });\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n    }\n\n    function isLastRepeatAttributeValid(segmentTimeline) {\n        let s = segmentTimeline.S_asArray[segmentTimeline.S_asArray.length - 1];\n        return !s.hasOwnProperty('r') || s.r >= 0;\n    }\n\n    function getUseCalculatedLiveEdgeTimeForAdaptation(voAdaptation) {\n        let realRepresentation = getRealAdaptationFor(voAdaptation).Representation_asArray[0];\n        let segmentInfo;\n        if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n            segmentInfo = realRepresentation.SegmentList;\n            return segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ?\n                isLastRepeatAttributeValid(segmentInfo.SegmentTimeline) :\n                true;\n        } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n            segmentInfo = realRepresentation.SegmentTemplate;\n            if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                return isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n            }\n        }\n\n        return false;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo;\n        let baseUrl;\n\n        // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n        // that we are processing. Making it works properly will require much further changes and given\n        // parsing base Urls parameters is needed for our ultra low latency examples, we will\n        // keep this \"tricky\" code until the real (and good) solution comes\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n            if (baseUrls) {\n                baseUrl = baseUrls[0];\n            }\n        }\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        let initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        } else if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        //representation.segmentDuration = Math.min(segmentInfo.duration / representation.timescale, adaptation.period.mpd.maxSegmentDuration);\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = timelineConverter.calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            throw new Error('Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.');\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; j < eventStreams[i].Event_asArray.length; j++) {\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsAudio: getIsAudio,\n        getIsVideo: getIsVideo,\n        getIsText: getIsText,\n        getIsMuxed: getIsMuxed,\n        getIsTextTrack: getIsTextTrack,\n        getIsFragmentedText: getIsFragmentedText,\n        getIsImage: getIsImage,\n        getIsMain: getIsMain,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getAdaptationForType: getAdaptationForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        getIsDVB: getIsDVB,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation,\n        getUseCalculatedLiveEdgeTimeForAdaptation: getUseCalculatedLiveEdgeTimeForAdaptation\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport ObjectIron from './objectiron';\nimport X2JS from '../../../externals/xml2json';\nimport StringMatcher from './matchers/StringMatcher';\nimport DurationMatcher from './matchers/DurationMatcher';\nimport DateTimeMatcher from './matchers/DateTimeMatcher';\nimport NumericMatcher from './matchers/NumericMatcher';\nimport RepresentationBaseValuesMap from './maps/RepresentationBaseValuesMap';\nimport SegmentValuesMap from './maps/SegmentValuesMap';\n\nfunction DashParser() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        matchers,\n        converter,\n        objectIron;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        matchers = [\n            new DurationMatcher(),\n            new DateTimeMatcher(),\n            new NumericMatcher(),\n            new StringMatcher()   // last in list to take precedence over NumericMatcher\n        ];\n\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        objectIron = ObjectIron(context).create({\n            adaptationset: new RepresentationBaseValuesMap(),\n            period: new SegmentValuesMap()\n        });\n    }\n\n    function getMatchers() {\n        return matchers;\n    }\n\n    function getIron() {\n        return objectIron;\n    }\n\n    function parse(data) {\n        let manifest;\n        const startTime = window.performance.now();\n\n        manifest = converter.xml_str2json(data);\n\n        if (!manifest) {\n            throw new Error('parsing the manifest failed');\n        }\n\n        const jsonTime = window.performance.now();\n        objectIron.run(manifest);\n\n        const ironedTime = window.performance.now();\n        logger.info('Parsing complete: ( xml2json: ' + (jsonTime - startTime).toPrecision(3) + 'ms, objectiron: ' + (ironedTime - jsonTime).toPrecision(3) + 'ms, total: ' + ((ironedTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: parse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashParser.__dashjs_factory_name = 'DashParser';\nexport default FactoryMaker.getClassFactory(DashParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a property belonging to a MapNode\n */\n\nclass CommonProperty {\n    constructor(name) {\n        const getDefaultMergeForName =\n              (n) => n && n.length && n.charAt(0) === n.charAt(0).toUpperCase();\n\n        this._name = name;\n        this._merge = getDefaultMergeForName(name);\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get merge() {\n        return this._merge;\n    }\n}\n\nexport default CommonProperty;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a node at some level in a ValueMap\n */\nimport CommonProperty from './CommonProperty';\n\nclass MapNode {\n    constructor(name, properties, children) {\n        this._name = name || '';\n        this._properties = [];\n        this._children = children || [];\n\n        if (Array.isArray(properties)) {\n            properties.forEach(p => {\n                this._properties.push(new CommonProperty(p));\n            });\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    get properties() {\n        return this._properties;\n    }\n}\n\nexport default MapNode;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.PROFILES, DashConstants.WIDTH, DashConstants.HEIGHT, DashConstants.SAR, DashConstants.FRAMERATE, DashConstants.AUDIO_SAMPLING_RATE, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.MAXIMUM_SAP_PERIOD, DashConstants.START_WITH_SAP, DashConstants.MAX_PLAYOUT_RATE, DashConstants.CODING_DEPENDENCY, DashConstants.SCAN_TYPE, DashConstants.FRAME_PACKING, DashConstants.AUDIO_CHANNEL_CONFIGURATION, DashConstants.CONTENT_PROTECTION, DashConstants.ESSENTIAL_PROPERTY, DashConstants.SUPPLEMENTAL_PROPERTY, DashConstants.INBAND_EVENT_STREAM\n        ];\n\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a SegmentValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass SegmentValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.SEGMENT_BASE, DashConstants.SEGMENT_TEMPLATE, DashConstants.SEGMENT_LIST\n        ];\n\n        super(DashConstants.PERIOD, commonProperties, [\n            new MapNode(DashConstants.ADAPTATION_SET, commonProperties, [\n                new MapNode(DashConstants.REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default SegmentValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a base type for matching and converting types in manifest to\n * something more useful\n */\n\nclass BaseMatcher {\n    constructor(test, converter) {\n        this._test = test;\n        this._converter = converter;\n    }\n\n    get test() {\n        return this._test;\n    }\n\n    get converter() {\n        return this._converter;\n    }\n}\n\nexport default BaseMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:datetime to Date\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst SECONDS_IN_MIN = 60;\nconst MINUTES_IN_HOUR = 60;\nconst MILLISECONDS_IN_SECONDS = 1000;\n\nconst datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;\n\nclass DateTimeMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => datetimeRegex.test(attr.value),\n            str => {\n                const match = datetimeRegex.exec(str);\n                let utcDate;\n\n                // If the string does not contain a timezone offset different browsers can interpret it either\n                // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n                // all browsers\n                utcDate = Date.UTC(\n                    parseInt(match[1], 10),\n                    parseInt(match[2], 10) - 1, // months start from zero\n                    parseInt(match[3], 10),\n                    parseInt(match[4], 10),\n                    parseInt(match[5], 10),\n                    (match[6] && parseInt(match[6], 10) || 0),\n                    (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\n\n                // If the date has timezone offset take it into account as well\n                if (match[9] && match[10]) {\n                    const timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n                    utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n                }\n\n                return new Date(utcDate);\n            }\n        );\n    }\n}\n\nexport default DateTimeMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\nimport Constants from '../../../streaming/constants/Constants';\nimport DashConstants from '../../constants/DashConstants';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, Constants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[2] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[4] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[6] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[8] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[10] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[12] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:numeric to float\n */\nimport BaseMatcher from './BaseMatcher';\n\nconst numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\n\nclass NumericMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => numericRegex.test(attr.value),\n            str => parseFloat(str)\n        );\n    }\n}\n\nexport default NumericMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes\n */\nimport BaseMatcher from './BaseMatcher';\nimport DashConstants from '../../constants/DashConstants';\n\nclass StringMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (attr, nodeName) => {\n                const stringAttrsInElements = {\n                    [DashConstants.MPD]:                            [ DashConstants.ID, DashConstants.PROFILES ],\n                    [DashConstants.PERIOD]:                         [ DashConstants.ID ],\n                    [DashConstants.BASE_URL]:                       [ DashConstants.SERVICE_LOCATION, DashConstants.BYTE_RANGE ],\n                    [DashConstants.SEGMENT_BASE]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.INITIALIZATION]:                 [ DashConstants.RANGE ],\n                    [DashConstants.REPRESENTATION_INDEX]:           [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_LIST]:                   [ DashConstants.INDEX_RANGE ],\n                    [DashConstants.BITSTREAM_SWITCHING]:            [ DashConstants.RANGE ],\n                    [DashConstants.SEGMENT_URL]:                    [ DashConstants.MEDIA_RANGE, DashConstants.INDEX_RANGE ],\n                    [DashConstants.SEGMENT_TEMPLATE]:               [ DashConstants.INDEX_RANGE, DashConstants.MEDIA, DashConstants.INDEX, DashConstants.INITIALIZATION_MINUS, DashConstants.BITSTREAM_SWITCHING_MINUS ],\n                    [DashConstants.ASSET_IDENTIFIER]:               [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.EVENT_STREAM]:                   [ DashConstants.VALUE ],\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.PROFILES, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.CONTENT_TYPE ],\n                    [DashConstants.FRAME_PACKING]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.AUDIO_CHANNEL_CONFIGURATION]:    [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_PROTECTION]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ESSENTIAL_PROPERTY]:             [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.SUPPLEMENTAL_PROPERTY]:          [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.INBAND_EVENT_STREAM]:            [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ACCESSIBILITY]:                  [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.ROLE]:                           [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.RATING]:                         [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.VIEWPOINT]:                      [ DashConstants.VALUE, DashConstants.ID ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.CONTENT_TYPE ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.ID, DashConstants.DEPENDENCY_ID, DashConstants.MEDIA_STREAM_STRUCTURE_ID ],\n                    [DashConstants.SUBSET]:                         [ DashConstants.ID ],\n                    [DashConstants.METRICS]:                        [ DashConstants.METRICS_MINUS ],\n                    [DashConstants.REPORTING]:                      [ DashConstants.VALUE, DashConstants.ID ]\n                };\n                if (stringAttrsInElements.hasOwnProperty(nodeName)) {\n                    let attrNames = stringAttrsInElements[nodeName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr.name) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => String(str)\n        );\n    }\n}\n\nexport default StringMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name + '_asArray'];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if ('period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period_asArray;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet_asArray;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction FragmentedTextBoxParser() {\n\n    let instance,\n        boxParser;\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n    }\n\n    function getSamplesInfo(ab) {\n        if (!boxParser) {\n            throw new Error('boxParser is undefined');\n        }\n\n        if (!ab || ab.byteLength === 0) {\n            return {sampleList: [], lastSequenceNumber: NaN, totalDuration: NaN, numSequences: NaN};\n        }\n        let isoFile = boxParser.parse(ab);\n        // zero or more moofs\n        let moofBoxes = isoFile.getBoxes('moof');\n        // exactly one mfhd per moof\n        let mfhdBoxes = isoFile.getBoxes('mfhd');\n\n        let sampleDuration,\n            sampleCompositionTimeOffset,\n            sampleCount,\n            sampleSize,\n            sampleDts,\n            sampleList,\n            sample,\n            i, j, k, l, m, n,\n            dataOffset,\n            lastSequenceNumber,\n            numSequences,\n            totalDuration;\n\n        numSequences = isoFile.getBoxes('moof').length;\n        lastSequenceNumber = mfhdBoxes[mfhdBoxes.length - 1].sequence_number;\n        sampleCount = 0;\n\n        sampleList = [];\n        let subsIndex = -1;\n        let nextSubsSample = -1;\n        for (l = 0; l < moofBoxes.length; l++) {\n            let moofBox = moofBoxes[l];\n            // zero or more trafs per moof\n            let trafBoxes = moofBox.getChildBoxes('traf');\n            for (j = 0; j < trafBoxes.length; j++) {\n                let trafBox = trafBoxes[j];\n                // exactly one tfhd per traf\n                let tfhdBox = trafBox.getChildBox('tfhd');\n                // zero or one tfdt per traf\n                let tfdtBox = trafBox.getChildBox('tfdt');\n                sampleDts = tfdtBox.baseMediaDecodeTime;\n                // zero or more truns per traf\n                let trunBoxes = trafBox.getChildBoxes('trun');\n                // zero or more subs per traf\n                let subsBoxes = trafBox.getChildBoxes('subs');\n                for (k = 0; k < trunBoxes.length; k++) {\n                    let trunBox = trunBoxes[k];\n                    sampleCount = trunBox.sample_count;\n                    dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\n\n                    for (i = 0; i < sampleCount; i++) {\n                        sample = trunBox.samples[i];\n                        sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\n                        sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\n                        sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\n                        let sampleData = {\n                            'dts': sampleDts,\n                            'cts': (sampleDts + sampleCompositionTimeOffset),\n                            'duration': sampleDuration,\n                            'offset': moofBox.offset + dataOffset,\n                            'size': sampleSize,\n                            'subSizes': [sampleSize]\n                        };\n                        if (subsBoxes) {\n                            for (m = 0; m < subsBoxes.length; m++) {\n                                let subsBox = subsBoxes[m];\n                                if (subsIndex < subsBox.entry_count && i > nextSubsSample) {\n                                    subsIndex++;\n                                    nextSubsSample += subsBox.entries[subsIndex].sample_delta;\n                                }\n                                if (i == nextSubsSample) {\n                                    sampleData.subSizes = [];\n                                    let entry = subsBox.entries[subsIndex];\n                                    for (n = 0; n < entry.subsample_count; n++) {\n                                        sampleData.subSizes.push(entry.subsamples[n].subsample_size);\n                                    }\n                                }\n                            }\n                        }\n                        sampleList.push(sampleData);\n                        dataOffset += sampleSize;\n                        sampleDts += sampleDuration;\n                    }\n                }\n                totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\n            }\n        }\n        return {sampleList: sampleList, lastSequenceNumber: lastSequenceNumber, totalDuration: totalDuration, numSequences: numSequences};\n    }\n\n    function getMediaTimescaleFromMoov(ab) {\n        if (!boxParser) {\n            throw new Error('boxParser is undefined');\n        }\n\n        let isoFile = boxParser.parse(ab);\n        let mdhdBox = isoFile ? isoFile.getBox('mdhd') : undefined;\n\n        return mdhdBox ? mdhdBox.timescale : NaN;\n    }\n\n    instance = {\n        getSamplesInfo: getSamplesInfo,\n        getMediaTimescaleFromMoov: getMediaTimescaleFromMoov,\n        setConfig: setConfig\n    };\n\n    return instance;\n}\n\nFragmentedTextBoxParser.__dashjs_factory_name = 'FragmentedTextBoxParser';\nexport default FactoryMaker.getSingletonFactory(FragmentedTextBoxParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils';\n\nfunction ListSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromList(representation, requestedTime, index, availabilityUpperLimit) {\n        const list = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const len = list.SegmentURL_asArray.length;\n\n        const segments = [];\n\n        let periodSegIdx,\n            seg,\n            s,\n            range,\n            startIdx,\n            endIdx,\n            start;\n\n        start = representation.startNumber;\n\n        range = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\n        startIdx = Math.max(range.start, 0);\n        endIdx = Math.min(range.end, list.SegmentURL_asArray.length - 1);\n\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\n            s = list.SegmentURL_asArray[periodSegIdx];\n\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\n            seg.media = s.media ? s.media : '';\n            seg.mediaRange = s.mediaRange;\n            seg.index = s.index;\n            seg.indexRange = s.indexRange;\n\n            segments.push(seg);\n            seg = null;\n        }\n\n        representation.availableSegmentsNumber = len;\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromList\n    };\n\n    return instance;\n}\n\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Static methods for rounding decimals\n *\n * Modified version of the CC0-licenced example at:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n *\n * @export\n * @class Round10\n */\nexport default class Round10 {\n    /**\n    * Decimal round.\n    *\n    * @param {Number}  value The number.\n    * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n    * @returns {Number} The adjusted value.\n    */\n    static round10(value, exp) {\n        return _decimalAdjust('round', value, exp);\n    }\n}\n\n/**\n * Decimal adjustment of a number.\n *\n * @param {String}  type  The type of adjustment.\n * @param {Number}  value The number.\n * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n * @returns {Number} The adjusted value.\n */\nfunction _decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n        return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp;\n\n    // If the value is not a number or the exp is not an integer...\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n        return NaN;\n    }\n\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashConstants from '../constants/DashConstants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport TimelineSegmentsGetter from './TimelineSegmentsGetter';\nimport TemplateSegmentsGetter from './TemplateSegmentsGetter';\nimport ListSegmentsGetter from './ListSegmentsGetter';\n\nfunction SegmentsGetter(config, isDynamic) {\n\n    const context = this.context;\n\n    let instance,\n        timelineSegmentsGetter,\n        templateSegmentsGetter,\n        listSegmentsGetter;\n\n    function setup() {\n        timelineSegmentsGetter = TimelineSegmentsGetter(context).create(config, isDynamic);\n        templateSegmentsGetter = TemplateSegmentsGetter(context).create(config, isDynamic);\n        listSegmentsGetter = ListSegmentsGetter(context).create(config, isDynamic);\n    }\n\n    // availabilityUpperLimit parameter is not used directly by any dash.js function, but it is needed as a helper\n    // for other developments that extend dash.js, and provide their own transport layers (ex: P2P transport)\n    function getSegments(representation, requestedTime, index, onSegmentListUpdatedCallback, availabilityUpperLimit) {\n        let segments;\n        const type = representation.segmentInfoType;\n\n        // Already figure out the segments.\n        if (type === DashConstants.SEGMENT_BASE || type === DashConstants.BASE_URL || !isSegmentListUpdateRequired(representation, index)) {\n            segments = representation.segments;\n        } else {\n            if (type === DashConstants.SEGMENT_TIMELINE) {\n                segments = timelineSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            } else if (type === DashConstants.SEGMENT_TEMPLATE) {\n                segments = templateSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            } else if (type === DashConstants.SEGMENT_LIST) {\n                segments = listSegmentsGetter.getSegments(representation, requestedTime, index, availabilityUpperLimit);\n            }\n\n            if (onSegmentListUpdatedCallback) {\n                onSegmentListUpdatedCallback(representation, segments);\n            }\n        }\n    }\n\n    function isSegmentListUpdateRequired(representation, index) {\n        const segments = representation.segments;\n        let updateRequired = false;\n\n        let upperIdx,\n            lowerIdx;\n\n        if (!segments || segments.length === 0) {\n            updateRequired = true;\n        } else {\n            lowerIdx = segments[0].availabilityIdx;\n            upperIdx = segments[segments.length - 1].availabilityIdx;\n            updateRequired = (index < lowerIdx) || (index > upperIdx);\n        }\n\n        return updateRequired;\n    }\n\n    instance = {\n        getSegments: getSegments\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentsGetter.__dashjs_factory_name = 'SegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(SegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Segment from './../vo/Segment';\n\nfunction zeroPadToLength(numStr, minStrLength) {\n    while (numStr.length < minStrLength) {\n        numStr = '0' + numStr;\n    }\n    return numStr;\n}\n\nfunction getNumberForSegment(segment, segmentIndex) {\n    return segment.representation.startNumber + segmentIndex;\n}\n\nexport function unescapeDollarsInTemplate(url) {\n    return url ? url.split('$$').join('$') : url;\n}\n\nexport function replaceIDForTemplate(url, value) {\n    if (!value || !url || url.indexOf('$RepresentationID$') === -1) { return url; }\n    let v = value.toString();\n    return url.split('$RepresentationID$').join(v);\n}\n\nexport function replaceTokenForTemplate(url, token, value) {\n    const formatTag = '%0';\n\n    let startPos,\n        endPos,\n        formatTagPos,\n        specifier,\n        width,\n        paddedValue;\n\n    const tokenLen = token.length;\n    const formatTagLen = formatTag.length;\n\n    if (!url) {\n        return url;\n    }\n\n    // keep looping round until all instances of <token> have been\n    // replaced. once that has happened, startPos below will be -1\n    // and the completed url will be returned.\n    while (true) {\n\n        // check if there is a valid $<token>...$ identifier\n        // if not, return the url as is.\n        startPos = url.indexOf('$' + token);\n        if (startPos < 0) {\n            return url;\n        }\n\n        // the next '$' must be the end of the identifier\n        // if there isn't one, return the url as is.\n        endPos = url.indexOf('$', startPos + tokenLen);\n        if (endPos < 0) {\n            return url;\n        }\n\n        // now see if there is an additional format tag suffixed to\n        // the identifier within the enclosing '$' characters\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\n        if (formatTagPos > startPos && formatTagPos < endPos) {\n\n            specifier = url.charAt(endPos - 1);\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\n\n            // support the minimum specifiers required by IEEE 1003.1\n            // (d, i , o, u, x, and X) for completeness\n            switch (specifier) {\n                // treat all int types as uint,\n                // hence deliberate fallthrough\n                case 'd':\n                case 'i':\n                case 'u':\n                    paddedValue = zeroPadToLength(value.toString(), width);\n                    break;\n                case 'x':\n                    paddedValue = zeroPadToLength(value.toString(16), width);\n                    break;\n                case 'X':\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\n                    break;\n                case 'o':\n                    paddedValue = zeroPadToLength(value.toString(8), width);\n                    break;\n                default:\n                    return url;\n            }\n        } else {\n            paddedValue = value;\n        }\n\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\n    }\n}\n\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\n    let seg,\n        duration,\n        presentationStartTime,\n        presentationEndTime;\n\n    duration = representation.segmentDuration;\n\n    /*\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\n     * in the same way as for the last Media Segment in the Representation.\n     */\n    if (isNaN(duration)) {\n        duration = representation.adaptation.period.duration;\n    }\n\n    presentationStartTime = parseFloat((representation.adaptation.period.start + (index * duration)).toFixed(5));\n    presentationEndTime = parseFloat((presentationStartTime + duration).toFixed(5));\n\n    seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = duration;\n    seg.presentationStartTime = presentationStartTime;\n\n    seg.mediaStartTime = timelineConverter.calcMediaTimeFromPresentationTime(seg.presentationStartTime, representation);\n\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(seg.presentationStartTime, representation.adaptation.period.mpd, isDynamic);\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\n\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n\n    seg.replacementNumber = getNumberForSegment(seg, index);\n    seg.availabilityIdx = index;\n\n    return seg;\n}\n\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index, tManifest) {\n    const scaledTime = time / fTimescale;\n    const scaledDuration = Math.min(duration / fTimescale, representation.adaptation.period.mpd.maxSegmentDuration);\n\n    let presentationStartTime,\n        presentationEndTime,\n        seg;\n\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\n    presentationEndTime = presentationStartTime + scaledDuration;\n\n    seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = scaledDuration;\n    seg.mediaStartTime = scaledTime;\n\n    seg.presentationStartTime = presentationStartTime;\n\n    // For SegmentTimeline every segment is available at loadedTime\n    seg.availabilityStartTime = representation.adaptation.period.mpd.manifest.loadedTime;\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation.adaptation.period.mpd, isDynamic);\n\n    // at this wall clock time, the video element currentTime should be seg.presentationStartTime\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n\n    seg.replacementTime = tManifest ? tManifest : time;\n\n    seg.replacementNumber = getNumberForSegment(seg, index);\n\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n    seg.media = url;\n    seg.mediaRange = range;\n    seg.availabilityIdx = index;\n\n    return seg;\n}\n\nexport function getSegmentByIndex(index, representation) {\n    if (!representation || !representation.segments) return null;\n\n    const ln = representation.segments.length;\n    let seg,\n        i;\n\n    if (index < ln) {\n        seg = representation.segments[index];\n        if (seg && seg.availabilityIdx === index) {\n            return seg;\n        }\n    }\n\n    for (i = 0; i < ln; i++) {\n        seg = representation.segments[i];\n\n        if (seg && seg.availabilityIdx === index) {\n            return seg;\n        }\n    }\n\n    return null;\n}\n\nexport function decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, givenAvailabilityUpperLimit) {\n    const duration = representation.segmentDuration;\n    const minBufferTime = representation.adaptation.period.mpd.manifest.minBufferTime;\n    const availabilityWindow = representation.segmentAvailabilityRange;\n    let periodRelativeRange = {\n        start: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.start),\n        end: timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, availabilityWindow.end)\n    };\n    const currentSegmentList = representation.segments;\n    const availabilityLowerLimit = 2 * duration;\n    const availabilityUpperLimit = givenAvailabilityUpperLimit || Math.max(2 * minBufferTime, 10 * duration);\n    let originAvailabilityTime = NaN;\n    let originSegment = null;\n\n    let start,\n        end,\n        range;\n\n    periodRelativeRange.start = Math.max(periodRelativeRange.start, 0);\n\n    if (isDynamic && !timelineConverter.isTimeSyncCompleted()) {\n        start = Math.floor(periodRelativeRange.start / duration);\n        end = Math.floor(periodRelativeRange.end / duration);\n        range = {start: start, end: end};\n        return range;\n    }\n\n    // if segments exist we should try to find the latest buffered time, which is the presentation time of the\n    // segment for the current index\n    if (currentSegmentList && currentSegmentList.length > 0) {\n        originSegment = getSegmentByIndex(index, representation);\n        if (originSegment) {\n            originAvailabilityTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, originSegment.presentationStartTime);\n        } else {\n            originAvailabilityTime = index > 0 ? index * duration :\n                timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        }\n\n    } else {\n        // If no segments exist, but index > 0, it means that we switch to the other representation, so\n        // we should proceed from this time.\n        // Otherwise we should start from the beginning for static mpds or from the end (live edge) for dynamic mpds\n        originAvailabilityTime = index > 0 ? index * duration : isDynamic ? periodRelativeRange.end : periodRelativeRange.start;\n    }\n\n    // segment list should not be out of the availability window range\n    start = Math.floor(Math.max(originAvailabilityTime - availabilityLowerLimit, periodRelativeRange.start) / duration);\n    end = Math.floor(Math.min(start + availabilityUpperLimit / duration, periodRelativeRange.end / duration));\n\n    range = {start: start, end: end};\n\n    return range;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {replaceTokenForTemplate, getIndexBasedSegment, decideSegmentListRangeForTemplate} from './SegmentsUtils';\n\nfunction TemplateSegmentsGetter(config, isDynamic) {\n\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function getSegmentsFromTemplate(representation, requestedTime, index, availabilityUpperLimit) {\n        const template = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;\n        const duration = representation.segmentDuration;\n        const availabilityWindow = representation.segmentAvailabilityRange;\n\n        const segments = [];\n        let url = null;\n        let seg = null;\n\n        let segmentRange,\n            periodSegIdx,\n            startIdx,\n            endIdx,\n            start;\n\n        start = representation.startNumber;\n\n        if (isNaN(duration) && !isDynamic) {\n            segmentRange = {start: start, end: start};\n        }\n        else {\n            segmentRange = decideSegmentListRangeForTemplate(timelineConverter, isDynamic, representation, requestedTime, index, availabilityUpperLimit);\n        }\n\n        startIdx = segmentRange.start;\n        endIdx = segmentRange.end;\n\n        for (periodSegIdx = startIdx; periodSegIdx <= endIdx; periodSegIdx++) {\n\n            seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, periodSegIdx);\n            seg.replacementTime = (start + periodSegIdx - 1) * representation.segmentDuration;\n            url = template.media;\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n            seg.media = url;\n\n            segments.push(seg);\n            seg = null;\n        }\n\n        if (isNaN(duration)) {\n            representation.availableSegmentsNumber = 1;\n        }\n        else {\n            representation.availableSegmentsNumber = Math.ceil((availabilityWindow.end - availabilityWindow.start) / duration);\n        }\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromTemplate\n    };\n\n    return instance;\n}\n\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction TimelineConverter() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        clientServerTimeShift,\n        isClientServerTimeSyncCompleted,\n        expectedLiveEdge;\n\n    function initialize() {\n        resetInitialSettings();\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\n    }\n\n    function isTimeSyncCompleted() {\n        return isClientServerTimeSyncCompleted;\n    }\n\n    function setTimeSyncCompleted(value) {\n        isClientServerTimeSyncCompleted = value;\n    }\n\n    function getClientTimeOffset() {\n        return clientServerTimeShift;\n    }\n\n    function setClientTimeOffset(value) {\n        clientServerTimeShift = value;\n    }\n\n    function getExpectedLiveEdge() {\n        return expectedLiveEdge;\n    }\n\n    function setExpectedLiveEdge(value) {\n        expectedLiveEdge = value;\n    }\n\n    function calcAvailabilityTimeFromPresentationTime(presentationTime, mpd, isDynamic, calculateEnd) {\n        let availabilityTime = NaN;\n\n        if (calculateEnd) {\n            //@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed\n            // to be available for a Media Presentation with type 'dynamic'.\n            // When not present, the value is infinite.\n            if (isDynamic && (mpd.timeShiftBufferDepth != Number.POSITIVE_INFINITY)) {\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + ((presentationTime + mpd.timeShiftBufferDepth) * 1000));\n            } else {\n                availabilityTime = mpd.availabilityEndTime;\n            }\n        } else {\n            if (isDynamic) {\n                availabilityTime = new Date(mpd.availabilityStartTime.getTime() + (presentationTime - clientServerTimeShift) * 1000);\n            } else {\n                // in static mpd, all segments are available at the same time\n                availabilityTime = mpd.availabilityStartTime;\n            }\n        }\n\n        return availabilityTime;\n    }\n\n    function calcAvailabilityStartTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic);\n    }\n\n    function calcAvailabilityEndTimeFromPresentationTime(presentationTime, mpd, isDynamic) {\n        return calcAvailabilityTimeFromPresentationTime.call(this, presentationTime, mpd, isDynamic, true);\n    }\n\n    function calcPresentationTimeFromWallTime(wallTime, period) {\n        return ((wallTime.getTime() - period.mpd.availabilityStartTime.getTime() + clientServerTimeShift * 1000) / 1000);\n    }\n\n    function calcPresentationTimeFromMediaTime(mediaTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return mediaTime + (periodStart - presentationOffset);\n    }\n\n    function calcMediaTimeFromPresentationTime(presentationTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return presentationTime - periodStart + presentationOffset;\n    }\n\n    function calcWallTimeForSegment(segment, isDynamic) {\n        let suggestedPresentationDelay,\n            displayStartTime,\n            wallTime;\n\n        if (isDynamic) {\n            suggestedPresentationDelay = segment.representation.adaptation.period.mpd.suggestedPresentationDelay;\n            displayStartTime = segment.presentationStartTime + suggestedPresentationDelay;\n            wallTime = new Date(segment.availabilityStartTime.getTime() + (displayStartTime * 1000));\n        }\n\n        return wallTime;\n    }\n\n    function calcSegmentAvailabilityRange(voRepresentation, isDynamic) {\n        // Static Range Finder\n        const voPeriod = voRepresentation.adaptation.period;\n        const range = { start: voPeriod.start, end: voPeriod.start + voPeriod.duration };\n        if (!isDynamic) return range;\n\n        if (!isClientServerTimeSyncCompleted && voRepresentation.segmentAvailabilityRange) {\n            return voRepresentation.segmentAvailabilityRange;\n        }\n\n        // Dynamic Range Finder\n        const d = voRepresentation.segmentDuration || (voRepresentation.segments && voRepresentation.segments.length ? voRepresentation.segments[voRepresentation.segments.length - 1].duration : 0);\n        const now = calcPresentationTimeFromWallTime(new Date(), voPeriod);\n        const periodEnd = voPeriod.start + voPeriod.duration;\n        range.start = Math.max((now - voPeriod.mpd.timeShiftBufferDepth), voPeriod.start);\n\n        const endOffset = voRepresentation.availabilityTimeOffset !== undefined &&\n            voRepresentation.availabilityTimeOffset < d ? d - voRepresentation.availabilityTimeOffset : d;\n        range.end = now >= periodEnd && now - endOffset < periodEnd ? periodEnd : now - endOffset;\n\n        return range;\n    }\n\n    function calcPeriodRelativeTimeFromMpdRelativeTime(representation, mpdRelativeTime) {\n        const periodStartTime = representation.adaptation.period.start;\n        return mpdRelativeTime - periodStartTime;\n    }\n\n    /*\n    * We need to figure out if we want to timesync for segmentTimeine where useCalculatedLiveEdge = true\n    * seems we figure out client offset based on logic in liveEdgeFinder getLiveEdge timelineConverter.setClientTimeOffset(liveEdge - representationInfo.DVRWindow.end);\n    * FYI StreamController's onManifestUpdated entry point to timeSync\n    * */\n    function onTimeSyncComplete(e) {\n\n        if (isClientServerTimeSyncCompleted) return;\n\n        if (e.offset !== undefined) {\n\n            setClientTimeOffset(e.offset / 1000);\n            isClientServerTimeSyncCompleted = true;\n\n        }\n    }\n\n    function calcMSETimeOffset(representation) {\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\n        const presentationOffset = representation.presentationTimeOffset;\n        const periodStart = representation.adaptation.period.start;\n        return (periodStart - presentationOffset);\n    }\n\n    function resetInitialSettings() {\n        clientServerTimeShift = 0;\n        isClientServerTimeSyncCompleted = false;\n        expectedLiveEdge = NaN;\n    }\n\n    function reset() {\n        eventBus.off(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncComplete, this);\n        resetInitialSettings();\n    }\n\n    instance = {\n        initialize: initialize,\n        isTimeSyncCompleted: isTimeSyncCompleted,\n        setTimeSyncCompleted: setTimeSyncCompleted,\n        getClientTimeOffset: getClientTimeOffset,\n        setClientTimeOffset: setClientTimeOffset,\n        getExpectedLiveEdge: getExpectedLiveEdge,\n        setExpectedLiveEdge: setExpectedLiveEdge,\n        calcAvailabilityStartTimeFromPresentationTime: calcAvailabilityStartTimeFromPresentationTime,\n        calcAvailabilityEndTimeFromPresentationTime: calcAvailabilityEndTimeFromPresentationTime,\n        calcPresentationTimeFromWallTime: calcPresentationTimeFromWallTime,\n        calcPresentationTimeFromMediaTime: calcPresentationTimeFromMediaTime,\n        calcPeriodRelativeTimeFromMpdRelativeTime: calcPeriodRelativeTimeFromMpdRelativeTime,\n        calcMediaTimeFromPresentationTime: calcMediaTimeFromPresentationTime,\n        calcSegmentAvailabilityRange: calcSegmentAvailabilityRange,\n        calcWallTimeForSegment: calcWallTimeForSegment,\n        calcMSETimeOffset: calcMSETimeOffset,\n        reset: reset\n    };\n\n    return instance;\n}\n\nTimelineConverter.__dashjs_factory_name = 'TimelineConverter';\nexport default FactoryMaker.getSingletonFactory(TimelineConverter);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nimport {getTimeBasedSegment} from './SegmentsUtils';\n\nfunction TimelineSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcMediaTimeFromPresentationTime') || !timelineConverter.hasOwnProperty('calcSegmentAvailabilityRange') ||\n            !timelineConverter.hasOwnProperty('calcMediaTimeFromPresentationTime')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getSegmentsFromTimeline(representation, requestedTime, index, availabilityUpperLimit) {\n        checkConfig();\n\n        if (!representation) {\n            throw new Error('no representation');\n        }\n\n        if (requestedTime === undefined) {\n            requestedTime = null;\n        }\n\n        const base = representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].\n            AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;\n        const timeline = base.SegmentTimeline;\n        const list = base.SegmentURL_asArray;\n        const isAvailableSegmentNumberCalculated = representation.availableSegmentsNumber > 0;\n\n        let maxSegmentsAhead;\n\n        if (availabilityUpperLimit) {\n            maxSegmentsAhead = availabilityUpperLimit;\n        } else {\n            maxSegmentsAhead = (index > -1 || requestedTime !== null) ? 10 : Infinity;\n        }\n\n        let time = 0;\n        let scaledTime = 0;\n        let availabilityIdx = -1;\n        const segments = [];\n        let requiredMediaTime = null;\n\n        let fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            repeatEndTime,\n            nextFrag,\n            hasEnoughSegments,\n            startIdx,\n            fTimescale;\n\n        let createSegment = function (s, i) {\n            let media = base.media;\n            let mediaRange = s.mediaRange;\n\n            if (list) {\n                media = list[i].media || '';\n                mediaRange = list[i].mediaRange;\n            }\n\n            return getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                time,\n                s.d,\n                fTimescale,\n                media,\n                mediaRange,\n                availabilityIdx,\n                s.tManifest);\n        };\n\n        fTimescale = representation.timescale;\n\n        fragments = timeline.S_asArray;\n\n        startIdx = index;\n\n        if (requestedTime !== null) {\n            requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime, representation);\n        }\n\n        for (i = 0, len = fragments.length; i < len; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            // For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n                scaledTime = time / fTimescale;\n            }\n\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                nextFrag = fragments[i + 1];\n\n                if (nextFrag && nextFrag.hasOwnProperty('t')) {\n                    repeatEndTime = nextFrag.t / fTimescale;\n                } else {\n                    const availabilityEnd = representation.segmentAvailabilityRange ? representation.segmentAvailabilityRange.end : (timelineConverter.calcSegmentAvailabilityRange(representation, isDynamic).end);\n                    repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\n                    representation.segmentDuration = frag.d / fTimescale;\n                }\n\n                repeat = Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1;\n            }\n\n            // if we have enough segments in the list, but we have not calculated the total number of the segments yet we\n            // should continue the loop and calc the number. Once it is calculated, we can break the loop.\n            if (hasEnoughSegments) {\n                if (isAvailableSegmentNumberCalculated) break;\n                availabilityIdx += repeat + 1;\n                continue;\n            }\n\n            for (j = 0; j <= repeat; j++) {\n                availabilityIdx++;\n\n                if (segments.length > maxSegmentsAhead) {\n                    hasEnoughSegments = true;\n                    if (isAvailableSegmentNumberCalculated) break;\n                    continue;\n                }\n\n                if (requiredMediaTime !== null) {\n                    // In some cases when requiredMediaTime = actual end time of the last segment\n                    // it is possible that this time a bit exceeds the declared end time of the last segment.\n                    // in this case we still need to include the last segment in the segment list. to do this we\n                    // use a correction factor = 1.5. This number is used because the largest possible deviation is\n                    // is 50% of segment duration.\n                    if (scaledTime >= (requiredMediaTime - (frag.d / fTimescale) * 1.5)) {\n                        segments.push(createSegment(frag, availabilityIdx));\n                    }\n                } else if (availabilityIdx >= startIdx) {\n                    segments.push(createSegment(frag, availabilityIdx));\n                }\n\n                time += frag.d;\n                scaledTime = time / fTimescale;\n            }\n        }\n\n        if (!isAvailableSegmentNumberCalculated) {\n            representation.availableSegmentsNumber = availabilityIdx + 1;\n        }\n\n        return segments;\n    }\n\n    instance = {\n        getSegments: getSegmentsFromTimeline\n    };\n\n    return instance;\n}\n\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass AdaptationSet {\n    constructor() {\n        this.period = null;\n        this.index = -1;\n        this.type = null;\n    }\n}\n\nexport default AdaptationSet;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nconst DEFAULT_DVB_PRIORITY = 1;\nconst DEFAULT_DVB_WEIGHT = 1;\n\nclass BaseURL {\n    constructor(url, serviceLocation, priority, weight) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || url || '';\n\n        // DVB extensions\n        this.dvb_priority = priority || DEFAULT_DVB_PRIORITY;\n        this.dvb_weight = weight || DEFAULT_DVB_WEIGHT;\n\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n\n        /* currently unused:\n         * byteRange,\n         */\n    }\n}\n\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\n\nexport default BaseURL;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Event {\n    constructor() {\n        this.duration = NaN;\n        this.presentationTime = NaN;\n        this.id = NaN;\n        this.messageData = '';\n        this.eventStream = null;\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\n    }\n}\n\nexport default Event;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventStream {\n    constructor() {\n        this.adaptionSet = null;\n        this.representation = null;\n        this.period = null;\n        this.timescale = 1;\n        this.value = '';\n        this.schemeIdUri = '';\n    }\n}\n\nexport default EventStream;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Mpd {\n    constructor() {\n        this.manifest = null;\n        this.suggestedPresentationDelay = 0;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\n        this.minimumUpdatePeriod = NaN;\n        this.mediaPresentationDuration = NaN;\n    }\n}\n\nexport default Mpd;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Period {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.duration = NaN;\n        this.start = NaN;\n        this.mpd = null;\n    }\n}\n\nPeriod.DEFAULT_ID = 'defaultId';\n\nexport default Period;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport DashConstants from '../constants/DashConstants';\n\nclass Representation {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.adaptation = null;\n        this.segmentInfoType = null;\n        this.initialization = null;\n        this.codecs = null;\n        this.codecPrivateData = null;\n        this.segmentDuration = NaN;\n        this.timescale = 1;\n        this.startNumber = 1;\n        this.indexRange = null;\n        this.range = null;\n        this.presentationTimeOffset = 0;\n        // Set the source buffer timeOffset to this\n        this.MSETimeOffset = NaN;\n        this.segmentAvailabilityRange = null;\n        this.availableSegmentsNumber = 0;\n        this.bandwidth = NaN;\n        this.width = NaN;\n        this.height = NaN;\n        this.scanType = null;\n        this.maxPlayoutRate = NaN;\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n    }\n\n    static hasInitialization(r) {\n        return (r.initialization !== null || r.range !== null);\n    }\n\n    static hasSegments(r) {\n        return r.segmentInfoType !== DashConstants.BASE_URL &&\n            r.segmentInfoType !== DashConstants.SEGMENT_BASE &&\n            !r.indexRange;\n    }\n}\n\nexport default Representation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Segment {\n    constructor() {\n        this.indexRange = null;\n        this.index = null;\n        this.mediaRange = null;\n        this.media = null;\n        this.duration = NaN;\n        // this is the time that should be inserted into the media url\n        this.replacementTime = null;\n        // this is the number that should be inserted into the media url\n        this.replacementNumber = NaN;\n        // This is supposed to match the time encoded in the media Segment\n        this.mediaStartTime = NaN;\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\n        // time that will match the seekTarget and video.currentTime\n        this.presentationStartTime = NaN;\n        // Do not schedule this segment until\n        this.availabilityStartTime = NaN;\n        // Ignore and  discard this segment after\n        this.availabilityEndTime = NaN;\n        // The index of the segment inside the availability window\n        this.availabilityIdx = NaN;\n        // For dynamic mpd's, this is the wall clock time that the video\n        // element currentTime should be presentationStartTime\n        this.wallStartTime = NaN;\n        this.representation = null;\n    }\n}\n\nexport default Segment;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass UTCTiming {\n    constructor() {\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default UTCTiming;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport HTTPLoader from './net/HTTPLoader';\nimport HeadRequest from './vo/HeadRequest';\nimport DashJSError from './vo/DashJSError';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst FRAGMENT_LOADER_ERROR_LOADING_FAILURE = 1;\nconst FRAGMENT_LOADER_ERROR_NULL_REQUEST = 2;\nconst FRAGMENT_LOADER_MESSAGE_NULL_REQUEST = 'request is null';\n\nfunction FragmentLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        httpLoader;\n\n    function setup() {\n        httpLoader = HTTPLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier,\n            useFetch: config.mediaPlayerModel.getLowLatencyEnabled()\n        });\n    }\n\n    function checkForExistence(request) {\n        const report = function (success) {\n            eventBus.trigger(\n                Events.CHECK_FOR_EXISTENCE_COMPLETED, {\n                    request: request,\n                    exists: success\n                }\n            );\n        };\n\n        if (request) {\n            let headRequest = new HeadRequest(request.url);\n\n            httpLoader.load({\n                request: headRequest,\n                success: function () {\n                    report(true);\n                },\n                error: function () {\n                    report(false);\n                }\n            });\n        } else {\n            report(false);\n        }\n    }\n\n    function load(request) {\n        const report = function (data, error) {\n            eventBus.trigger(Events.LOADING_COMPLETED, {\n                request: request,\n                response: data || null,\n                error: error || null,\n                sender: instance\n            });\n        };\n\n        if (request) {\n            httpLoader.load({\n                request: request,\n                progress: function (event) {\n                    eventBus.trigger(Events.LOADING_PROGRESS, {\n                        request: request\n                    });\n                    if (event.data) {\n                        eventBus.trigger(Events.LOADING_DATA_PROGRESS, {\n                            request: request,\n                            response: event.data || null,\n                            error: null,\n                            sender: instance\n                        });\n                    }\n                },\n                success: function (data) {\n                    report(data);\n                },\n                error: function (request, statusText, errorText) {\n                    report(\n                        undefined,\n                        new DashJSError(\n                            FRAGMENT_LOADER_ERROR_LOADING_FAILURE,\n                            errorText,\n                            statusText\n                        )\n                    );\n                },\n                abort: function (request) {\n                    if (request) {\n                        eventBus.trigger(Events.LOADING_ABANDONED, {request: request, mediaType: request.mediaType, sender: instance});\n                    }\n                }\n            });\n        } else {\n            report(\n                undefined,\n                new DashJSError(\n                    FRAGMENT_LOADER_ERROR_NULL_REQUEST,\n                    FRAGMENT_LOADER_MESSAGE_NULL_REQUEST\n                )\n            );\n        }\n    }\n\n    function abort() {\n        if (httpLoader) {\n            httpLoader.abort();\n        }\n    }\n\n    function reset() {\n        if (httpLoader) {\n            httpLoader.abort();\n            httpLoader = null;\n        }\n    }\n\n    instance = {\n        checkForExistence: checkForExistence,\n        load: load,\n        abort: abort,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\n\nconst factory = FactoryMaker.getClassFactory(FragmentLoader);\nfactory.FRAGMENT_LOADER_ERROR_LOADING_FAILURE = FRAGMENT_LOADER_ERROR_LOADING_FAILURE;\nfactory.FRAGMENT_LOADER_ERROR_NULL_REQUEST = FRAGMENT_LOADER_ERROR_NULL_REQUEST;\nFactoryMaker.updateClassFactory(FragmentLoader.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport XlinkController from './controllers/XlinkController';\nimport HTTPLoader from './net/HTTPLoader';\nimport URLUtils from './utils/URLUtils';\nimport TextRequest from './vo/TextRequest';\nimport DashJSError from './vo/DashJSError';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport DashParser from '../dash/parser/DashParser';\nimport Debug from '../core/Debug';\n\nconst MANIFEST_LOADER_ERROR_PARSING_FAILURE = 1;\nconst MANIFEST_LOADER_ERROR_LOADING_FAILURE = 2;\nconst MANIFEST_LOADER_MESSAGE_PARSING_FAILURE = 'parsing failed';\n\nfunction ManifestLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        httpLoader,\n        xlinkController,\n        parser;\n    let mssHandler = config.mssHandler;\n    let errHandler = config.errHandler;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        eventBus.on(Events.XLINK_READY, onXlinkReady, instance);\n\n        httpLoader = HTTPLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier\n        });\n\n        xlinkController = XlinkController(context).create({\n            errHandler: errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier\n        });\n\n        parser = null;\n    }\n\n    function onXlinkReady(event) {\n        eventBus.trigger(\n            Events.INTERNAL_MANIFEST_LOADED, {\n                manifest: event.manifest\n            }\n        );\n    }\n\n    function createParser(data) {\n        let parser = null;\n        // Analyze manifest content to detect protocol and select appropriate parser\n        if (data.indexOf('SmoothStreamingMedia') > -1) {\n            //do some business to transform it into a Dash Manifest\n            if (mssHandler) {\n                parser = mssHandler.createMssParser();\n                mssHandler.registerEvents();\n            }\n            return parser;\n        } else if (data.indexOf('MPD') > -1) {\n            return DashParser(context).create();\n        } else {\n            return parser;\n        }\n    }\n\n    function load(url) {\n        const request = new TextRequest(url, HTTPRequest.MPD_TYPE);\n\n        httpLoader.load({\n            request: request,\n            success: function (data, textStatus, responseURL) {\n                // Manage situations in which success is called after calling reset\n                if (!xlinkController) return;\n\n                let actualUrl,\n                    baseUri,\n                    manifest;\n\n                // Handle redirects for the MPD - as per RFC3986 Section 5.1.3\n                // also handily resolves relative MPD URLs to absolute\n                if (responseURL && responseURL !== url) {\n                    baseUri = urlUtils.parseBaseUrl(responseURL);\n                    actualUrl = responseURL;\n                } else {\n                    // usually this case will be caught and resolved by\n                    // responseURL above but it is not available for IE11 and Edge/12 and Edge/13\n                    // baseUri must be absolute for BaseURL resolution later\n                    if (urlUtils.isRelative(url)) {\n                        url = urlUtils.resolve(url, window.location.href);\n                    }\n\n                    baseUri = urlUtils.parseBaseUrl(url);\n                }\n\n                // Create parser according to manifest type\n                if (parser === null) {\n                    parser = createParser(data);\n                }\n\n                if (parser === null) {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null,\n                            error: new DashJSError(\n                                MANIFEST_LOADER_ERROR_PARSING_FAILURE,\n                                `Failed detecting manifest type or manifest type unsupported : ${url}`\n                            )\n                        }\n                    );\n                    return;\n                }\n\n                // init xlinkcontroller with matchers and iron object from created parser\n                xlinkController.setMatchers(parser.getMatchers());\n                xlinkController.setIron(parser.getIron());\n\n                try {\n                    manifest = parser.parse(data);\n                } catch (e) {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null,\n                            error: new DashJSError(\n                               MANIFEST_LOADER_ERROR_PARSING_FAILURE,\n                                `Failed parsing manifest : ${url}`\n                           )\n                        }\n                    );\n                    return;\n                }\n\n                if (manifest) {\n                    manifest.url = actualUrl || url;\n\n                    // URL from which the MPD was originally retrieved (MPD updates will not change this value)\n                    if (!manifest.originalUrl) {\n                        manifest.originalUrl = manifest.url;\n                    }\n\n                    // In the following, we only use the first Location entry even if many are available\n                    // Compare with ManifestUpdater/DashManifestModel\n                    if (manifest.hasOwnProperty(Constants.LOCATION)) {\n                        baseUri = urlUtils.parseBaseUrl(manifest.Location_asArray[0]);\n                        logger.debug('BaseURI set by Location to: ' + baseUri);\n                    }\n\n                    manifest.baseUri = baseUri;\n                    manifest.loadedTime = new Date();\n                    xlinkController.resolveManifestOnLoad(manifest);\n                } else {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null,\n                            error: new DashJSError(\n                                MANIFEST_LOADER_ERROR_PARSING_FAILURE,\n                                MANIFEST_LOADER_MESSAGE_PARSING_FAILURE\n                            )\n                        }\n                    );\n                }\n            },\n            error: function (request, statusText, errorText) {\n                eventBus.trigger(\n                    Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            MANIFEST_LOADER_ERROR_LOADING_FAILURE,\n                            `Failed loading manifest: ${url}, ${errorText}`\n                        )\n                    }\n                );\n            }\n        });\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_READY, onXlinkReady, instance);\n\n        if (xlinkController) {\n            xlinkController.reset();\n            xlinkController = null;\n        }\n\n        if (httpLoader) {\n            httpLoader.abort();\n            httpLoader = null;\n        }\n\n        if (mssHandler) {\n            mssHandler.reset();\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nManifestLoader.__dashjs_factory_name = 'ManifestLoader';\n\nconst factory = FactoryMaker.getClassFactory(ManifestLoader);\nfactory.MANIFEST_LOADER_ERROR_PARSING_FAILURE = MANIFEST_LOADER_ERROR_PARSING_FAILURE;\nfactory.MANIFEST_LOADER_ERROR_LOADING_FAILURE = MANIFEST_LOADER_ERROR_LOADING_FAILURE;\nFactoryMaker.updateClassFactory(ManifestLoader.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\n\nfunction ManifestUpdater() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        refreshDelay,\n        refreshTimer,\n        isPaused,\n        isUpdating,\n        manifestLoader,\n        manifestModel,\n        dashManifestModel,\n        mediaPlayerModel,\n        errHandler;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    function initialize() {\n        resetInitialSettings();\n\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n    }\n\n    function setManifest(manifest) {\n        update(manifest);\n    }\n\n    function resetInitialSettings() {\n        refreshDelay = NaN;\n        isUpdating = false;\n        isPaused = true;\n        stopManifestRefreshTimer();\n    }\n\n    function reset() {\n\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n\n        resetInitialSettings();\n    }\n\n    function stopManifestRefreshTimer() {\n        if (refreshTimer !== null) {\n            clearInterval(refreshTimer);\n            refreshTimer = null;\n        }\n    }\n\n    function startManifestRefreshTimer(delay) {\n        stopManifestRefreshTimer();\n\n        if (isNaN(delay) && !isNaN(refreshDelay)) {\n            delay = refreshDelay * 1000;\n        }\n\n        if (!isNaN(delay)) {\n            logger.debug('Refresh manifest in ' + delay + ' milliseconds.');\n            refreshTimer = setTimeout(onRefreshTimer, delay);\n        }\n    }\n\n    function refreshManifest() {\n        isUpdating = true;\n        const manifest = manifestModel.getValue();\n        let url = manifest.url;\n        const location = dashManifestModel.getLocation(manifest);\n        if (location) {\n            url = location;\n        }\n        manifestLoader.load(url);\n    }\n\n    function update(manifest) {\n\n        manifestModel.setValue(manifest);\n\n        const date = new Date();\n        const latencyOfLastUpdate = (date.getTime() - manifest.loadedTime.getTime()) / 1000;\n        refreshDelay = dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n        // setTimeout uses a 32 bit number to store the delay. Any number greater than it\n        // will cause event associated with setTimeout to trigger immediately\n        if (refreshDelay * 1000 > 0x7FFFFFFF) {\n            refreshDelay = 0x7FFFFFFF / 1000;\n        }\n        eventBus.trigger(Events.MANIFEST_UPDATED, {manifest: manifest});\n        logger.info('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\n\n        if (!isPaused) {\n            startManifestRefreshTimer();\n        }\n    }\n\n    function onRefreshTimer() {\n        if (isPaused && !mediaPlayerModel.getScheduleWhilePaused()) {\n            return;\n        }\n        if (isUpdating) {\n            startManifestRefreshTimer(mediaPlayerModel.getManifestUpdateRetryInterval());\n            return;\n        }\n        refreshManifest();\n    }\n\n    function onManifestLoaded(e) {\n        if (!e.error) {\n            update(e.manifest);\n        } else {\n            errHandler.manifestError(e.error.message, e.error.code);\n        }\n    }\n\n    function onPlaybackStarted (/*e*/) {\n        isPaused = false;\n        startManifestRefreshTimer();\n    }\n\n    function onPlaybackPaused(/*e*/) {\n        isPaused = true;\n        stopManifestRefreshTimer();\n    }\n\n    function onStreamsComposed(/*e*/) {\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\n        isUpdating = false;\n    }\n\n    instance = {\n        initialize: initialize,\n        setManifest: setManifest,\n        refreshManifest: refreshManifest,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\nexport default FactoryMaker.getClassFactory(ManifestUpdater);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport MetricsConstants from './constants/MetricsConstants';\nimport UTCTiming from '../dash/vo/UTCTiming';\nimport PlaybackController from './controllers/PlaybackController';\nimport StreamController from './controllers/StreamController';\nimport MediaController from './controllers/MediaController';\nimport ManifestLoader from './ManifestLoader';\nimport ErrorHandler from './utils/ErrorHandler';\nimport Capabilities from './utils/Capabilities';\nimport TextTracks from './text/TextTracks';\nimport RequestModifier from './utils/RequestModifier';\nimport TextController from './text/TextController';\nimport URIFragmentModel from './models/URIFragmentModel';\nimport ManifestModel from './models/ManifestModel';\nimport MediaPlayerModel from './models/MediaPlayerModel';\nimport MetricsModel from './models/MetricsModel';\nimport AbrController from './controllers/AbrController';\nimport VideoModel from './models/VideoModel';\nimport DOMStorage from './utils/DOMStorage';\nimport Debug from './../core/Debug';\nimport EventBus from './../core/EventBus';\nimport Events from './../core/events/Events';\nimport MediaPlayerEvents from './MediaPlayerEvents';\nimport FactoryMaker from '../core/FactoryMaker';\nimport {\n    getVersionString\n}\nfrom './../core/Version';\n\n//Dash\nimport DashAdapter from '../dash/DashAdapter';\nimport DashManifestModel from '../dash/models/DashManifestModel';\nimport DashMetrics from '../dash/DashMetrics';\nimport TimelineConverter from '../dash/utils/TimelineConverter';\nimport {\n    HTTPRequest\n} from './vo/metrics/HTTPRequest';\nimport BASE64 from '../../externals/base64';\nimport ISOBoxer from 'codem-isoboxer';\n\n/**\n * @module MediaPlayer\n * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.\n * It will allow you access to all the important dash.js properties/methods via the public API and all the\n * events to build a robust DASH media player.\n */\nfunction MediaPlayer() {\n\n    const STREAMING_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a source before calling this method';\n    const PLAYBACK_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a valid source and view before calling this method';\n    const ELEMENT_NOT_ATTACHED_ERROR = 'You must first call attachView() to set the video element before calling this method';\n    const SOURCE_NOT_ATTACHED_ERROR = 'You must first call attachSource() with a valid source before calling this method';\n    const MEDIA_PLAYER_NOT_INITIALIZED_ERROR = 'MediaPlayer not initialized!';\n    const MEDIA_PLAYER_BAD_ARGUMENT_ERROR = 'MediaPlayer Invalid Arguments!';\n    const PLAYBACK_CATCHUP_RATE_BAD_ARGUMENT_ERROR = 'Playback catchup rate invalid argument! Use a number from 1 to 1.2';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const debug = Debug(context).getInstance();\n\n    let instance,\n        logger,\n        source,\n        protectionData,\n        mediaPlayerInitialized,\n        streamingInitialized,\n        playbackInitialized,\n        autoPlay,\n        abrController,\n        timelineConverter,\n        mediaController,\n        protectionController,\n        metricsReportingController,\n        mssHandler,\n        adapter,\n        metricsModel,\n        mediaPlayerModel,\n        errHandler,\n        capabilities,\n        streamController,\n        playbackController,\n        dashMetrics,\n        dashManifestModel,\n        manifestModel,\n        videoModel,\n        textController,\n        domStorage;\n\n    /*\n    ---------------------------------------------------------------------------\n\n        INIT FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function setup() {\n        logger = debug.getLogger(instance);\n        mediaPlayerInitialized = false;\n        playbackInitialized = false;\n        streamingInitialized = false;\n        autoPlay = true;\n        protectionController = null;\n        protectionData = null;\n        adapter = null;\n        Events.extend(MediaPlayerEvents);\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        videoModel = VideoModel(context).getInstance();\n    }\n\n    /**\n     * Configure media player with customs controllers. Helpful for tests\n     *\n     * @param {object=} config controllers configuration\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n    }\n\n    /**\n     * Upon creating the MediaPlayer you must call initialize before you call anything else.\n     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}\n     * with all your extensions prior to calling initialize.\n     *\n     * ALL arguments are optional and there are individual methods to set each argument later on.\n     * The args in this method are just for convenience and should only be used for a simple player setup.\n     *\n     * @param {HTML5MediaElement=} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}\n     * @param {string=} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}\n     * @param {boolean=} AutoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function initialize(view, source, AutoPlay) {\n        if (!capabilities) {\n            capabilities = Capabilities(context).getInstance();\n        }\n        errHandler = ErrorHandler(context).getInstance();\n\n        if (!capabilities.supportsMediaSource()) {\n            errHandler.capabilityError('mediasource');\n            return;\n        }\n\n        if (mediaPlayerInitialized) return;\n        mediaPlayerInitialized = true;\n\n        // init some controllers and models\n        timelineConverter = TimelineConverter(context).getInstance();\n        if (!abrController) {\n            abrController = AbrController(context).getInstance();\n        }\n\n        if (!playbackController) {\n            playbackController = PlaybackController(context).getInstance();\n        }\n\n        if (!mediaController) {\n            mediaController = MediaController(context).getInstance();\n        }\n\n        adapter = DashAdapter(context).getInstance();\n        dashManifestModel = DashManifestModel(context).getInstance({\n            mediaController: mediaController,\n            timelineConverter: timelineConverter,\n            adapter: adapter\n        });\n        manifestModel = ManifestModel(context).getInstance();\n        dashMetrics = DashMetrics(context).getInstance({\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel\n        });\n        metricsModel = MetricsModel(context).getInstance();\n\n        textController = TextController(context).getInstance();\n        domStorage = DOMStorage(context).getInstance({\n            mediaPlayerModel: mediaPlayerModel\n        });\n\n        adapter.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n        metricsModel.setConfig({\n            adapter: adapter\n        });\n\n        restoreDefaultUTCTimingSources();\n        setAutoPlay(AutoPlay !== undefined ? AutoPlay : true);\n\n        if (view) {\n            attachView(view);\n        }\n\n        if (source) {\n            attachSource(source);\n        }\n\n        logger.info('[dash.js ' + getVersion() + '] ' + 'MediaPlayer has been initialized');\n    }\n\n    /**\n     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by\n     * calling attachSource with a new source file.\n     *\n     * Calling this method is all that is necessary to destroy a MediaPlayer instance.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function reset() {\n        attachSource(null);\n        attachView(null);\n        protectionData = null;\n        if (protectionController) {\n            protectionController.reset();\n            protectionController = null;\n        }\n        if (metricsReportingController) {\n            metricsReportingController.reset();\n            metricsReportingController = null;\n        }\n    }\n\n    /**\n     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.\n     *\n     * @returns {boolean} The current ready state of the MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isReady() {\n        return (!!source && !!videoModel.getElement());\n    }\n\n    /**\n     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function on(type, listener, scope) {\n        eventBus.on(type, listener, scope);\n    }\n\n    /**\n     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function off(type, listener, scope) {\n        eventBus.off(type, listener, scope);\n    }\n\n    /**\n     * Current version of Dash.js\n     * @returns {string} the current dash.js version string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVersion() {\n        return getVersionString();\n    }\n\n    /**\n     * Use this method to access the dash.js logging class.\n     *\n     * @returns {Debug}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDebug() {\n        return debug;\n    }\n\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PLAYBACK FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Causes the player to begin streaming the media as set by the {@link module:MediaPlayer#attachSource attachSource()}\n     * method in preparation for playing. It specifically does not require a view to be attached with {@link module:MediaPlayer#attachSource attachView()} to begin preloading.\n     * When a view is attached after preloading, the buffered data is transferred to the attached mediaSource buffers.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function preload() {\n        if (videoModel.getElement() || streamingInitialized) {\n            return false;\n        }\n        if (source) {\n            initializePlayback();\n        } else {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n    }\n\n    /**\n     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.\n     * This method will call play on the native Video Element.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function play() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (!autoPlay || (isPaused() && playbackInitialized)) {\n            playbackController.play();\n        }\n    }\n\n\n    /**\n     * This method will call pause on the native Video Element.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function pause() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        playbackController.pause();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the Video Element is paused.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isPaused() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isPaused();\n    }\n\n    /**\n     * Sets the currentTime property of the attached video element.  If it is a live stream with a\n     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\n     * @see {@link module:MediaPlayer#getDVRSeekOffset getDVRSeekOffset()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function seek(value) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        if (typeof value !== 'number' || isNaN(value)) {\n            throw MEDIA_PLAYER_BAD_ARGUMENT_ERROR;\n        }\n\n        let s = playbackController.getIsDynamic() ? getDVRSeekOffset(value) : value;\n        playbackController.seek(s);\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isSeeking() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isSeeking();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of dynamic.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isDynamic() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getIsDynamic();\n    }\n\n    /**\n     * Use this method to set the native Video Element's playback rate.\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setPlaybackRate(value) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        getVideoElement().playbackRate = value;\n    }\n\n    /**\n     * Returns the current playback rate.\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getPlaybackRate() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return getVideoElement().playbackRate;\n    }\n\n    /**\n     * Use this method to set the catch up rate, as a percentage, for low latency live streams. In low latency mode,\n     * when measured latency is higher than the target one ({@link module:MediaPlayer#setLiveDelay setLiveDelay()}),\n     * dash.js increases playback rate the percentage defined with this method until target is reached.\n     *\n     * Valid values for catch up rate are in range 0-20%. Set it to 0% to turn off live catch up feature.\n     *\n     * Note: Catch-up mechanism is only applied when playing low latency live streams.\n     *\n     * @param {number} value Percentage in which playback rate is increased when live catch up mechanism is activated.\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setLiveDelay setLiveDelay()}\n     * @default {number} 0.05\n     * @instance\n     */\n    function setCatchUpPlaybackRate(value) {\n        if (isNaN(value) || value < 0.0 || value > 0.20) {\n            throw PLAYBACK_CATCHUP_RATE_BAD_ARGUMENT_ERROR;\n        }\n        playbackController.setCatchUpPlaybackRate(value);\n    }\n\n    /**\n     * Returns the current catchup playback rate.\n     * @returns {number}\n     * @see {@link module:MediaPlayer#setCatchUpPlaybackRate setCatchUpPlaybackRate()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getCatchUpPlaybackRate() {\n        return playbackController.getCatchUpPlaybackRate();\n    }\n\n    /**\n     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMute(value) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        getVideoElement().muted = value;\n    }\n\n    /**\n     * A Boolean that determines whether audio is muted.\n     * @returns {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isMuted() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return getVideoElement().muted;\n    }\n\n    /**\n     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setVolume(value) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        getVideoElement().volume = value;\n    }\n\n    /**\n     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVolume() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return getVideoElement().volume;\n    }\n\n    /**\n     * The length of the buffer for a given media type, in seconds. Valid media\n     * types are \"video\", \"audio\" and \"fragmentedText\". If no type is passed\n     * in, then the minimum of video, audio and fragmentedText buffer length is\n     * returned. NaN is returned if an invalid type is requested, the\n     * presentation does not contain that type, or if no arguments are passed\n     * and the presentation does not include any adaption sets of valid media\n     * type.\n     *\n     * @param {string} type - the media type of the buffer\n     * @returns {number} The length of the buffer for the given media type, in\n     *  seconds, or NaN\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferLength(type) {\n        const types = [Constants.VIDEO, Constants.AUDIO, Constants.FRAGMENTED_TEXT];\n        if (!type) {\n            const buffer = types.map(\n                t => getTracksFor(t).length > 0 ? getDashMetrics().getCurrentBufferLevel(getMetricsFor(t)) : Number.MAX_VALUE\n            ).reduce(\n                (p, c) => Math.min(p, c)\n            );\n            return buffer === Number.MAX_VALUE ? NaN : buffer;\n        } else {\n            if (types.indexOf(type) !== -1) {\n                const buffer = getDashMetrics().getCurrentBufferLevel(getMetricsFor(type));\n                return buffer ? buffer : NaN;\n            } else {\n                logger.warn('getBufferLength requested for invalid type');\n                return NaN;\n            }\n        }\n    }\n\n    /**\n     * The timeShiftBufferLength (DVR Window), in seconds.\n     *\n     * @returns {number} The window of allowable play time behind the live point of a live stream.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRWindowSize() {\n        let metric = getDVRInfoMetric();\n        if (!metric) {\n            return 0;\n        }\n        return metric.manifestInfo.DVRWindowSize;\n    }\n\n    /**\n     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).\n     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method\n     * which will calculate this value for you and set the video element's currentTime property all in one simple call.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).\n     * @see {@link module:MediaPlayer#seek seek()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDVRSeekOffset(value) {\n        let metric = getDVRInfoMetric();\n        let liveDelay = playbackController.getLiveDelay();\n        if (!metric) {\n            return 0;\n        }\n\n        let val = metric.range.start + value;\n\n        if (val > (metric.range.end - liveDelay)) {\n            val = metric.range.end - liveDelay;\n        }\n\n        return val;\n    }\n\n    /**\n     * Current time of the playhead, in seconds.\n     *\n     * If called with no arguments then the returned time value is time elapsed since the start point of the first stream, or if it is a live stream, then the time will be based on the return value of the {@link module:MediaPlayer#duration duration()} method.\n     * However if a stream ID is supplied then time is relative to the start of that stream, or is null if there is no such stream id in the manifest.\n     *\n     * @param {string} streamId - The ID of a stream that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first stream.\n     * @returns {number} The current playhead time of the media, or null.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function time(streamId) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let t = getVideoElement().currentTime;\n\n        if (streamId !== undefined) {\n            t = streamController.getTimeRelativeToStreamId(t, streamId);\n\n        } else if (playbackController.getIsDynamic()) {\n            let metric = getDVRInfoMetric();\n            t = (metric === null) ? 0 : duration() - (metric.range.end - metric.time);\n        }\n\n        return t;\n    }\n\n    /**\n     * Duration of the media's playback, in seconds.\n     *\n     * @returns {number} The current duration of the media.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function duration() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let d = getVideoElement().duration;\n\n        if (playbackController.getIsDynamic()) {\n\n            let metric = getDVRInfoMetric();\n            let range;\n\n            if (!metric) {\n                return 0;\n            }\n\n            range = metric.range.end - metric.range.start;\n            d = range < metric.manifestInfo.DVRWindowSize ? range : metric.manifestInfo.DVRWindowSize;\n        }\n        return d;\n    }\n\n    /**\n     * Use this method to get the current playhead time as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams. If called before play() has begun, it will return a value of NaN.\n     *\n     * @returns {number} The current playhead time as UTC timestamp.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function timeAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (time() < 0) {\n            return NaN;\n        }\n        return getAsUTC(time());\n    }\n\n    /**\n     * Use this method to get the current duration as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams.\n     *\n     * @returns {number} The current duration as UTC timestamp.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function durationAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return getAsUTC(duration());\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        AUTO BITRATE\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum bitrate allowed.\n     * If you set this property to a value lower than that currently playing, the switching engine will switch down to\n     * satisfy this requirement. If you set it to a value that is lower than the lowest bitrate, it will still play\n     * that lowest bitrate.\n     *\n     * You can set or remove this bitrate cap at anytime before or during playback.  To clear this setting you must use the API\n     * and set the value param to NaN.\n     *\n     * This feature is typically used to reserve higher bitrates for playback only when the player is in large or full-screen format.\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {number} value - Value in kbps representing the maximum bitrate allowed.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMaxAllowedBitrateFor(type, value) {\n        abrController.setMaxAllowedBitrateFor(type, value);\n    }\n\n    /**\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the minimum bitrate allowed.\n     * If you set this property to a value higher than that currently playing, the switching engine will switch up to\n     * satisfy this requirement. If you set it to a value that is lower than the lowest bitrate, it will still play\n     * that lowest bitrate.\n     *\n     * You can set or remove this bitrate limit at anytime before or during playback. To clear this setting you must use the API\n     * and set the value param to NaN.\n     *\n     * This feature is used to force higher quality playback.\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {number} value - Value in kbps representing the minimum bitrate allowed.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMinAllowedBitrateFor(type, value) {\n        abrController.setMinAllowedBitrateFor(type, value);\n    }\n\n    /**\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setMaxAllowedBitrateFor setMaxAllowedBitrateFor()}\n     * @instance\n     */\n    function getMaxAllowedBitrateFor(type) {\n        return abrController.getMaxAllowedBitrateFor(type);\n    }\n\n    /**\n     * Gets the top quality BitrateInfo checking portal limit and max allowed.\n     *\n     * It calls getTopQualityIndexFor internally\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @memberof module:MediaPlayer\n     * @returns {BitrateInfo | null}\n     * @instance\n     */\n    function getTopBitrateInfoFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        return abrController.getTopBitrateInfoFor(type);\n    }\n\n    /**\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setMinAllowedBitrateFor setMinAllowedBitrateFor()}\n     * @instance\n     */\n    function getMinAllowedBitrateFor(type) {\n        return abrController.getMinAllowedBitrateFor(type);\n    }\n\n    /**\n     * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed,\n     * as a proportion of the size of the representation set.\n     *\n     * You can set or remove this cap at anytime before or during playback. To clear this setting you must use the API\n     * and set the value param to NaN.\n     *\n     * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation,\n     * i.e. the lowest value from executing these rules is used.\n     *\n     * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.\n     *\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @param {number} value - number between 0 and 1, where 1 is allow all representations, and 0 is allow only the lowest.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMaxAllowedRepresentationRatioFor(type, value) {\n        abrController.setMaxAllowedRepresentationRatioFor(type, value);\n    }\n\n    /**\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @returns {number} The current representation ratio cap.\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setMaxAllowedRepresentationRatioFor setMaxAllowedRepresentationRatioFor()}\n     * @instance\n     */\n    function getMaxAllowedRepresentationRatioFor(type) {\n        return abrController.getMaxAllowedRepresentationRatioFor(type);\n    }\n\n    /**\n     * Gets the current download quality for media type video, audio or images. For video and audio types the ABR\n     * rules update this value before every new download unless setAutoSwitchQualityFor(type, false) is called. For 'image'\n     * type, thumbnails, there is no ABR algorithm and quality is set manually.\n     *\n     * @param {string} type - 'video', 'audio' or 'image' (thumbnails)\n     * @returns {number} the quality index, 0 corresponding to the lowest bitrate\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}\n     * @see {@link module:MediaPlayer#setQualityFor setQualityFor()}\n     * @instance\n     */\n    function getQualityFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        if (type === Constants.IMAGE) {\n            const activeStream = getActiveStream();\n            if (!activeStream) {\n                return -1;\n            }\n            const thumbnailController = activeStream.getThumbnailController();\n            if (!thumbnailController) {\n                return -1;\n            }\n            return thumbnailController.getCurrentTrackIndex();\n        }\n        return abrController.getQualityFor(type, streamController.getActiveStreamInfo());\n    }\n\n    /**\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically selecting it.\n     * This value will be overwritten by the ABR rules unless setAutoSwitchQualityFor(type, false) is called.\n     *\n     * @param {string} type - 'video', 'audio' or 'image'\n     * @param {number} value - the quality index, 0 corresponding to the lowest bitrate\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}\n     * @see {@link module:MediaPlayer#getQualityFor getQualityFor()}\n     * @instance\n     */\n    function setQualityFor(type, value) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        if (type === Constants.IMAGE) {\n            const activeStream = getActiveStream();\n            if (!activeStream) {\n                return;\n            }\n            const thumbnailController = activeStream.getThumbnailController();\n            if (thumbnailController) {\n                thumbnailController.setTrackByIndex(value);\n            }\n        }\n        abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), value);\n    }\n\n    /**\n     * Update the video element size variables\n     * Should be called on window resize (or any other time player is resized). Fullscreen does trigger a window resize event.\n     *\n     * Once windowResizeEventCalled = true, abrController.checkPortalSize() will use element size variables rather than querying clientWidth every time.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function updatePortalSize() {\n        abrController.setElementSize();\n        abrController.setWindowResizeEventCalled(true);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getLimitBitrateByPortal() {\n        return abrController.getLimitBitrateByPortal();\n    }\n\n    /**\n     * Sets whether to limit the representation used based on the size of the playback area\n     *\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setLimitBitrateByPortal(value) {\n        abrController.setLimitBitrateByPortal(value);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getUsePixelRatioInLimitBitrateByPortal() {\n        return abrController.getUsePixelRatioInLimitBitrateByPortal();\n    }\n\n    /**\n     * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.\n     * Useful on, for example, retina displays.\n     *\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     * @default {boolean} false\n     */\n    function setUsePixelRatioInLimitBitrateByPortal(value) {\n        abrController.setUsePixelRatioInLimitBitrateByPortal(value);\n    }\n\n    /**\n     * Use this method to explicitly set the starting bitrate for audio | video\n     *\n     * @param {string} type\n     * @param {number} value - A value of the initial bitrate, kbps\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialBitrateFor(type, value) {\n        abrController.setInitialBitrateFor(type, value);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialBitrateFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR; //abrController.getInitialBitrateFor is overloaded with ratioDict logic that needs manifest force it to not be callable pre play.\n        }\n        return abrController.getInitialBitrateFor(type);\n    }\n\n    /**\n     * @param {string} type\n     * @param {number} value - A value of the initial Representation Ratio\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialRepresentationRatioFor(type, value) {\n        abrController.setInitialRepresentationRatioFor(type, value);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial Representation Ratio\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialRepresentationRatioFor(type) {\n        return abrController.getInitialRepresentationRatioFor(type);\n    }\n\n    /**\n     * @param {string} type - 'audio' | 'video'\n     * @returns {boolean} Current state of adaptive bitrate switching\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoSwitchQualityFor(type) {\n        return abrController.getAutoSwitchBitrateFor(type);\n    }\n\n    /**\n     * Set to false to switch off adaptive bitrate switching.\n     *\n     * @param {string} type - 'audio' | 'video'\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setAutoSwitchQualityFor(type, value) {\n        abrController.setAutoSwitchBitrateFor(type, value);\n    }\n\n    /**\n     * Get the value of useDeadTimeLatency in AbrController. @see setUseDeadTimeLatencyForAbr\n     *\n     * @returns {boolean}\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getUseDeadTimeLatencyForAbr() {\n        return abrController.getUseDeadTimeLatency();\n    }\n\n    /**\n     * Set the value of useDeadTimeLatency in AbrController. If true, only the download\n     * portion will be considered part of the download bitrate and latency will be\n     * regarded as static. If false, the reciprocal of the whole transfer time will be used.\n     * Defaults to true.\n     *\n     * @param {boolean=} useDeadTimeLatency - True or false flag.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setUseDeadTimeLatencyForAbr(useDeadTimeLatency) {\n        abrController.setUseDeadTimeLatency(useDeadTimeLatency);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        MEDIA PLAYER CONFIGURATION\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>\n     *\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @instance\n     *\n     */\n    function setAutoPlay(value) {\n        autoPlay = value;\n    }\n\n    /**\n     * @returns {boolean} The current autoPlay state.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * <p>Changing this value will lower or increase live stream latency.  The detected segment duration will be multiplied by this value\n     * to define a time in seconds to delay a live stream from the live edge.</p>\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\n     *\n     * @param {number} value - Represents how many segment durations to delay the live stream.\n     * @default 4\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\n     * @instance\n     */\n    function setLiveDelayFragmentCount(value) {\n        mediaPlayerModel.setLiveDelayFragmentCount(value);\n    }\n\n    /**\n     * <p>Equivalent in seconds of setLiveDelayFragmentCount</p>\n     * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>\n     * <p>This value should be less than the manifest duration by a couple of segment durations to avoid playback issues</p>\n     * <p>If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info</p>\n     *\n     * @param {number} value - Represents how many seconds to delay the live stream.\n     * @default undefined\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#useSuggestedPresentationDelay useSuggestedPresentationDelay()}\n     * @instance\n     */\n    function setLiveDelay(value) {\n        mediaPlayerModel.setLiveDelay(value);\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setLiveDelay setLiveDelay()}\n     * @instance\n     * @returns {number|undefined} Current live stream delay in seconds when previously set, or `undefined`\n     */\n    function getLiveDelay() {\n        return mediaPlayerModel.getLiveDelay();\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     * @returns {number|NaN} Current live stream latency in seconds. It is the difference between current time and time position at the playback head.\n     */\n    function getCurrentLiveLatency() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!playbackInitialized) {\n            return NaN;\n        }\n\n        return playbackController.getCurrentLiveLatency();\n    }\n\n    /**\n     * <p>Set to true if you would like to override the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.</p>\n     * @param {boolean} value\n     * @default false\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#setLiveDelayFragmentCount setLiveDelayFragmentCount()}\n     * @instance\n     */\n    function useSuggestedPresentationDelay(value) {\n        mediaPlayerModel.setUseSuggestedPresentationDelay(value);\n    }\n\n    /**\n     * Set to false if you would like to disable the last known bit rate from being stored during playback and used\n     * to set the initial bit rate for subsequent playback within the expiration window.\n     *\n     * The default expiration is one hour, defined in milliseconds. If expired, the default initial bit rate (closest to 1000 kbps) will be used\n     * for that session and a new bit rate will be stored during that session.\n     *\n     * @param {boolean} enable - Will toggle if feature is enabled. True to enable, False to disable.\n     * @param {number=} ttl - (Optional) A value defined in milliseconds representing how long to cache the bit rate for. Time to live.\n     * @default enable = True, ttl = 360000 (1 hour)\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function enableLastBitrateCaching(enable, ttl) {\n        mediaPlayerModel.setLastBitrateCachingInfo(enable, ttl);\n    }\n\n    /**\n     * Set to false if you would like to disable the last known lang for audio (or camera angle for video) from being stored during playback and used\n     * to set the initial settings for subsequent playback within the expiration window.\n     *\n     * The default expiration is one hour, defined in milliseconds. If expired, the default settings will be used\n     * for that session and a new settings will be stored during that session.\n     *\n     * @param {boolean} enable - Will toggle if feature is enabled. True to enable, False to disable.\n     * @param {number=} [ttl] - (Optional) A value defined in milliseconds representing how long to cache the settings for. Time to live.\n     * @default enable = True, ttl = 360000 (1 hour)\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function enableLastMediaSettingsCaching(enable, ttl) {\n        mediaPlayerModel.setLastMediaSettingsCachingInfo(enable, ttl);\n    }\n\n    /**\n     * Set to true if you would like dash.js to keep downloading fragments in the background\n     * when the video element is paused.\n     *\n     * @default true\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setScheduleWhilePaused(value) {\n        mediaPlayerModel.setScheduleWhilePaused(value);\n    }\n\n    /**\n     * Returns a boolean of the current state of ScheduleWhilePaused.\n     * @returns {boolean}\n     * @see {@link module:MediaPlayer#setScheduleWhilePaused setScheduleWhilePaused()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getScheduleWhilePaused() {\n        return mediaPlayerModel.getScheduleWhilePaused();\n    }\n\n    /**\n     * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment\n     * at the end of the current buffer range it is requested and appended closer to the current time\n     * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).\n     *\n     * Note, When ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the\n     * higher quality media for as long as possible.\n     *\n     * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather\n     * just append at the end.  1. When the buffer level is less than one fragment duration 2.  The client\n     * is in an Abandonment State due to recent fragment abandonment event.\n     *\n     * Known issues:\n     * 1. In IE11 with auto switching off, if a user switches to a quality they can not download in time the\n     * fragment may be appended in the same range as the playhead or even in the past, in IE11 it may cause a stutter\n     * or stall in playback.\n     *\n     *\n     * @param {boolean} value\n     * @default {boolean} false\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFastSwitchEnabled(value) { //TODO we need to look at track switches for adaptation sets.  If always replace it works much like this but clears buffer. Maybe too many ways to do same thing.\n        mediaPlayerModel.setFastSwitchEnabled(value);\n    }\n\n    /**\n     * Enabled by default. Will return the current state of Fast Switch.\n     * @return {boolean} Returns true if FastSwitch ABR is enabled.\n     * @see {@link module:MediaPlayer#setFastSwitchEnabled setFastSwitchEnabled()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getFastSwitchEnabled() {\n        return mediaPlayerModel.getFastSwitchEnabled();\n    }\n\n    /**\n     * Sets the ABR strategy. Valid strategies are \"abrDynamic\", \"abrBola\" and \"abrThroughput\".\n     * The ABR strategy can also be changed during a streaming session.\n     * The call has no effect if an invalid method is passed.\n     *\n     * The BOLA strategy chooses bitrate based on current buffer level, with higher bitrates for higher buffer levels.\n     * The Throughput strategy chooses bitrate based on the recent throughput history.\n     * The Dynamic strategy switches smoothly between BOLA and Throughput in real time, playing to the strengths of both.\n     *\n     * @param {string} value\n     * @default \"abrDynamic\"\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setABRStrategy(value) {\n        if (value === Constants.ABR_STRATEGY_DYNAMIC || value === Constants.ABR_STRATEGY_BOLA || value === Constants.ABR_STRATEGY_THROUGHPUT) {\n            mediaPlayerModel.setABRStrategy(value);\n        } else {\n            logger.warn('Ignoring setABRStrategy(' + value + ') - unknown value.');\n        }\n    }\n\n    /**\n     * Returns the current ABR strategy being used.\n     * @return {string} \"abrDynamic\", \"abrBola\" or \"abrThroughput\"\n     * @see {@link module:MediaPlayer#setABRStrategy setABRStrategy()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getABRStrategy() {\n        return mediaPlayerModel.getABRStrategy();\n    }\n\n    /**\n     * Enable/disable builtin dashjs ABR rules\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function useDefaultABRRules(value) {\n        mediaPlayerModel.setUseDefaultABRRules(value);\n    }\n\n    /**\n     * Add a custom ABR Rule\n     * Rule will be apply on next stream if a stream is being played\n     *\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\n     * @param {object} rule - the rule object instance\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function addABRCustomRule(type, rulename, rule) {\n        mediaPlayerModel.addABRCustomRule(type, rulename, rule);\n    }\n\n    /**\n     * Remove a custom ABR Rule\n     *\n     * @param {string} rulename - name of the rule to be removed\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeABRCustomRule(rulename) {\n        mediaPlayerModel.removeABRCustomRule(rulename);\n    }\n\n    /**\n     * Remove all custom rules\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeAllABRCustomRule() {\n        mediaPlayerModel.removeAllABRCustomRule();\n    }\n\n    /**\n     * Sets the moving average method used for smoothing throughput estimates. Valid methods are\n     * \"slidingWindow\" and \"ewma\". The call has no effect if an invalid method is passed.\n     *\n     * The sliding window moving average method computes the average throughput using the last four segments downloaded.\n     * If the stream is live (as opposed to VOD), then only the last three segments are used.\n     * If wide variations in throughput are detected, the number of segments can be dynamically increased to avoid oscillations.\n     *\n     * The exponentially weighted moving average (EWMA) method computes the average using exponential smoothing.\n     * Two separate estimates are maintained, a fast one with a three-second half life and a slow one with an eight-second half life.\n     * The throughput estimate at any time is the minimum of the fast and slow estimates.\n     * This allows a fast reaction to a bandwidth drop and prevents oscillations on bandwidth spikes.\n     *\n     * @param {string} value\n     * @default {string} 'slidingWindow'\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setMovingAverageMethod(value) {\n        if (value === Constants.MOVING_AVERAGE_SLIDING_WINDOW || value === Constants.MOVING_AVERAGE_EWMA) {\n            mediaPlayerModel.setMovingAverageMethod(value);\n        } else {\n            logger.warn('Warning: Ignoring setMovingAverageMethod(' + value + ') - unknown value.');\n        }\n    }\n\n    /**\n     * Return the current moving average method used for smoothing throughput estimates.\n     * @return {string} Returns \"slidingWindow\" or \"ewma\".\n     * @see {@link module:MediaPlayer#setMovingAverageMethod setMovingAverageMethod()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getMovingAverageMethod() {\n        return mediaPlayerModel.getMovingAverageMethod();\n    }\n\n\n    /**\n     * Returns if low latency mode is enabled. Disabled by default.\n     * @return {boolean} true - if enabled\n     * @see {@link module:MediaPlayer#setLowLatencyEnabled setLowLatencyEnabled()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getLowLatencyEnabled() {\n        return mediaPlayerModel.getLowLatencyEnabled();\n    }\n\n    /**\n     * Enables low latency mode for dynamic streams. If not specified, liveDelay is set to 3s of buffer.\n     * Browser compatibility (Check row 'ReadableStream response body'): https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setLowLatencyEnabled(value) {\n        return mediaPlayerModel.setLowLatencyEnabled(value);\n    }\n\n    /**\n     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.\n     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>\n     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.\n     * This will allow the date header on the manifest to be used instead of a time server</p>\n     * @param {string} schemeIdUri - <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2014</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2014</li>\n     * <li>urn:mpeg:dash:utc:direct:2014</li>\n     * </ul>\n     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use\n     * 2012 in the URI, rather than 2014. support these for now.</p>\n     * <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2012</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2012</li>\n     * <li>urn:mpeg:dash:utc:direct:2012</li>\n     * </ul>\n     * @param {string} value - Path to a time source.\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com</li>\n     * </ul>\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}\n     * @instance\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n        let vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        mediaPlayerModel.getUTCTimingSources().push(vo);\n    }\n\n    /**\n     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the\n     * entry to be removed from the array</p>\n     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}\n     * @instance\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        let UTCTimingSources = mediaPlayerModel.getUTCTimingSources();\n        UTCTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                UTCTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    /**\n     * <p>Allows you to clear the stored array of time sources.</p>\n     * <p>Example use: If you have exposed the Date header, calling this method\n     * will allow the date header on the manifest to be used instead of the time server.</p>\n     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back\n     * to using a binary search to discover the live edge</p>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}\n     * @instance\n     */\n    function clearDefaultUTCTimingSources() {\n        mediaPlayerModel.setUTCTimingSources([]);\n    }\n\n    /**\n     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>\n     *\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com</li>\n     * </ul>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function restoreDefaultUTCTimingSources() {\n        addUTCTimingSource(MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.scheme, MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value);\n    }\n\n\n    /**\n     * <p>Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection. The\n     * use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\n     * {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()} </p>\n     *\n     * @param {boolean} value - true to enable\n     * @default {boolean} True\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function enableManifestDateHeaderTimeSource(value) {\n        mediaPlayerModel.setUseManifestDateHeaderTimeSource(value);\n    }\n\n    /**\n     * This value influences the buffer pruning logic.\n     * Allows you to modify the buffer that is kept in source buffer in seconds.\n     * <pre>0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|</pre>\n     *\n     * @default 20 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferToKeep(value) {\n        mediaPlayerModel.setBufferToKeep(value);\n    }\n\n    /**\n     * This value influences the buffer pruning logic.\n     * Allows you to modify the buffer ahead of current time position that is kept in source buffer in seconds.\n     * <pre>0|--------|currentTime|-----bufferAheadToKeep----|----bufferToPrune-----------|end|</pre>\n     *\n     * @default 80 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferAheadToKeep(value) {\n        mediaPlayerModel.setBufferAheadToKeep(value);\n    }\n\n    /**\n     * This value influences the buffer pruning logic.\n     * Allows you to modify the interval of pruning buffer in seconds.\n     *\n     * @default 10 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferPruningInterval(value) {\n        mediaPlayerModel.setBufferPruningInterval(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\n     *\n     * When the time is set higher than the default you will have to wait longer\n     * to see automatic bitrate switches but will have a larger buffer which\n     * will increase stability.\n     *\n     * Note: The value set for Stable Buffer Time is not considered when Low Latency Mode is enabled.\n     * When in Low Latency mode dash.js takes ownership of Stable Buffer Time value to minimize latency\n     * that comes from buffer filling process.\n     *\n     * @default 12 seconds.\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setStableBufferTime(value) {\n        mediaPlayerModel.setStableBufferTime(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).\n     *\n     * When the time is set higher than the default you will have to wait longer\n     * to see automatic bitrate switches but will have a larger buffer which\n     * will increase stability.\n     *\n     * @default 12 seconds.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getStableBufferTime() {\n        return mediaPlayerModel.getStableBufferTime();\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality.\n     * If there are multiple bitrates in your adaptation, and the media is playing at the highest\n     * bitrate, then we try to build a larger buffer at the top quality to increase stability\n     * and to maintain media quality.\n     *\n     * @default 30 seconds.\n     * @param {int} value\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality.\n     * If there are multiple bitrates in your adaptation, and the media is playing at the highest\n     * bitrate, then we try to build a larger buffer at the top quality to increase stability\n     * and to maintain media quality.\n     *\n     * @default 30 seconds.\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferTimeAtTopQuality(value) {\n        mediaPlayerModel.setBufferTimeAtTopQuality(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality.\n     * If there are multiple bitrates in your adaptation, and the media is playing at the highest\n     * bitrate, then we try to build a larger buffer at the top quality to increase stability\n     * and to maintain media quality.\n     *\n     * @default 30 seconds.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferTimeAtTopQuality() {\n        return mediaPlayerModel.getBufferTimeAtTopQuality();\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality for long form content.\n     *\n     * @default 60 seconds.\n     * @see {@link module:MediaPlayer#setLongFormContentDurationThreshold setLongFormContentDurationThreshold()}\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQuality setBufferTimeAtTopQuality()}\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBufferTimeAtTopQualityLongForm(value) {\n        mediaPlayerModel.setBufferTimeAtTopQualityLongForm(value);\n    }\n\n    /**\n     * The time that the internal buffer target will be set to once playing the top quality for long form content.\n     *\n     * @default 60 seconds.\n     * @see {@link module:MediaPlayer#setLongFormContentDurationThreshold setLongFormContentDurationThreshold()}\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQuality setBufferTimeAtTopQuality()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferTimeAtTopQualityLongForm() {\n        return mediaPlayerModel.getBufferTimeAtTopQualityLongForm();\n    }\n\n    /**\n     * The threshold which defines if the media is considered long form content.\n     * This will directly affect the buffer targets when playing back at the top quality.\n     *\n     * @see {@link module:MediaPlayer#setBufferTimeAtTopQualityLongForm setBufferTimeAtTopQualityLongForm()}\n     * @default 600 seconds (10 minutes).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setLongFormContentDurationThreshold(value) {\n        mediaPlayerModel.setLongFormContentDurationThreshold(value);\n    }\n\n    /**\n     * The overlap tolerance time, at both the head and the tail of segments, considered when doing time to segment conversions.\n     *\n     * This is used when calculating which of the loaded segments of a representation corresponds with a given time position.\n     * Its value is never used for calculating the segment index in seeking operations in which it assumes overlap time threshold is zero.\n     *\n     * <pre>\n     * |-o-|--- segment X ----|-o-|\n     *                        |-o-|---- segment X+1 -----|-o-|\n     *                                                   |-o-|---- segment X+2 -----|-o-|\n     * </pre>\n     * @default 0.05 seconds.\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n    */\n    function setSegmentOverlapToleranceTime(value) {\n        mediaPlayerModel.setSegmentOverlapToleranceTime(value);\n    }\n\n    /**\n     * For a given media type, the threshold which defines if the response to a fragment\n     * request is coming from browser cache or not.\n     * Valid media types are \"video\", \"audio\"\n     *\n     * @default 50 milliseconds for video fragment requests; 5 milliseconds for audio fragment requests.\n     * @param {string} type 'video' or 'audio' are the type options.\n     * @param {number} value Threshold value in milliseconds.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setCacheLoadThresholdForType(type, value) {\n        mediaPlayerModel.setCacheLoadThresholdForType(type, value);\n    }\n\n    /**\n     * A percentage between 0.0 and 1 to reduce the measured throughput calculations.\n     * The default is 0.9. The lower the value the more conservative and restricted the\n     * measured throughput calculations will be. please use carefully. This will directly\n     * affect the ABR logic in dash.js\n     *\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setBandwidthSafetyFactor(value) {\n        mediaPlayerModel.setBandwidthSafetyFactor(value);\n    }\n\n    /**\n     * Returns the number of the current BandwidthSafetyFactor\n     *\n     * @return {number} value\n     * @see {@link module:MediaPlayer#setBandwidthSafetyFactor setBandwidthSafetyFactor()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBandwidthSafetyFactor() {\n        return mediaPlayerModel.getBandwidthSafetyFactor();\n    }\n\n    /**\n     * Returns the average throughput computed in the ABR logic\n     *\n     * @param {string} type\n     * @return {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAverageThroughput(type) {\n        const throughputHistory = abrController.getThroughputHistory();\n        return throughputHistory ? throughputHistory.getAverageThroughput(type) : 0;\n    }\n\n    /**\n     * A timeout value in seconds, which during the ABRController will block switch-up events.\n     * This will only take effect after an abandoned fragment event occurs.\n     *\n     * @default 10 seconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setAbandonLoadTimeout(value) {\n        mediaPlayerModel.setAbandonLoadTimeout(value);\n    }\n\n    /**\n     * Total number of retry attempts that will occur on a fragment load before it fails.\n     * Increase this value to a maximum in order to achieve an automatic playback resume\n     * in case of completely lost internet connection.\n     *\n     * Note: This parameter is not taken into account when Low Latency Mode is enabled. For Low Latency\n     * Playback dash.js takes control and sets a number of retry attempts that ensures playback stability.\n     *\n     * @default 3\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFragmentLoaderRetryAttempts(value) {\n        mediaPlayerModel.setFragmentRetryAttempts(value);\n    }\n\n    /**\n     * Time in milliseconds of which to reload a failed fragment load attempt.\n     *\n     * @default 1000 milliseconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setFragmentLoaderRetryInterval(value) {\n        mediaPlayerModel.setFragmentRetryInterval(value);\n    }\n\n    /**\n     * Total number of retry attempts that will occur on a manifest load before it fails.\n     *\n     * @default 4\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setManifestLoaderRetryAttempts(value) {\n        mediaPlayerModel.setManifestRetryAttempts(value);\n    }\n\n    /**\n     * Time in milliseconds of which to reload a failed manifest load attempt.\n     *\n     * @default 1000 milliseconds\n     * @param {int} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setManifestLoaderRetryInterval(value) {\n        mediaPlayerModel.setManifestRetryInterval(value);\n    }\n\n    /**\n     * Sets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @default false\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setXHRWithCredentialsForType(type, value) {\n        mediaPlayerModel.setXHRWithCredentialsForType(type, value);\n    }\n\n    /**\n     * Gets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getXHRWithCredentialsForType(type) {\n        return mediaPlayerModel.getXHRWithCredentialsForType(type);\n    }\n\n    /**\n     * Sets whether player should jump small gaps (discontinuities) in the buffer.\n     *\n     * @param {boolean} value\n     * @default false\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function setJumpGaps(value) {\n        mediaPlayerModel.setJumpGaps(value);\n    }\n\n    /**\n     * Gets current status of jump gaps feature.\n     * @returns {boolean} The current jump gaps state.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getJumpGaps() {\n        return mediaPlayerModel.getJumpGaps();\n    }\n\n    /**\n     * Time in seconds for a gap to be considered small.\n     *\n     * @param {boolean} value\n     * @default 0.8\n     * @memberof module:MediaPlayer\n     * @instance\n     *\n     */\n    function setSmallGapLimit(value) {\n        mediaPlayerModel.setSmallGapLimit(value);\n    }\n\n    /**\n     * Time in seconds for a gap to be considered small.\n     * @returns {boolean} Current small gap limit\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSmallGapLimit() {\n        return mediaPlayerModel.getSmallGapLimit();\n    }\n\n    /**\n     * For live streams, set the interval-frequency in milliseconds at which\n     * dash.js will check if the current manifest is still processed before\n     * downloading the next manifest once the minimumUpdatePeriod time has\n     * expired.\n     * @param {int} value\n     * @default 100\n     * @memberof module:MediaPlayer\n     * @instance\n     * @see {@link module:MediaPlayer#getManifestUpdateRetryInterval getManifestUpdateRetryInterval()}\n     *\n     */\n    function setManifestUpdateRetryInterval(value) {\n        mediaPlayerModel.setManifestUpdateRetryInterval(value);\n    }\n\n    /**\n     * For live streams, get the interval-frequency in milliseconds at which\n     * dash.js will check if the current manifest is still processed before\n     * downloading the next manifest once the minimumUpdatePeriod time has\n     * expired.\n     * @returns {int} Current retry delay for manifest update\n     * @memberof module:MediaPlayer\n     * @instance\n     * @see {@link module:MediaPlayer#setManifestUpdateRetryInterval setManifestUpdateRetryInterval()}\n     */\n    function getManifestUpdateRetryInterval() {\n        return mediaPlayerModel.getManifestUpdateRetryInterval();\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        METRICS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics\n     * stored in dash.js\n     *\n     * @see {@link module:DashMetrics}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashMetrics() {\n        return dashMetrics;\n    }\n\n    /**\n     *\n     * @param {string} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getMetricsFor(type) {\n        return metricsModel.getReadOnlyMetricsFor(type);\n    }\n    /*\n    ---------------------------------------------------------------------------\n\n        TEXT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Set default language for text. If default language is not one of text tracks, dash will choose the first one.\n     *\n     * @param {string} lang - default language\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextDefaultLanguage(lang) {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        textController.setTextDefaultLanguage(lang);\n    }\n\n    /**\n     * Get default language for text.\n     *\n     * @return {string} the default language if it has been set using setTextDefaultLanguage\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTextDefaultLanguage() {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        return textController.getTextDefaultLanguage();\n    }\n\n    /**\n     * Set enabled default state.\n     * This is used to enable/disable text when a file is loaded.\n     * During playback, use enableText to enable text for the file\n     *\n     * @param {boolean} enable - true to enable text, false otherwise\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextDefaultEnabled(enable) {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        textController.setTextDefaultEnabled(enable);\n    }\n\n    /**\n     * Get enabled default state.\n     *\n     * @return {boolean}  default enable state\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTextDefaultEnabled() {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        return textController.getTextDefaultEnabled();\n    }\n\n    /**\n     * Enable/disable text\n     * When enabling text, dash will choose the previous selected text track\n     *\n     * @param {boolean} enable - true to enable text, false otherwise (same as setTextTrack(-1))\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableText(enable) {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        textController.enableText(enable);\n    }\n\n\n    /**\n     * Enable/disable text\n     * When enabling dash will keep downloading and process fragmented text tracks even if all tracks are in mode \"hidden\"\n     *\n     * @param {boolean} enable - true to enable text streaming even if all text tracks are hidden.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableForcedTextStreaming(enable) {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        textController.enableForcedTextStreaming(enable);\n    }\n\n\n\n    /**\n     * Return if text is enabled\n     *\n     * @return {boolean} return true if text is enabled, false otherwise\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isTextEnabled() {\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        return textController.isTextEnabled();\n    }\n\n    /**\n     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to\n     * set the track mode on the video object to switch a track when using this method.\n     * @param {number} idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.\n     * @see {@link MediaPlayerEvents#event:TEXT_TRACK_ADDED dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextTrack(idx) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        if (textController === undefined) {\n            textController = TextController(context).getInstance();\n        }\n\n        textController.setTextTrack(idx);\n    }\n\n    function getCurrentTextTrackIndex() {\n        let idx = NaN;\n        if (textController) {\n            idx = textController.getCurrentTrackIdx();\n        }\n        return idx;\n    }\n\n    /**\n     * This method serves to control captions z-index value. If 'true' is passed, the captions will have the highest z-index and be\n     * displayed on top of other html elements. Default value is 'false' (z-index is not set).\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function displayCaptionsOnTop(value) {\n        let textTracks = TextTracks(context).getInstance();\n        textTracks.setConfig({\n            videoModel: videoModel\n        });\n        textTracks.initialize();\n        textTracks.displayCConTop(value);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        VIDEO ELEMENT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns instance of Video Element that was attached by calling attachView()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVideoElement() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return videoModel.getElement();\n    }\n\n    /**\n     * Returns instance of Video Container that was attached by calling attachVideoContainer()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVideoContainer() {\n        return videoModel ? videoModel.getVideoContainer() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 element that wraps the video element.\n     *\n     * @param {HTMLElement} container - The HTML5 element containing the video element.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachVideoContainer(container) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setVideoContainer(container);\n    }\n\n    /**\n     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.\n     *\n     * @param {Object} element - An HTMLMediaElement that has already been defined in the DOM (or equivalent stub).\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachView(element) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        videoModel.setElement(element);\n\n        if (element) {\n            detectProtection();\n            detectMetricsReporting();\n            detectMss();\n\n            if (streamController) {\n                streamController.switchToVideoElement();\n            }\n        }\n\n        if (playbackInitialized) { //Reset if we have been playing before, so this is a new element.\n            resetPlaybackControllers();\n        }\n\n        initializePlayback();\n    }\n\n    /**\n     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTTMLRenderingDiv() {\n        return videoModel ? videoModel.getTTMLRenderingDiv() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.\n     *\n     * @param {HTMLDivElement} div - An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachTTMLRenderingDiv(div) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setTTMLRenderingDiv(div);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        STREAM AND TRACK MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBitrateInfoListFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let stream = getActiveStream();\n        return stream ? stream.getBitrateListFor(type) : [];\n    }\n\n    /**\n     * This method returns the list of all available streams from a given manifest\n     * @param {Object} manifest\n     * @returns {Array} list of {@link StreamInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getStreamsFromManifest(manifest) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        return adapter.getStreamsInfo(manifest);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type\n     * @param {string} type\n     * @returns {Array} list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTracksFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        if (!streamInfo) return [];\n        return mediaController.getTracksFor(type, streamInfo);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest\n     * @param {string} type\n     * @param {Object} manifest\n     * @param {Object} streamInfo\n     * @returns {Array}  list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTracksForTypeFromManifest(type, manifest, streamInfo) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n\n        streamInfo = streamInfo || adapter.getStreamsInfo(manifest, 1)[0];\n\n        return streamInfo ? adapter.getAllMediaInfoForType(streamInfo, type, manifest) : [];\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null} {@link MediaInfo}\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getCurrentTrackFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n\n        if (!streamInfo) return null;\n\n        return mediaController.getCurrentTrackFor(type, streamInfo);\n    }\n\n    /**\n     * This method allows to set media settings that will be used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n     *  viewpoint: viewpointValue,\n     *  audioChannelConfiguration: audioChannelConfigurationValue,\n     *  accessibility: accessibilityValue,\n     *  role: roleValue}\n     *\n     *\n     * @param {string} type\n     * @param {Object} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setInitialMediaSettingsFor(type, value) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setInitialSettings(type, value);\n    }\n\n    /**\n     * This method returns media settings that is used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n     *  viewpoint: viewpointValue,\n     *  audioChannelConfiguration: audioChannelConfigurationValue,\n     *  accessibility: accessibilityValue,\n     *  role: roleValue}\n     * @param {string} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getInitialMediaSettingsFor(type) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        return mediaController.getInitialSettings(type);\n    }\n\n    /**\n     * @param {MediaInfo} track - instance of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setCurrentTrack(track) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setTrack(track);\n    }\n\n    /**\n     * This method returns the current track switch mode.\n     *\n     * @param {string} type\n     * @returns {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTrackSwitchModeFor(type) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        return mediaController.getSwitchMode(type);\n    }\n\n    /**\n     * This method sets the current track switch mode. Available options are:\n     *\n     * MediaController.TRACK_SWITCH_MODE_NEVER_REPLACE\n     * (used to forbid clearing the buffered data (prior to current playback position) after track switch.\n     * Defers to fastSwitchEnabled for placement of new data. Default for video)\n     *\n     * MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE\n     * (used to clear the buffered data (prior to current playback position) after track switch. Default for audio)\n     *\n     * @param {string} type\n     * @param {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTrackSwitchModeFor(type, mode) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setSwitchMode(type, mode);\n    }\n\n    /**\n     * This method sets the selection mode for the initial track. This mode defines how the initial track will be selected\n     * if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\n     *\n     * MediaController.TRACK_SELECTION_MODE_HIGHEST_BITRATE\n     * this mode makes the player select the track with a highest bitrate. This mode is a default mode.\n     *\n     * MediaController.TRACK_SELECTION_MODE_WIDEST_RANGE\n     * this mode makes the player select the track with a widest range of bitrates\n     *\n     * @param {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setSelectionModeForInitialTrack(mode) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        mediaController.setSelectionModeForInitialTrack(mode);\n    }\n\n    /**\n     * This method returns the track selection mode.\n     *\n     * @returns {string} mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSelectionModeForInitialTrack() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        return mediaController.getSelectionModeForInitialTrack();\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PROTECTION MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    /**\n     * Detects if Protection is included and returns an instance of ProtectionController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getProtectionController() {\n        return detectProtection();\n    }\n\n    /**\n     * Will override dash.js protection controller.\n     * @param {ProtectionController} value - valid protection controller instance.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachProtectionController(value) {\n        protectionController = value;\n    }\n\n    /**\n     * Sets Protection Data required to setup the Protection Module (DRM). Protection Data must\n     * be set before initializing MediaPlayer or, once initialized, before PROTECTION_CREATED event is fired.\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @see {@link ProtectionEvents#event:PROTECTION_CREATED dashjs.Protection.events.PROTECTION_CREATED}\n     * @param {ProtectionData} value - object containing\n     * property names corresponding to key system name strings and associated\n     * values being instances of.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setProtectionData(value) {\n        protectionData = value;\n\n        // Propagate changes in case StreamController is already created\n        if (streamController) {\n            streamController.setProtectionData(protectionData);\n        }\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        THUMBNAILS MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Return the thumbnail at time position.\n     * @returns {Thumbnail|null} - Thumbnail for the given time position. It returns null in case there are is not a thumbnails representation or\n     * if it doesn't contain a thumbnail for the given time position.\n     * @param {number} time - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getThumbnail(time) {\n        if (time < 0) {\n            return null;\n        }\n        const s = playbackController.getIsDynamic() ? getDVRSeekOffset(time) : time;\n        const stream = streamController.getStreamForTime(s);\n        if (stream === null) {\n            return null;\n        }\n\n        const thumbnailController = stream.getThumbnailController();\n        const streamInfo = stream.getStreamInfo();\n        if (!thumbnailController || !streamInfo) {\n            return null;\n        }\n\n        const timeInPeriod = streamController.getTimeRelativeToStreamId(s, stream.getId());\n        return thumbnailController.get(timeInPeriod);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        TOOLS AND OTHERS FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Allows application to retrieve a manifest.  Manifest loading is asynchro\n     * nous and\n     * requires the app-provided callback function\n     *\n     * @param {string} url - url the manifest url\n     * @param {function} callback - A Callback function provided when retrieving manifests\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function retrieveManifest(url, callback) {\n        let manifestLoader = createManifestLoader();\n        let self = this;\n\n        const handler = function (e) {\n            if (!e.error) {\n                callback(e.manifest);\n            } else {\n                callback(null, e.error);\n            }\n            eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n            manifestLoader.reset();\n        };\n\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n\n        URIFragmentModel(context).getInstance().initialize(url);\n        manifestLoader.load(url);\n    }\n\n    /**\n     * Returns the source string or manifest that was attached by calling attachSource()\n     * @returns {string | manifest}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSource() {\n        if (!source) {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n        return source;\n    }\n\n    /**\n     * Use this method to set a source URL to a valid MPD manifest file OR\n     * a previously downloaded and parsed manifest object.  Optionally, can\n     * also provide protection information\n     *\n     * @param {string|Object} urlOrManifest - A URL to a valid MPD manifest file, or a\n     * parsed manifest object.\n     *\n     *\n     * @throws \"MediaPlayer not initialized!\"\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachSource(urlOrManifest) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (typeof urlOrManifest === 'string') {\n            URIFragmentModel(context).getInstance().initialize(urlOrManifest);\n        }\n\n        source = urlOrManifest;\n\n        if (streamingInitialized || playbackInitialized) {\n            resetPlaybackControllers();\n        }\n\n        if (isReady()) {\n            initializePlayback();\n        }\n    }\n\n    /**\n     * A utility methods which converts UTC timestamp value into a valid time and date string.\n     *\n     * @param {number} time - UTC timestamp to be converted into date and time.\n     * @param {string} locales - a region identifier (i.e. en_US).\n     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.\n     * @param {boolean} withDate - default is false. Set to true to append current date to UTC time format.\n     * @returns {string} A formatted time and date string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function formatUTC(time, locales, hour12, withDate = false) {\n        const dt = new Date(time * 1000);\n        const d = dt.toLocaleDateString(locales);\n        const t = dt.toLocaleTimeString(locales, {\n            hour12: hour12\n        });\n        return withDate ? t + ' ' + d : t;\n    }\n\n    /**\n     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).\n     *\n     * @param {number} value - A number in seconds to be converted into a formatted time code.\n     * @returns {string} A formatted time code string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function convertToTimeCode(value) {\n        value = Math.max(value, 0);\n\n        let h = Math.floor(value / 3600);\n        let m = Math.floor((value % 3600) / 60);\n        let s = Math.floor((value % 3600) % 60);\n        return (h === 0 ? '' : (h < 10 ? '0' + h.toString() + ':' : h.toString() + ':')) + (m < 10 ? '0' + m.toString() : m.toString()) + ':' + (s < 10 ? '0' + s.toString() : s.toString());\n    }\n\n    /**\n     * This method should be used to extend or replace internal dash.js objects.\n     * There are two ways to extend dash.js (determined by the override argument):\n     * <ol>\n     * <li>If you set override to true any public method or property in your custom object will\n     * override the dash.js parent object's property(ies) and will be used instead but the\n     * dash.js parent module will still be created.</li>\n     *\n     * <li>If you set override to false your object will completely replace the dash.js object.\n     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>\n     * </ol>\n     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>\n     * <ul>\n     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>\n     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>\n     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>\n     * </ul>\n     * <b>You must call extend before you call initialize</b>\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @param {string} parentNameString - name of parent module\n     * @param {Object} childInstance - overriding object\n     * @param {boolean} override - replace only some methods (true) or the whole object (false)\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function extend(parentNameString, childInstance, override) {\n        FactoryMaker.extend(parentNameString, childInstance, override, context);\n    }\n\n    //***********************************\n    // PRIVATE METHODS\n    //***********************************\n\n    function resetPlaybackControllers() {\n        playbackInitialized = false;\n        streamingInitialized = false;\n        adapter.reset();\n        streamController.reset();\n        playbackController.reset();\n        abrController.reset();\n        mediaController.reset();\n        textController.reset();\n        if (protectionController) {\n            protectionController.reset();\n            protectionController = null;\n            detectProtection();\n        }\n    }\n\n    function createPlaybackControllers() {\n        // creates or get objects instances\n        const manifestLoader = createManifestLoader();\n\n        if (!streamController) {\n            streamController = StreamController(context).getInstance();\n        }\n\n        // configure controllers\n        mediaController.setConfig({\n            errHandler: errHandler,\n            domStorage: domStorage\n        });\n\n        streamController.setConfig({\n            capabilities: capabilities,\n            manifestLoader: manifestLoader,\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel,\n            mediaPlayerModel: mediaPlayerModel,\n            protectionController: protectionController,\n            adapter: adapter,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            errHandler: errHandler,\n            timelineConverter: timelineConverter,\n            videoModel: videoModel,\n            playbackController: playbackController,\n            domStorage: domStorage,\n            abrController: abrController,\n            mediaController: mediaController,\n            textController: textController\n        });\n\n        playbackController.setConfig({\n            streamController: streamController,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            manifestModel: manifestModel,\n            mediaPlayerModel: mediaPlayerModel,\n            dashManifestModel: dashManifestModel,\n            adapter: adapter,\n            videoModel: videoModel\n        });\n\n        abrController.setConfig({\n            streamController: streamController,\n            domStorage: domStorage,\n            mediaPlayerModel: mediaPlayerModel,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            dashManifestModel: dashManifestModel,\n            manifestModel: manifestModel,\n            videoModel: videoModel,\n            adapter: adapter\n        });\n        abrController.createAbrRulesCollection();\n\n        textController.setConfig({\n            errHandler: errHandler,\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel,\n            mediaController: mediaController,\n            streamController: streamController,\n            videoModel: videoModel\n        });\n\n        // initialises controller\n        streamController.initialize(autoPlay, protectionData);\n    }\n\n    function createManifestLoader() {\n        return ManifestLoader(context).create({\n            errHandler: errHandler,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            requestModifier: RequestModifier(context).getInstance(),\n            mssHandler: mssHandler\n        });\n    }\n\n    function detectProtection() {\n        if (protectionController) {\n            return protectionController;\n        }\n        // do not require Protection as dependencies as this is optional and intended to be loaded separately\n        let Protection = dashjs.Protection; /* jshint ignore:line */\n        if (typeof Protection === 'function') { //TODO need a better way to register/detect plugin components\n            let protection = Protection(context).create();\n            Events.extend(Protection.events);\n            MediaPlayerEvents.extend(Protection.events, {\n                publicOnly: true\n            });\n            if (!capabilities) {\n                capabilities = Capabilities(context).getInstance();\n            }\n            protectionController = protection.createProtectionSystem({\n                debug: debug,\n                errHandler: errHandler,\n                videoModel: videoModel,\n                capabilities: capabilities,\n                eventBus: eventBus,\n                events: Events,\n                BASE64: BASE64,\n                constants: Constants\n            });\n            return protectionController;\n        }\n\n        return null;\n    }\n\n    function detectMetricsReporting() {\n        if (metricsReportingController) {\n            return;\n        }\n        // do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately\n        let MetricsReporting = dashjs.MetricsReporting; /* jshint ignore:line */\n        if (typeof MetricsReporting === 'function') { //TODO need a better way to register/detect plugin components\n            let metricsReporting = MetricsReporting(context).create();\n\n            metricsReportingController = metricsReporting.createMetricsReporting({\n                debug: debug,\n                eventBus: eventBus,\n                mediaElement: getVideoElement(),\n                dashManifestModel: dashManifestModel,\n                metricsModel: metricsModel,\n                events: Events,\n                constants: Constants,\n                metricsConstants: MetricsConstants\n            });\n        }\n    }\n\n    function detectMss() {\n        if (mssHandler) {\n            return;\n        }\n        // do not require MssHandler as dependencies as this is optional and intended to be loaded separately\n        let MssHandler = dashjs.MssHandler; /* jshint ignore:line */\n        if (typeof MssHandler === 'function') { //TODO need a better way to register/detect plugin components\n            mssHandler = MssHandler(context).create({\n                eventBus: eventBus,\n                mediaPlayerModel: mediaPlayerModel,\n                metricsModel: metricsModel,\n                playbackController: playbackController,\n                protectionController: protectionController,\n                errHandler: errHandler,\n                events: Events,\n                constants: Constants,\n                debug: debug,\n                initSegmentType: HTTPRequest.INIT_SEGMENT_TYPE,\n                BASE64: BASE64,\n                ISOBoxer: ISOBoxer\n            });\n        }\n    }\n\n    function getDVRInfoMetric() {\n        let metric = metricsModel.getReadOnlyMetricsFor(Constants.VIDEO) || metricsModel.getReadOnlyMetricsFor(Constants.AUDIO);\n        return dashMetrics.getCurrentDVRInfo(metric);\n    }\n\n    function getAsUTC(valToConvert) {\n        let metric = getDVRInfoMetric();\n        let availableFrom,\n            utcValue;\n\n        if (!metric) {\n            return 0;\n        }\n        availableFrom = metric.manifestInfo.availableFrom.getTime() / 1000;\n        utcValue = valToConvert + (availableFrom + metric.range.start);\n        return utcValue;\n    }\n\n    function getActiveStream() {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        return streamInfo ? streamController.getStreamById(streamInfo.id) : null;\n    }\n\n    function initializePlayback() {\n        if (!streamingInitialized && source) {\n            streamingInitialized = true;\n            logger.info('Streaming Initialized');\n            createPlaybackControllers();\n\n            if (typeof source === 'string') {\n                streamController.load(source);\n            } else {\n                streamController.loadWithManifest(source);\n            }\n        }\n\n        if (!playbackInitialized && isReady()) {\n            playbackInitialized = true;\n            logger.info('Playback Initialized');\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        on: on,\n        off: off,\n        extend: extend,\n        attachView: attachView,\n        attachSource: attachSource,\n        isReady: isReady,\n        preload: preload,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        isDynamic: isDynamic,\n        seek: seek,\n        setPlaybackRate: setPlaybackRate,\n        getPlaybackRate: getPlaybackRate,\n        setCatchUpPlaybackRate: setCatchUpPlaybackRate,\n        getCatchUpPlaybackRate: getCatchUpPlaybackRate,\n        setMute: setMute,\n        isMuted: isMuted,\n        setVolume: setVolume,\n        getVolume: getVolume,\n        time: time,\n        duration: duration,\n        timeAsUTC: timeAsUTC,\n        durationAsUTC: durationAsUTC,\n        getActiveStream: getActiveStream,\n        getDVRWindowSize: getDVRWindowSize,\n        getDVRSeekOffset: getDVRSeekOffset,\n        convertToTimeCode: convertToTimeCode,\n        formatUTC: formatUTC,\n        getVersion: getVersion,\n        getDebug: getDebug,\n        getBufferLength: getBufferLength,\n        getVideoContainer: getVideoContainer,\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\n        getVideoElement: getVideoElement,\n        getSource: getSource,\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\n        setLiveDelay: setLiveDelay,\n        getLiveDelay: getLiveDelay,\n        getCurrentLiveLatency: getCurrentLiveLatency,\n        useSuggestedPresentationDelay: useSuggestedPresentationDelay,\n        enableLastBitrateCaching: enableLastBitrateCaching,\n        enableLastMediaSettingsCaching: enableLastMediaSettingsCaching,\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\n        getTopBitrateInfoFor: getTopBitrateInfoFor,\n        setMinAllowedBitrateFor: setMinAllowedBitrateFor,\n        getMinAllowedBitrateFor: getMinAllowedBitrateFor,\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\n        setAutoPlay: setAutoPlay,\n        getAutoPlay: getAutoPlay,\n        setScheduleWhilePaused: setScheduleWhilePaused,\n        getScheduleWhilePaused: getScheduleWhilePaused,\n        getDashMetrics: getDashMetrics,\n        getMetricsFor: getMetricsFor,\n        getQualityFor: getQualityFor,\n        setQualityFor: setQualityFor,\n        updatePortalSize: updatePortalSize,\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\n        getUsePixelRatioInLimitBitrateByPortal: getUsePixelRatioInLimitBitrateByPortal,\n        setUsePixelRatioInLimitBitrateByPortal: setUsePixelRatioInLimitBitrateByPortal,\n        setTextDefaultLanguage: setTextDefaultLanguage,\n        getTextDefaultLanguage: getTextDefaultLanguage,\n        setTextDefaultEnabled: setTextDefaultEnabled,\n        getTextDefaultEnabled: getTextDefaultEnabled,\n        enableText: enableText,\n        enableForcedTextStreaming: enableForcedTextStreaming,\n        isTextEnabled: isTextEnabled,\n        setTextTrack: setTextTrack,\n        getBitrateInfoListFor: getBitrateInfoListFor,\n        setInitialBitrateFor: setInitialBitrateFor,\n        getInitialBitrateFor: getInitialBitrateFor,\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\n        getStreamsFromManifest: getStreamsFromManifest,\n        getTracksFor: getTracksFor,\n        getTracksForTypeFromManifest: getTracksForTypeFromManifest,\n        getCurrentTrackFor: getCurrentTrackFor,\n        setInitialMediaSettingsFor: setInitialMediaSettingsFor,\n        getInitialMediaSettingsFor: getInitialMediaSettingsFor,\n        setCurrentTrack: setCurrentTrack,\n        getTrackSwitchModeFor: getTrackSwitchModeFor,\n        setTrackSwitchModeFor: setTrackSwitchModeFor,\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\n        setFastSwitchEnabled: setFastSwitchEnabled,\n        getFastSwitchEnabled: getFastSwitchEnabled,\n        setMovingAverageMethod: setMovingAverageMethod,\n        getMovingAverageMethod: getMovingAverageMethod,\n        getAutoSwitchQualityFor: getAutoSwitchQualityFor,\n        setAutoSwitchQualityFor: setAutoSwitchQualityFor,\n        setABRStrategy: setABRStrategy,\n        getABRStrategy: getABRStrategy,\n        useDefaultABRRules: useDefaultABRRules,\n        addABRCustomRule: addABRCustomRule,\n        removeABRCustomRule: removeABRCustomRule,\n        removeAllABRCustomRule: removeAllABRCustomRule,\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\n        getAverageThroughput: getAverageThroughput,\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\n        retrieveManifest: retrieveManifest,\n        addUTCTimingSource: addUTCTimingSource,\n        removeUTCTimingSource: removeUTCTimingSource,\n        clearDefaultUTCTimingSources: clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources: restoreDefaultUTCTimingSources,\n        setBufferToKeep: setBufferToKeep,\n        setBufferAheadToKeep: setBufferAheadToKeep,\n        setBufferPruningInterval: setBufferPruningInterval,\n        setStableBufferTime: setStableBufferTime,\n        getStableBufferTime: getStableBufferTime,\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\n        getBufferTimeAtTopQuality: getBufferTimeAtTopQuality,\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\n        getBufferTimeAtTopQualityLongForm: getBufferTimeAtTopQualityLongForm,\n        setFragmentLoaderRetryAttempts: setFragmentLoaderRetryAttempts,\n        setFragmentLoaderRetryInterval: setFragmentLoaderRetryInterval,\n        setManifestLoaderRetryAttempts: setManifestLoaderRetryAttempts,\n        setManifestLoaderRetryInterval: setManifestLoaderRetryInterval,\n        setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n        setJumpGaps: setJumpGaps,\n        getJumpGaps: getJumpGaps,\n        setSmallGapLimit: setSmallGapLimit,\n        getSmallGapLimit: getSmallGapLimit,\n        getLowLatencyEnabled: getLowLatencyEnabled,\n        setLowLatencyEnabled: setLowLatencyEnabled,\n        setManifestUpdateRetryInterval: setManifestUpdateRetryInterval,\n        getManifestUpdateRetryInterval: getManifestUpdateRetryInterval,\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\n        setSegmentOverlapToleranceTime: setSegmentOverlapToleranceTime,\n        setCacheLoadThresholdForType: setCacheLoadThresholdForType,\n        getProtectionController: getProtectionController,\n        attachProtectionController: attachProtectionController,\n        setProtectionData: setProtectionData,\n        enableManifestDateHeaderTimeSource: enableManifestDateHeaderTimeSource,\n        displayCaptionsOnTop: displayCaptionsOnTop,\n        attachVideoContainer: attachVideoContainer,\n        attachTTMLRenderingDiv: attachTTMLRenderingDiv,\n        getCurrentTextTrackIndex: getCurrentTextTrackIndex,\n        getUseDeadTimeLatencyForAbr: getUseDeadTimeLatencyForAbr,\n        setUseDeadTimeLatencyForAbr: setUseDeadTimeLatencyForAbr,\n        getThumbnail: getThumbnail,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayer.__dashjs_factory_name = 'MediaPlayer';\nconst factory = FactoryMaker.getClassFactory(MediaPlayer);\nfactory.events = MediaPlayerEvents;\nFactoryMaker.updateClassFactory(MediaPlayer.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         * @deprecated\n         */\n        this.LOG = 'log';\n\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when the source is setup and ready.\n         * @event MediaPlayerEvents#SOURCE_INITIALIZED\n         */\n        this.SOURCE_INITIALIZED = 'sourceInitialized';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when live catch mechanism has been activated, which implies the measured latency of the low latency\n         * stream that is been played has gone beyond the target one.\n         * @see {@link module:MediaPlayer#setCatchUpPlaybackRate setCatchUpPlaybackRate()}\n         * @see {@link module:MediaPlayer#setLiveDelay setLiveDelay()}\n         * @event MediaPlayerEvents#PLAYBACK_CATCHUP_START\n         */\n        this.PLAYBACK_CATCHUP_START = 'playbackCatchupStart';\n\n        /**\n         * Sent live catch up mechanism has been deactivated.\n         * @see {@link module:MediaPlayer#setCatchUpPlaybackRate setCatchUpPlaybackRate()}\n         * @see {@link module:MediaPlayer#setLiveDelay setLiveDelay()}\n         * @event MediaPlayerEvents#PLAYBACK_CATCHUP_END\n         */\n        this.PLAYBACK_CATCHUP_END = 'playbackCatchupEnd';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when a seek operation has been asked.\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\n         */\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug';\nimport FactoryMaker from '../core/FactoryMaker';\n\n/**\n * This is a sink that is used to temporarily hold onto media chunks before a video element is added.\n * The discharge() function is used to get the chunks out of the PreBuffer for adding to a real SourceBuffer.\n *\n * @class PreBufferSink\n * @implements FragmentSink\n */\nfunction PreBufferSink(onAppendedCallback) {\n    const context = this.context;\n\n    let instance,\n        logger;\n    let chunks = [];\n    let outstandingInit;\n    let onAppended = onAppendedCallback;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function reset() {\n        chunks = [];\n        outstandingInit = null;\n        onAppended = null;\n    }\n\n    function append(chunk) {\n        if (chunk.segmentType !== 'InitializationSegment') { //Init segments are stored in the initCache.\n            chunks.push(chunk);\n            chunks.sort(function (a, b) { return a.start - b.start; });\n            outstandingInit = null;\n        } else {//We need to hold an init chunk for when a corresponding media segment is being downloaded when the discharge happens.\n            outstandingInit = chunk;\n        }\n\n        logger.debug('PreBufferSink appended chunk s: ' + chunk.start + '; e: ' + chunk.end);\n        if (onAppended) {\n            onAppended({\n                chunk: chunk\n            });\n        }\n    }\n\n    function remove(start, end) {\n        chunks = chunks.filter( a => !((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start))); //The opposite of the getChunks predicate.\n    }\n\n    //Nothing async, nothing to abort.\n    function abort() {\n    }\n\n    function getAllBufferRanges() {\n        let ranges = [];\n\n        for (let i = 0; i < chunks.length; i++) {\n            let chunk = chunks[i];\n            if (ranges.length === 0 || chunk.start > ranges[ranges.length - 1].end) {\n                ranges.push({ start: chunk.start, end: chunk.end });\n            } else {\n                ranges[ranges.length - 1].end = chunk.end;\n            }\n        }\n\n        //Implements TimeRanges interface. So acts just like sourceBuffer.buffered.\n        const timeranges = {\n            start: function (n) {\n                return ranges[n].start;\n            },\n            end: function (n) {\n                return ranges[n].end;\n            }\n        };\n\n        Object.defineProperty(timeranges, 'length', {\n            get: function () {\n                return ranges.length;\n            }\n        });\n\n        return timeranges;\n    }\n\n    function updateTimestampOffset() {\n        // Nothing to do\n    }\n\n    /**\n     * Return the all chunks in the buffer the lie between times start and end.\n     * Because a chunk cannot be split, this returns the full chunk if any part of its time lies in the requested range.\n     * Chunks are removed from the buffer when they are discharged.\n     * @function PreBufferSink#discharge\n     * @param {?Number} start The start time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @param {?Number} end The end time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @returns {Array} The set of chunks from the buffer within the time ranges.\n     */\n    function discharge(start, end) {\n        const result = getChunksAt(start, end);\n        if (outstandingInit) {\n            result.push(outstandingInit);\n            outstandingInit = null;\n        }\n\n        remove(start, end);\n\n        return result;\n    }\n\n    function getChunksAt(start, end) {\n        return chunks.filter( a => ((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start)) );\n    }\n\n    instance = {\n        getAllBufferRanges: getAllBufferRanges,\n        append: append,\n        remove: remove,\n        abort: abort,\n        discharge: discharge,\n        reset: reset,\n        updateTimestampOffset: updateTimestampOffset\n    };\n\n    setup();\n\n    return instance;\n}\n\nPreBufferSink.__dashjs_factory_name = 'PreBufferSink';\nconst factory = FactoryMaker.getClassFactory(PreBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug';\nimport DashJSError from './vo/DashJSError';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport TextController from './text/TextController';\n/**\n * @class SourceBufferSink\n * @implements FragmentSink\n */\nfunction SourceBufferSink(mediaSource, mediaInfo, onAppendedCallback, oldBuffer) {\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        buffer,\n        isAppendingInProgress;\n\n    let callbacks = [];\n\n    let appendQueue = [];\n    let onAppended = onAppendedCallback;\n    let intervalId;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        isAppendingInProgress = false;\n\n        const codec = mediaInfo.codec;\n        try {\n            // Safari claims to support anything starting 'application/mp4'.\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\n            // - currently no browser does, so check for it and use our own\n            // implementation. The same is true for codecs=\"wvtt\".\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt).*\"/i)) {\n                throw new Error('not really supported');\n            }\n            buffer = oldBuffer ? oldBuffer : mediaSource.addSourceBuffer(codec);\n\n            const CHECK_INTERVAL = 50;\n            // use updateend event if possible\n            if (typeof buffer.addEventListener === 'function') {\n                try {\n                    buffer.addEventListener('updateend', updateEndHandler, false);\n                    buffer.addEventListener('error', errHandler, false);\n                    buffer.addEventListener('abort', errHandler, false);\n\n                } catch (err) {\n                    // use setInterval to periodically check if updating has been completed\n                    intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\n                }\n            } else {\n                // use setInterval to periodically check if updating has been completed\n                intervalId = setInterval(checkIsUpdateEnded, CHECK_INTERVAL);\n            }\n\n\n        } catch (ex) {\n            // Note that in the following, the quotes are open to allow for extra text after stpp and wvtt\n            if ((mediaInfo.isText) || (codec.indexOf('codecs=\"stpp') !== -1) || (codec.indexOf('codecs=\"wvtt') !== -1)) {\n                const textController = TextController(context).getInstance();\n                buffer = textController.getTextSourceBuffer();\n            } else {\n                throw ex;\n            }\n        }\n    }\n\n    function reset(keepBuffer) {\n        if (buffer) {\n            if (typeof buffer.removeEventListener === 'function') {\n                buffer.removeEventListener('updateend', updateEndHandler, false);\n                buffer.removeEventListener('error', errHandler, false);\n                buffer.removeEventListener('abort', errHandler, false);\n            }\n            clearInterval(intervalId);\n            if (!keepBuffer) {\n                try {\n                    if (!buffer.getClassName || buffer.getClassName() !== 'TextSourceBuffer') {\n                        mediaSource.removeSourceBuffer(buffer);\n                    }\n                } catch (e) {\n                    logger.error('Failed to remove source buffer from media source.');\n                }\n                buffer = null;\n            }\n            isAppendingInProgress = false;\n        }\n        appendQueue = [];\n        onAppended = null;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function getAllBufferRanges() {\n        try {\n            return buffer.buffered;\n        } catch (e) {\n            logger.error('getAllBufferRanges exception: ' + e.message);\n            return null;\n        }\n    }\n\n    function append(chunk) {\n        appendQueue.push(chunk);\n        if (!isAppendingInProgress) {\n            waitForUpdateEnd(buffer, appendNextInQueue.bind(this));\n        }\n    }\n\n    function updateTimestampOffset(MSETimeOffset) {\n        if (buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\n            waitForUpdateEnd(buffer, () => {\n                buffer.timestampOffset = MSETimeOffset;\n            });\n        }\n    }\n\n    function remove(start, end, forceRemoval) {\n        const sourceBufferSink = this;\n        // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\n        waitForUpdateEnd(buffer, function () {\n            try {\n                if ((start >= 0) && (end > start) && (forceRemoval || mediaSource.readyState !== 'ended')) {\n                    buffer.remove(start, end);\n                }\n                // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                waitForUpdateEnd(buffer, function () {\n                    eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\n                        buffer: sourceBufferSink,\n                        from: start,\n                        to: end,\n                        unintended: false\n                    });\n                });\n            } catch (err) {\n                eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\n                    buffer: sourceBufferSink,\n                    from: start,\n                    to: end,\n                    unintended: false,\n                    error: new DashJSError(err.code, err.message, null)\n                });\n            }\n        });\n    }\n\n    function appendNextInQueue() {\n        const sourceBufferSink = this;\n\n        if (appendQueue.length > 0) {\n            isAppendingInProgress = true;\n            const nextChunk = appendQueue[0];\n            appendQueue.splice(0,1);\n            let oldRanges = [];\n            const afterSuccess = function () {\n                // Safari sometimes drops a portion of a buffer after appending. Handle these situations here\n                const newRanges = getAllBufferRanges();\n                checkBufferGapsAfterAppend(sourceBufferSink, oldRanges, newRanges, nextChunk);\n                if (appendQueue.length > 0) {\n                    appendNextInQueue.call(this);\n                } else {\n                    isAppendingInProgress = false;\n                    if (onAppended) {\n                        onAppended({\n                            chunk: nextChunk\n                        });\n                    }\n                }\n            };\n\n            try {\n                if (nextChunk.bytes.length === 0) {\n                    afterSuccess.call(this);\n                } else {\n                    oldRanges = getAllBufferRanges();\n                    if (buffer.appendBuffer) {\n                        buffer.appendBuffer(nextChunk.bytes);\n                    } else {\n                        buffer.append(nextChunk.bytes, nextChunk);\n                    }\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                    waitForUpdateEnd(buffer, afterSuccess.bind(this));\n                }\n            } catch (err) {\n                logger.fatal('SourceBuffer append failed \"' + err + '\"');\n                if (appendQueue.length > 0) {\n                    appendNextInQueue();\n                } else {\n                    isAppendingInProgress = false;\n                }\n\n                if (onAppended) {\n                    onAppended({\n                        chunk: nextChunk,\n                        error: new DashJSError(err.code, err.message, null)\n                    });\n                }\n            }\n        }\n    }\n\n    function checkBufferGapsAfterAppend(buffer, oldRanges, newRanges, chunk) {\n        if (oldRanges && oldRanges.length > 0 && oldRanges.length < newRanges.length &&\n            isChunkAlignedWithRange(oldRanges, chunk)) {\n            // A split in the range was created while appending\n            eventBus.trigger(Events.SOURCEBUFFER_REMOVE_COMPLETED, {\n                buffer: buffer,\n                from: newRanges.end(newRanges.length - 2),\n                to: newRanges.start(newRanges.length - 1),\n                unintended: true\n            });\n        }\n    }\n\n    function isChunkAlignedWithRange(oldRanges, chunk) {\n        for (let i = 0; i < oldRanges.length; i++ ) {\n            const start = Math.round(oldRanges.start(i));\n            const end = Math.round(oldRanges.end(i));\n            if (end === chunk.start || start === chunk.end || (chunk.start >= start && chunk.end <= end) ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function abort() {\n        try {\n            if (mediaSource.readyState === 'open') {\n                buffer.abort();\n            } else if (buffer.setTextTrack && mediaSource.readyState === 'ended') {\n                buffer.abort(); //The cues need to be removed from the TextSourceBuffer via a call to abort()\n            }\n        } catch (ex) {\n            logger.error('SourceBuffer append abort failed: \"' + ex + '\"');\n        }\n\n        appendQueue = [];\n    }\n\n    function executeCallback() {\n        if (callbacks.length > 0) {\n            const cb = callbacks.shift();\n            if (buffer.updating) {\n                waitForUpdateEnd(buffer, cb);\n            } else {\n                cb();\n                // Try to execute next callback if still not updating\n                executeCallback();\n            }\n        }\n\n    }\n\n    function checkIsUpdateEnded() {\n        // if updating is still in progress do nothing and wait for the next check again.\n        if (buffer.updating) return;\n        // updating is completed, now we can stop checking and resolve the promise\n        executeCallback();\n    }\n\n\n    function updateEndHandler() {\n        if (buffer.updating) return;\n\n        executeCallback();\n    }\n\n    function errHandler() {\n        logger.error('SourceBufferSink error', mediaInfo.type);\n    }\n\n\n    function waitForUpdateEnd(buffer, callback) {\n        callbacks.push(callback);\n\n        if (!buffer.updating) {\n            executeCallback();\n        }\n    }\n\n    instance = {\n        getAllBufferRanges: getAllBufferRanges,\n        getBuffer: getBuffer,\n        append: append,\n        remove: remove,\n        abort: abort,\n        reset: reset,\n        updateTimestampOffset: updateTimestampOffset\n    };\n\n    setup();\n    return instance;\n}\n\nSourceBufferSink.__dashjs_factory_name = 'SourceBufferSink';\nconst factory = FactoryMaker.getClassFactory(SourceBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport StreamProcessor from './StreamProcessor';\nimport EventController from './controllers/EventController';\nimport FragmentController from './controllers/FragmentController';\nimport ThumbnailController from './thumbnail/ThumbnailController';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport Debug from '../core/Debug';\nimport FactoryMaker from '../core/FactoryMaker';\n\nfunction Stream(config) {\n\n    const DATA_UPDATE_FAILED_ERROR_CODE = 1;\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const manifestModel = config.manifestModel;\n    const dashManifestModel = config.dashManifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const manifestUpdater = config.manifestUpdater;\n    const adapter = config.adapter;\n    const capabilities = config.capabilities;\n    const errHandler = config.errHandler;\n    const timelineConverter = config.timelineConverter;\n    const metricsModel = config.metricsModel;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const mediaController = config.mediaController;\n    const textController = config.textController;\n    const videoModel = config.videoModel;\n\n    let instance,\n        logger,\n        streamProcessors,\n        isStreamActivated,\n        isMediaInitialized,\n        streamInfo,\n        updateError,\n        isUpdating,\n        protectionController,\n        fragmentController,\n        thumbnailController,\n        eventController,\n        preloaded,\n        trackChangedEvent;\n\n    const codecCompatibilityTable = [\n        {\n            'codec': 'avc1',\n            'compatibleCodecs': ['avc3']\n        },\n        {\n            'codec': 'avc3',\n            'compatibleCodecs': ['avc1']\n        }\n    ];\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        fragmentController = FragmentController(context).create({\n            mediaPlayerModel: mediaPlayerModel,\n            metricsModel: metricsModel,\n            errHandler: errHandler\n        });\n\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n    }\n\n    function initialize(StreamInfo, ProtectionController) {\n        streamInfo = StreamInfo;\n        protectionController = ProtectionController;\n        if (protectionController) {\n            eventBus.on(Events.KEY_ERROR, onProtectionError, instance);\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n            eventBus.on(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n            eventBus.on(Events.KEY_STATUSES_CHANGED, onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Activates Stream by re-initializing some of its components\n     * @param {MediaSource} mediaSource\n     * @memberof Stream#\n     * @param {SourceBuffer} previousBuffers\n     */\n    function activate(mediaSource, previousBuffers) {\n        if (!isStreamActivated) {\n            let result;\n            if (!getPreloaded()) {\n                result = initializeMedia(mediaSource, previousBuffers);\n                eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n            } else {\n                initializeAfterPreload();\n                result = previousBuffers;\n                eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n            }\n            isStreamActivated = true;\n            return result;\n        }\n        return previousBuffers;\n    }\n\n    /**\n     * Partially resets some of the Stream elements\n     * @memberof Stream#\n     * @param {boolean} keepBuffers\n     */\n    function deactivate(keepBuffers) {\n        let ln = streamProcessors ? streamProcessors.length : 0;\n        const errored = false;\n        for (let i = 0; i < ln; i++) {\n            let fragmentModel = streamProcessors[i].getFragmentModel();\n            fragmentModel.removeExecutedRequestsBeforeTime(getStartTime() + getDuration());\n            streamProcessors[i].reset(errored, keepBuffers);\n        }\n        streamProcessors = [];\n        isStreamActivated = false;\n        isMediaInitialized = false;\n        setPreloaded(false);\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n    }\n\n    function isActive() {\n        return isStreamActivated;\n    }\n\n    function setMediaSource(mediaSource) {\n        for (let i = 0; i < streamProcessors.length;) {\n            if (isMediaSupported(streamProcessors[i].getMediaInfo())) {\n                streamProcessors[i].setMediaSource(mediaSource);\n                i++;\n            } else {\n                streamProcessors[i].reset();\n                streamProcessors.splice(i,1);\n            }\n        }\n\n        for (let i = 0; i < streamProcessors.length; i++) {\n            //Adding of new tracks to a stream processor isn't guaranteed by the spec after the METADATA_LOADED state\n            //so do this after the buffers are created above.\n            streamProcessors[i].dischargePreBuffer();\n        }\n\n        if (streamProcessors.length === 0) {\n            let msg = 'No streams to play.';\n            errHandler.manifestError(msg, 'nostreams', manifestModel.getValue());\n            logger.fatal(msg);\n        }\n    }\n\n    function resetInitialSettings() {\n        deactivate();\n        streamInfo = null;\n        updateError = {};\n        isUpdating = false;\n    }\n\n    function reset() {\n\n        if (playbackController) {\n            playbackController.pause();\n        }\n\n        if (fragmentController) {\n            fragmentController.reset();\n            fragmentController = null;\n        }\n\n        resetInitialSettings();\n\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.off(Events.KEY_ERROR, onProtectionError, instance);\n        eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, onProtectionError, instance);\n        eventBus.off(Events.LICENSE_REQUEST_COMPLETE, onProtectionError, instance);\n        eventBus.off(Events.KEY_SYSTEM_SELECTED, onProtectionError, instance);\n        eventBus.off(Events.KEY_SESSION_CREATED, onProtectionError, instance);\n        eventBus.off(Events.KEY_STATUSES_CHANGED, onProtectionError, instance);\n\n        setPreloaded(false);\n    }\n\n    function getDuration() {\n        return streamInfo ? streamInfo.duration : NaN;\n    }\n\n    function getStartTime() {\n        return streamInfo ? streamInfo.start : NaN;\n    }\n\n    function getId() {\n        return streamInfo ? streamInfo.id : NaN;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function getEventController() {\n        return eventController;\n    }\n\n    function getFragmentController() {\n        return fragmentController;\n    }\n\n    function getThumbnailController() {\n        return thumbnailController;\n    }\n\n    function checkConfig() {\n        if (!abrController || !abrController.hasOwnProperty('getBitrateList') || !adapter || !adapter.hasOwnProperty('getAllMediaInfoForType') || !adapter.hasOwnProperty('getEventsFor')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getBitrateListFor(type) {\n        checkConfig();\n        if (type === Constants.IMAGE) {\n            if (!thumbnailController) {\n                return [];\n            }\n            return thumbnailController.getBitrateList();\n        }\n        const mediaInfo = getMediaInfo(type);\n        return abrController.getBitrateList(mediaInfo);\n    }\n\n    function startEventController() {\n        if (eventController) {\n            eventController.start();\n        }\n    }\n\n    function stopEventController() {\n        if (eventController) {\n            eventController.stop();\n        }\n    }\n\n    function onProtectionError(event) {\n        if (event.error) {\n            errHandler.mediaKeySessionError(event.error);\n            logger.fatal(event.error);\n            reset();\n        }\n    }\n\n    function isMediaSupported(mediaInfo) {\n        const type = mediaInfo.type;\n        let codec,\n            msg;\n\n        if (type === Constants.MUXED && mediaInfo) {\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\n            logger.fatal(msg);\n            errHandler.manifestError(msg, 'multiplexedrep', manifestModel.getValue());\n            return false;\n        }\n\n        if (type === Constants.TEXT || type === Constants.FRAGMENTED_TEXT || type === Constants.EMBEDDED_TEXT || type === Constants.IMAGE) {\n            return true;\n        }\n        codec = mediaInfo.codec;\n        logger.debug(type + ' codec: ' + codec);\n\n        if (!!mediaInfo.contentProtection && !capabilities.supportsEncryptedMedia()) {\n            errHandler.capabilityError('encryptedmedia');\n        } else if (!capabilities.supportsCodec(codec)) {\n            msg = type + 'Codec (' + codec + ') is not supported.';\n            logger.error(msg);\n            return false;\n        }\n\n        return true;\n    }\n\n    function onCurrentTrackChanged(e) {\n        if (e.newMediaInfo.streamInfo.id !== streamInfo.id) return;\n\n        let processor = getProcessorForMediaInfo(e.oldMediaInfo);\n        if (!processor) return;\n\n        let currentTime = playbackController.getTime();\n        logger.info('Stream -  Process track changed at current time ' + currentTime);\n        let mediaInfo = e.newMediaInfo;\n        let manifest = manifestModel.getValue();\n\n        logger.debug('Stream -  Update stream controller');\n        if (manifest.refreshManifestOnSwitchTrack) {\n            logger.debug('Stream -  Refreshing manifest for switch track');\n            trackChangedEvent = e;\n            manifestUpdater.refreshManifest();\n        } else {\n            processor.selectMediaInfo(mediaInfo);\n            if (mediaInfo.type !== Constants.FRAGMENTED_TEXT) {\n                abrController.updateTopQualityIndex(mediaInfo);\n                processor.switchTrackAsked();\n                processor.getFragmentModel().abortRequests();\n            }\n        }\n    }\n\n    function createStreamProcessor(mediaInfo, allMediaForType, mediaSource, optionalSettings) {\n        let streamProcessor = StreamProcessor(context).create({\n            type: mediaInfo.type,\n            mimeType: mediaInfo.mimeType,\n            timelineConverter: timelineConverter,\n            adapter: adapter,\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel,\n            mediaPlayerModel: mediaPlayerModel,\n            metricsModel: metricsModel,\n            dashMetrics: config.dashMetrics,\n            baseURLController: config.baseURLController,\n            stream: instance,\n            abrController: abrController,\n            domStorage: config.domStorage,\n            playbackController: playbackController,\n            mediaController: mediaController,\n            streamController: config.streamController,\n            textController: textController,\n            errHandler: errHandler\n        });\n\n        streamProcessor.initialize(mediaSource);\n        abrController.updateTopQualityIndex(mediaInfo);\n\n        if (optionalSettings) {\n            streamProcessor.setBuffer(optionalSettings.buffer);\n            streamProcessor.getIndexHandler().setCurrentTime(optionalSettings.currentTime);\n            streamProcessors[optionalSettings.replaceIdx] = streamProcessor;\n        } else {\n            streamProcessors.push(streamProcessor);\n        }\n\n        if (optionalSettings && optionalSettings.ignoreMediaInfo) {\n            return;\n        }\n\n        if ((mediaInfo.type === Constants.TEXT || mediaInfo.type === Constants.FRAGMENTED_TEXT)) {\n            let idx;\n            for (let i = 0; i < allMediaForType.length; i++) {\n                if (allMediaForType[i].index === mediaInfo.index) {\n                    idx = i;\n                }\n                streamProcessor.addMediaInfo(allMediaForType[i]); //creates text tracks for all adaptations in one stream processor\n            }\n            streamProcessor.selectMediaInfo(allMediaForType[idx]); //sets the initial media info\n        } else {\n            streamProcessor.addMediaInfo(mediaInfo, true);\n        }\n    }\n\n    function initializeMediaForType(type, mediaSource) {\n        const allMediaForType = adapter.getAllMediaInfoForType(streamInfo, type);\n\n        let mediaInfo = null;\n        let initialMediaInfo;\n\n        if (!allMediaForType || allMediaForType.length === 0) {\n            logger.info('No ' + type + ' data.');\n            return;\n        }\n\n        for (let i = 0, ln = allMediaForType.length; i < ln; i++) {\n            mediaInfo = allMediaForType[i];\n\n            if (type === Constants.EMBEDDED_TEXT) {\n                textController.addEmbeddedTrack(mediaInfo);\n            } else {\n                if (!isMediaSupported(mediaInfo)) continue;\n                mediaController.addTrack(mediaInfo);\n            }\n        }\n\n        if (type === Constants.EMBEDDED_TEXT || mediaController.getTracksFor(type, streamInfo).length === 0) {\n            return;\n        }\n\n        if (type === Constants.IMAGE) {\n            thumbnailController = ThumbnailController(context).create({\n                dashManifestModel: dashManifestModel,\n                adapter: adapter,\n                baseURLController: config.baseURLController,\n                stream: instance\n            });\n            return;\n        }\n\n        mediaController.checkInitialMediaSettingsForType(type, streamInfo);\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo);\n\n        // TODO : How to tell index handler live/duration?\n        // TODO : Pass to controller and then pass to each method on handler?\n\n        createStreamProcessor(initialMediaInfo, allMediaForType, mediaSource);\n    }\n\n    function initializeMedia(mediaSource, previousBuffers) {\n        checkConfig();\n        let events;\n        let element = videoModel.getElement();\n\n        //if initializeMedia is called from a switch period, eventController could have been already created.\n        if (!eventController) {\n            eventController = EventController(context).create();\n\n            eventController.setConfig({\n                manifestModel: manifestModel,\n                manifestUpdater: manifestUpdater,\n                playbackController: playbackController\n            });\n            events = adapter.getEventsFor(streamInfo);\n            eventController.addInlineEvents(events);\n        }\n\n        isUpdating = true;\n\n        filterCodecs(Constants.VIDEO);\n        filterCodecs(Constants.AUDIO);\n\n        if (element === null || (element && (/^VIDEO$/i).test(element.nodeName))) {\n            initializeMediaForType(Constants.VIDEO, mediaSource);\n        }\n        initializeMediaForType(Constants.AUDIO, mediaSource);\n        initializeMediaForType(Constants.TEXT, mediaSource);\n        initializeMediaForType(Constants.FRAGMENTED_TEXT, mediaSource);\n        initializeMediaForType(Constants.EMBEDDED_TEXT, mediaSource);\n        initializeMediaForType(Constants.MUXED, mediaSource);\n        initializeMediaForType(Constants.IMAGE, mediaSource);\n\n        //TODO. Consider initialization of TextSourceBuffer here if embeddedText, but no sideloadedText.\n        const buffers = createBuffers(previousBuffers);\n\n        isMediaInitialized = true;\n        isUpdating = false;\n\n        if (streamProcessors.length === 0) {\n            const msg = 'No streams to play.';\n            errHandler.manifestError(msg, 'nostreams', manifestModel.getValue());\n            logger.fatal(msg);\n        } else {\n            checkIfInitializationCompleted();\n        }\n\n        return buffers;\n    }\n\n    function initializeAfterPreload() {\n        isUpdating = true;\n        checkConfig();\n        filterCodecs(Constants.VIDEO);\n        filterCodecs(Constants.AUDIO);\n\n        isMediaInitialized = true;\n        isUpdating = false;\n        if (streamProcessors.length === 0) {\n            let msg = 'No streams to play.';\n            errHandler.manifestError(msg, 'nostreams', manifestModel.getValue());\n            logger.debug(msg);\n        } else {\n            checkIfInitializationCompleted();\n        }\n    }\n\n    function filterCodecs(type) {\n        const realAdaptation = dashManifestModel.getAdaptationForType(manifestModel.getValue(), streamInfo.index, type, streamInfo);\n\n        if (!realAdaptation || !Array.isArray(realAdaptation.Representation_asArray)) return null;\n\n        // Filter codecs that are not supported\n        realAdaptation.Representation_asArray = realAdaptation.Representation_asArray.filter((_, i) => {\n            // keep at least codec from lowest representation\n            if (i === 0) return true;\n\n            const codec = dashManifestModel.getCodec(realAdaptation, i, true);\n            if (!capabilities.supportsCodec(codec)) {\n                logger.error('[Stream] codec not supported: ' + codec);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    function checkIfInitializationCompleted() {\n        const ln = streamProcessors.length;\n        const hasError = !!updateError.audio || !!updateError.video;\n        let error = hasError ? new Error(DATA_UPDATE_FAILED_ERROR_CODE, 'Data update failed', null) : null;\n        for (let i = 0; i < ln; i++) {\n            if (streamProcessors[i].isUpdating() || isUpdating) {\n                return;\n            }\n        }\n\n        if (!isMediaInitialized) {\n            return;\n        }\n\n        if (protectionController) {\n            // Need to check if streamProcessors exists because streamProcessors\n            // could be cleared in case an error is detected while initializing DRM keysystem\n            for (let i = 0; i < ln && streamProcessors[i]; i++) {\n                if (streamProcessors[i].getType() === Constants.AUDIO ||\n                    streamProcessors[i].getType() === Constants.VIDEO ||\n                    streamProcessors[i].getType() === Constants.FRAGMENTED_TEXT) {\n                    protectionController.initializeForMedia(streamProcessors[i].getMediaInfo());\n                }\n            }\n        }\n\n        eventBus.trigger(Events.STREAM_INITIALIZED, {\n            streamInfo: streamInfo,\n            error: error\n        });\n    }\n\n    function getMediaInfo(type) {\n        const ln = streamProcessors.length;\n        let streamProcessor = null;\n\n        for (let i = 0; i < ln; i++) {\n            streamProcessor = streamProcessors[i];\n\n            if (streamProcessor.getType() === type) {\n                return streamProcessor.getMediaInfo();\n            }\n        }\n\n        return null;\n    }\n\n    function createBuffers(previousBuffers) {\n        const buffers = {};\n        for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n            buffers[streamProcessors[i].getType()] = streamProcessors[i].createBuffer(previousBuffers).getBuffer();\n        }\n        return buffers;\n    }\n\n    function onBufferingCompleted(e) {\n        if (e.streamInfo !== streamInfo) {\n            return;\n        }\n\n        let processors = getProcessors();\n        const ln = processors.length;\n\n        if (ln === 0) {\n            logger.warn('onBufferingCompleted - can\\'t trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined');\n            return;\n        }\n\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\n        for (let i = 0; i < ln; i++) {\n            //if audio or video buffer is not buffering completed state, do not send STREAM_BUFFERING_COMPLETED\n            if (!processors[i].isBufferingCompleted() && (processors[i].getType() === Constants.AUDIO || processors[i].getType() === Constants.VIDEO)) {\n                logger.warn('onBufferingCompleted - can\\'t trigger STREAM_BUFFERING_COMPLETED because streamProcessor ' + processors[i].getType() + ' is not buffering completed');\n                return;\n            }\n        }\n\n        logger.debug('onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED');\n\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, {\n            streamInfo: streamInfo\n        });\n    }\n\n    function onDataUpdateCompleted(e) {\n        let sp = e.sender.getStreamProcessor();\n\n        if (sp.getStreamInfo() !== streamInfo) {\n            return;\n        }\n\n        updateError[sp.getType()] = e.error;\n        checkIfInitializationCompleted();\n    }\n\n    function getProcessorForMediaInfo(mediaInfo) {\n        if (!mediaInfo) {\n            return false;\n        }\n\n        let processors = getProcessors();\n\n        return processors.filter(function (processor) {\n            return (processor.getType() === mediaInfo.type);\n        })[0];\n    }\n\n    function getProcessors() {\n        const ln = streamProcessors.length;\n        let arr = [];\n\n        let type,\n            streamProcessor;\n\n        for (let i = 0; i < ln; i++) {\n            streamProcessor = streamProcessors[i];\n            type = streamProcessor.getType();\n\n            if (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.FRAGMENTED_TEXT || type === Constants.TEXT) {\n                arr.push(streamProcessor);\n            }\n        }\n\n        return arr;\n    }\n\n    function updateData(updatedStreamInfo) {\n        logger.info('Manifest updated... updating data system wide.');\n\n        isStreamActivated = false;\n        isUpdating = true;\n        streamInfo = updatedStreamInfo;\n\n        if (eventController) {\n            let events = adapter.getEventsFor(streamInfo);\n            eventController.addInlineEvents(events);\n        }\n\n        filterCodecs(Constants.VIDEO);\n        filterCodecs(Constants.AUDIO);\n\n        for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n            let streamProcessor = streamProcessors[i];\n            let mediaInfo = adapter.getMediaInfoForType(streamInfo, streamProcessor.getType());\n            abrController.updateTopQualityIndex(mediaInfo);\n            streamProcessor.addMediaInfo(mediaInfo, true);\n        }\n\n        if (trackChangedEvent) {\n            let mediaInfo = trackChangedEvent.newMediaInfo;\n            if (mediaInfo.type !== 'fragmentedText') {\n                let processor = getProcessorForMediaInfo(trackChangedEvent.oldMediaInfo);\n                if (!processor) return;\n                processor.switchTrackAsked();\n                trackChangedEvent = undefined;\n            }\n        }\n\n        isUpdating = false;\n        checkIfInitializationCompleted();\n    }\n\n    function isCompatibleWithStream(stream) {\n        return compareCodecs(stream, Constants.VIDEO) && compareCodecs(stream, Constants.AUDIO);\n    }\n\n    function compareCodecs( stream, type ) {\n        const newStreamInfo = stream.getStreamInfo();\n        const currentStreamInfo = getStreamInfo();\n\n        if (!newStreamInfo || !currentStreamInfo) {\n            return false;\n        }\n\n        const newAdaptation = dashManifestModel.getAdaptationForType(manifestModel.getValue(), newStreamInfo.index, type, newStreamInfo);\n        const currentAdaptation = dashManifestModel.getAdaptationForType(manifestModel.getValue(), currentStreamInfo.index, type, currentStreamInfo);\n\n        if (!newAdaptation || !currentAdaptation) {\n            // If there is no adaptation for neither the old or the new stream they're compatible\n            return !newAdaptation && !currentAdaptation;\n        }\n\n        const sameMimeType =  newAdaptation && currentAdaptation && newAdaptation.mimeType === currentAdaptation.mimeType;\n        const oldCodecs = currentAdaptation.Representation_asArray.map((representation) => {\n            return representation.codecs;\n        });\n\n        const newCodecs = newAdaptation.Representation_asArray.map((representation) => {\n            return representation.codecs;\n        });\n\n        const codecMatch = newCodecs.some((newCodec) => {\n            return oldCodecs.indexOf(newCodec) > -1;\n        });\n\n        const partialCodecMatch = newCodecs.some((newCodec) => oldCodecs.some((oldCodec) => codecRootCompatibleWithCodec(oldCodec, newCodec)));\n        return codecMatch || (partialCodecMatch && sameMimeType);\n    }\n\n    // Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n    function codecRootCompatibleWithCodec(codec1, codec2) {\n        const codecRoot = codec1.split('.')[0];\n        const compatTableCodec = codecCompatibilityTable.find((compat) => compat.codec === codecRoot);\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\n        if (compatTableCodec) {\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\n        }\n        return rootCompatible;\n    }\n\n    function setPreloaded(value) {\n        preloaded = value;\n    }\n\n    function getPreloaded() {\n        return preloaded;\n    }\n\n    function preload(mediaSource, previousBuffers) {\n        let events;\n\n        //if initializeMedia is called from a switch period, eventController could have been already created.\n        if (!eventController) {\n            eventController = EventController(context).create();\n\n            eventController.setConfig({\n                manifestModel: manifestModel,\n                manifestUpdater: manifestUpdater,\n                playbackController: playbackController\n            });\n            events = adapter.getEventsFor(streamInfo);\n            eventController.addInlineEvents(events);\n        }\n\n        initializeMediaForType(Constants.VIDEO, mediaSource);\n        initializeMediaForType(Constants.AUDIO, mediaSource);\n        initializeMediaForType(Constants.TEXT, mediaSource);\n        initializeMediaForType(Constants.FRAGMENTED_TEXT, mediaSource);\n        initializeMediaForType(Constants.EMBEDDED_TEXT, mediaSource);\n        initializeMediaForType(Constants.MUXED, mediaSource);\n        initializeMediaForType(Constants.IMAGE, mediaSource);\n\n        createBuffers(previousBuffers);\n\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, instance);\n        for (let i = 0; i < streamProcessors.length && streamProcessors[i]; i++) {\n            streamProcessors[i].getScheduleController().start();\n        }\n\n        setPreloaded(true);\n    }\n\n    instance = {\n        initialize: initialize,\n        activate: activate,\n        deactivate: deactivate,\n        isActive: isActive,\n        getDuration: getDuration,\n        getStartTime: getStartTime,\n        getId: getId,\n        getStreamInfo: getStreamInfo,\n        preload: preload,\n        getFragmentController: getFragmentController,\n        getThumbnailController: getThumbnailController,\n        getEventController: getEventController,\n        getBitrateListFor: getBitrateListFor,\n        startEventController: startEventController,\n        stopEventController: stopEventController,\n        updateData: updateData,\n        reset: reset,\n        getProcessors: getProcessors,\n        setMediaSource: setMediaSource,\n        isCompatibleWithStream: isCompatibleWithStream,\n        getPreloaded: getPreloaded\n    };\n\n    setup();\n    return instance;\n}\n\nStream.__dashjs_factory_name = 'Stream';\nexport default FactoryMaker.getClassFactory(Stream);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants';\nimport LiveEdgeFinder from './utils/LiveEdgeFinder';\nimport BufferController from './controllers/BufferController';\nimport TextBufferController from './text/TextBufferController';\nimport ScheduleController from './controllers/ScheduleController';\nimport RepresentationController from '../dash/controllers/RepresentationController';\nimport FactoryMaker from '../core/FactoryMaker';\n\nimport DashHandler from '../dash/DashHandler';\n\nfunction StreamProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n\n    let indexHandler;\n    let type = config.type;\n    let errHandler = config.errHandler;\n    let mimeType = config.mimeType;\n    let timelineConverter = config.timelineConverter;\n    let adapter = config.adapter;\n    let manifestModel = config.manifestModel;\n    let mediaPlayerModel = config.mediaPlayerModel;\n    let stream = config.stream;\n    let abrController = config.abrController;\n    let playbackController = config.playbackController;\n    let streamController = config.streamController;\n    let mediaController = config.mediaController;\n    let textController = config.textController;\n    let domStorage = config.domStorage;\n    let metricsModel = config.metricsModel;\n    let dashMetrics = config.dashMetrics;\n    let dashManifestModel = config.dashManifestModel;\n\n    let instance,\n        mediaInfo,\n        mediaInfoArr,\n        bufferController,\n        scheduleController,\n        liveEdgeFinder,\n        representationController,\n        fragmentModel,\n        spExternalControllers;\n\n    function setup() {\n        if (playbackController && playbackController.getIsDynamic()) {\n            liveEdgeFinder = LiveEdgeFinder(context).create({\n                timelineConverter: timelineConverter,\n                streamProcessor: instance\n            });\n        }\n        resetInitialSettings();\n    }\n\n    function initialize(mediaSource) {\n        indexHandler = DashHandler(context).create({\n            mimeType: mimeType,\n            timelineConverter: timelineConverter,\n            dashMetrics: dashMetrics,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            baseURLController: config.baseURLController,\n            errHandler: errHandler\n        });\n\n        // initialize controllers\n        indexHandler.initialize(instance);\n        abrController.registerStreamType(type, instance);\n\n        fragmentModel = stream.getFragmentController().getModel(type);\n        fragmentModel.setStreamProcessor(instance);\n\n        bufferController = createBufferControllerForType(type);\n        scheduleController = ScheduleController(context).create({\n            type: type,\n            mimeType: mimeType,\n            metricsModel: metricsModel,\n            adapter: adapter,\n            dashMetrics: dashMetrics,\n            dashManifestModel: dashManifestModel,\n            timelineConverter: timelineConverter,\n            mediaPlayerModel: mediaPlayerModel,\n            abrController: abrController,\n            playbackController: playbackController,\n            streamController: streamController,\n            textController: textController,\n            streamProcessor: instance,\n            mediaController: mediaController\n        });\n        representationController = RepresentationController(context).create();\n        representationController.setConfig({\n            abrController: abrController,\n            domStorage: domStorage,\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            dashManifestModel: dashManifestModel,\n            manifestModel: manifestModel,\n            playbackController: playbackController,\n            timelineConverter: timelineConverter,\n            streamProcessor: instance\n        });\n        bufferController.initialize(mediaSource);\n        scheduleController.initialize();\n        representationController.initialize();\n    }\n\n    function registerExternalController(controller) {\n        spExternalControllers.push(controller);\n    }\n\n    function unregisterExternalController(controller) {\n        var index = spExternalControllers.indexOf(controller);\n\n        if (index !== -1) {\n            spExternalControllers.splice(index, 1);\n        }\n    }\n\n    function getExternalControllers() {\n        return spExternalControllers;\n    }\n\n    function unregisterAllExternalController() {\n        spExternalControllers = [];\n    }\n\n    function resetInitialSettings() {\n        mediaInfoArr = [];\n        mediaInfo = null;\n        unregisterAllExternalController();\n    }\n\n    function reset(errored, keepBuffers) {\n\n        indexHandler.reset();\n\n        if (bufferController) {\n            bufferController.reset(errored, keepBuffers);\n            bufferController = null;\n        }\n\n        if (scheduleController) {\n            scheduleController.reset();\n            scheduleController = null;\n        }\n\n        if (representationController) {\n            representationController.reset();\n            representationController = null;\n        }\n\n        if (abrController) {\n            abrController.unRegisterStreamType(type);\n        }\n        spExternalControllers.forEach(function (controller) {\n            controller.reset();\n        });\n\n        resetInitialSettings();\n        type = null;\n        stream = null;\n        if (liveEdgeFinder) {\n            liveEdgeFinder.reset();\n            liveEdgeFinder = null;\n        }\n    }\n\n    function isUpdating() {\n        return representationController ? representationController.isUpdating() : false;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getRepresentationController() {\n        return representationController;\n    }\n\n    function getIndexHandler() {\n        return indexHandler;\n    }\n\n    function getFragmentController() {\n        return stream ? stream.getFragmentController() : null;\n    }\n\n    function getBuffer() {\n        return bufferController.getBuffer();\n    }\n\n    function setBuffer(buffer) {\n        bufferController.setBuffer(buffer);\n    }\n\n    function getBufferController() {\n        return bufferController;\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function getLiveEdgeFinder() {\n        return liveEdgeFinder;\n    }\n\n    function getStreamInfo() {\n        return stream ? stream.getStreamInfo() : null;\n    }\n\n    function getEventController() {\n        return stream ? stream.getEventController() : null;\n    }\n\n    function selectMediaInfo(newMediaInfo) {\n        if (newMediaInfo !== mediaInfo && (!newMediaInfo || !mediaInfo || (newMediaInfo.type === mediaInfo.type))) {\n            mediaInfo = newMediaInfo;\n        }\n        adapter.updateData(this);\n    }\n\n    function addMediaInfo(newMediaInfo, selectNewMediaInfo) {\n        if (mediaInfoArr.indexOf(newMediaInfo) === -1) {\n            mediaInfoArr.push(newMediaInfo);\n        }\n\n        if (selectNewMediaInfo) {\n            this.selectMediaInfo(newMediaInfo);\n        }\n    }\n\n    function getMediaInfoArr() {\n        return mediaInfoArr;\n    }\n\n    function getMediaInfo() {\n        return mediaInfo;\n    }\n\n    function getMediaSource() {\n        return bufferController.getMediaSource();\n    }\n\n    function setMediaSource(mediaSource) {\n        bufferController.setMediaSource(mediaSource, getMediaInfo());\n    }\n\n    function dischargePreBuffer() {\n        bufferController.dischargePreBuffer();\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getCurrentRepresentationInfo() {\n        return adapter.getCurrentRepresentationInfo(representationController);\n    }\n\n    function getRepresentationInfoForQuality(quality) {\n        return adapter.getRepresentationInfoForQuality(representationController, quality);\n    }\n\n    function isBufferingCompleted() {\n        if (bufferController) {\n            return bufferController.getIsBufferingCompleted();\n        }\n\n        return false;\n    }\n\n    function timeIsBuffered(time) {\n        if (bufferController) {\n            return bufferController.getRangeAt(time, 0) !== null;\n        }\n\n        return false;\n    }\n\n    function getBufferLevel() {\n        return bufferController.getBufferLevel();\n    }\n\n    function switchInitData(representationId, bufferResetEnabled) {\n        if (bufferController) {\n            bufferController.switchInitData(getStreamInfo().id, representationId, bufferResetEnabled);\n        }\n    }\n\n    function createBuffer(previousBuffers) {\n        return (bufferController.getBuffer() || bufferController.createBuffer(mediaInfo, previousBuffers));\n    }\n\n    function switchTrackAsked() {\n        scheduleController.switchTrackAsked();\n    }\n\n    function createBufferControllerForType(type) {\n        let controller = null;\n\n        if (type === Constants.VIDEO || type === Constants.AUDIO) {\n            controller = BufferController(context).create({\n                type: type,\n                metricsModel: metricsModel,\n                mediaPlayerModel: mediaPlayerModel,\n                manifestModel: manifestModel,\n                errHandler: errHandler,\n                streamController: streamController,\n                mediaController: mediaController,\n                adapter: adapter,\n                textController: textController,\n                abrController: abrController,\n                playbackController: playbackController,\n                streamProcessor: instance\n            });\n        } else {\n            controller = TextBufferController(context).create({\n                type: type,\n                mimeType: mimeType,\n                metricsModel: metricsModel,\n                mediaPlayerModel: mediaPlayerModel,\n                manifestModel: manifestModel,\n                errHandler: errHandler,\n                streamController: streamController,\n                mediaController: mediaController,\n                adapter: adapter,\n                textController: textController,\n                abrController: abrController,\n                playbackController: playbackController,\n                streamProcessor: instance\n            });\n        }\n\n        return controller;\n    }\n\n    function getPlaybackController() {\n        return playbackController;\n    }\n\n    instance = {\n        initialize: initialize,\n        isUpdating: isUpdating,\n        getType: getType,\n        getBufferController: getBufferController,\n        getFragmentModel: getFragmentModel,\n        getScheduleController: getScheduleController,\n        getLiveEdgeFinder: getLiveEdgeFinder,\n        getEventController: getEventController,\n        getFragmentController: getFragmentController,\n        getRepresentationController: getRepresentationController,\n        getIndexHandler: getIndexHandler,\n        getPlaybackController: getPlaybackController,\n        getCurrentRepresentationInfo: getCurrentRepresentationInfo,\n        getRepresentationInfoForQuality: getRepresentationInfoForQuality,\n        getBufferLevel: getBufferLevel,\n        switchInitData: switchInitData,\n        isBufferingCompleted: isBufferingCompleted,\n        timeIsBuffered: timeIsBuffered,\n        createBuffer: createBuffer,\n        getStreamInfo: getStreamInfo,\n        selectMediaInfo: selectMediaInfo,\n        addMediaInfo: addMediaInfo,\n        switchTrackAsked: switchTrackAsked,\n        getMediaInfoArr: getMediaInfoArr,\n        getMediaInfo: getMediaInfo,\n        getMediaSource: getMediaSource,\n        setMediaSource: setMediaSource,\n        dischargePreBuffer: dischargePreBuffer,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        registerExternalController: registerExternalController,\n        unregisterExternalController: unregisterExternalController,\n        getExternalControllers: getExternalControllers,\n        unregisterAllExternalController: unregisterAllExternalController,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\nexport default FactoryMaker.getClassFactory(StreamProcessor);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './vo/DashJSError';\nimport HTTPLoader from './net/HTTPLoader';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest';\nimport TextRequest from './vo/TextRequest';\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\n\nconst XLINK_LOADER_ERROR_LOADING_FAILURE = 1;\n\nfunction XlinkLoader(config) {\n\n    config = config || {};\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context  = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let httpLoader = HTTPLoader(context).create({\n        errHandler: config.errHandler,\n        metricsModel: config.metricsModel,\n        mediaPlayerModel: config.mediaPlayerModel,\n        requestModifier: config.requestModifier\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new DashJSError(\n                        XLINK_LOADER_ERROR_LOADING_FAILURE,\n                        'Failed loading Xlink element: ' + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_TYPE);\n\n            httpLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (httpLoader) {\n            httpLoader.abort();\n            httpLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\n\nconst factory = FactoryMaker.getClassFactory(XlinkLoader);\nfactory.XLINK_LOADER_ERROR_LOADING_FAILURE = XLINK_LOADER_ERROR_LOADING_FAILURE;\nFactoryMaker.updateClassFactory(XlinkLoader.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Constants declaration\n * @class\n * @ignore\n */\nclass Constants {\n\n    init () {\n        this.STREAM = 'stream';\n        this.VIDEO = 'video';\n        this.AUDIO = 'audio';\n        this.TEXT = 'text';\n        this.FRAGMENTED_TEXT = 'fragmentedText';\n        this.EMBEDDED_TEXT = 'embeddedText';\n        this.MUXED = 'muxed';\n        this.IMAGE = 'image';\n        this.LOCATION = 'Location';\n        this.INITIALIZE = 'initialize';\n        this.TEXT_SHOWING = 'showing';\n        this.TEXT_HIDDEN = 'hidden';\n        this.CC1 = 'CC1';\n        this.CC3 = 'CC3';\n        this.STPP = 'stpp';\n        this.TTML = 'ttml';\n        this.VTT = 'vtt';\n        this.WVTT = 'wvtt';\n        this.UTF8 = 'utf-8';\n        this.SUGGESTED_PRESENTATION_DELAY = 'suggestedPresentationDelay';\n        this.SCHEME_ID_URI = 'schemeIdUri';\n        this.START_TIME = 'starttime';\n        this.ABR_STRATEGY_DYNAMIC = 'abrDynamic';\n        this.ABR_STRATEGY_BOLA = 'abrBola';\n        this.ABR_STRATEGY_THROUGHPUT = 'abrThroughput';\n        this.MOVING_AVERAGE_SLIDING_WINDOW = 'slidingWindow';\n        this.MOVING_AVERAGE_EWMA = 'ewma';\n    }\n\n    constructor () {\n        this.init();\n    }\n}\n\nlet constants = new Constants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Metrics Constants declaration\n * @class\n * @ignore\n */\nclass MetricsConstants {\n\n    init () {\n        this.TCP_CONNECTION = 'TcpList';\n        this.HTTP_REQUEST = 'HttpList';\n        this.TRACK_SWITCH = 'RepSwitchList';\n        this.BUFFER_LEVEL = 'BufferLevel';\n        this.BUFFER_STATE = 'BufferState';\n        this.DVR_INFO = 'DVRInfo';\n        this.DROPPED_FRAMES = 'DroppedFrames';\n        this.SCHEDULING_INFO = 'SchedulingInfo';\n        this.REQUESTS_QUEUE = 'RequestsQueue';\n        this.MANIFEST_UPDATE = 'ManifestUpdate';\n        this.MANIFEST_UPDATE_STREAM_INFO = 'ManifestUpdatePeriodInfo';\n        this.MANIFEST_UPDATE_TRACK_INFO = 'ManifestUpdateRepresentationInfo';\n        this.PLAY_LIST = 'PlayList';\n        this.DVB_ERRORS = 'DVBErrors';\n    }\n\n    constructor() {\n        this.init();\n    }\n}\n\nlet constants = new MetricsConstants();\nexport default constants;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport FragmentModel from '../models/FragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport RulesContext from '../rules/RulesContext';\nimport SwitchRequest from '../rules/SwitchRequest';\nimport SwitchRequestHistory from '../rules/SwitchRequestHistory';\nimport DroppedFramesHistory from '../rules/DroppedFramesHistory';\nimport ThroughputHistory from '../rules/ThroughputHistory';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport Debug from '../../core/Debug';\n\nconst ABANDON_LOAD = 'abandonload';\nconst ALLOW_LOAD = 'allowload';\nconst DEFAULT_VIDEO_BITRATE = 1000;\nconst DEFAULT_AUDIO_BITRATE = 100;\nconst QUALITY_DEFAULT = 0;\n\nfunction AbrController() {\n\n    const context = this.context;\n    const debug = Debug(context).getInstance();\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        abrRulesCollection,\n        streamController,\n        autoSwitchBitrate,\n        topQualities,\n        qualityDict,\n        bitrateDict,\n        ratioDict,\n        streamProcessorDict,\n        abandonmentStateDict,\n        abandonmentTimeout,\n        limitBitrateByPortal,\n        usePixelRatioInLimitBitrateByPortal,\n        windowResizeEventCalled,\n        elementWidth,\n        elementHeight,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        videoModel,\n        mediaPlayerModel,\n        domStorage,\n        playbackIndex,\n        switchHistoryDict,\n        droppedFramesHistory,\n        throughputHistory,\n        isUsingBufferOccupancyABRDict,\n        metricsModel,\n        dashMetrics,\n        useDeadTimeLatency;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n    }\n\n    function registerStreamType(type, streamProcessor) {\n        switchHistoryDict[type] = SwitchRequestHistory(context).create();\n        streamProcessorDict[type] = streamProcessor;\n        abandonmentStateDict[type] = abandonmentStateDict[type] || {};\n        abandonmentStateDict[type].state = ALLOW_LOAD;\n        isUsingBufferOccupancyABRDict[type] = false;\n        eventBus.on(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n        if (type == Constants.VIDEO) {\n            eventBus.on(Events.QUALITY_CHANGE_RENDERED, onQualityChangeRendered, this);\n            droppedFramesHistory = DroppedFramesHistory(context).create();\n            setElementSize();\n        }\n        eventBus.on(Events.METRIC_ADDED, onMetricAdded, this);\n        eventBus.on(Events.PERIOD_SWITCH_COMPLETED, createAbrRulesCollection, this);\n\n        throughputHistory = ThroughputHistory(context).create({\n            mediaPlayerModel: mediaPlayerModel\n        });\n    }\n\n    function unRegisterStreamType(type) {\n        delete streamProcessorDict[type];\n    }\n\n    function createAbrRulesCollection() {\n        abrRulesCollection = ABRRulesCollection(context).create({\n            metricsModel: metricsModel,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            adapter: adapter\n        });\n\n        abrRulesCollection.initialize();\n    }\n\n    function resetInitialSettings() {\n        autoSwitchBitrate = {video: true, audio: true};\n        topQualities = {};\n        qualityDict = {};\n        bitrateDict = {};\n        ratioDict = {};\n        abandonmentStateDict = {};\n        streamProcessorDict = {};\n        switchHistoryDict = {};\n        isUsingBufferOccupancyABRDict = {};\n        limitBitrateByPortal = false;\n        useDeadTimeLatency = true;\n        usePixelRatioInLimitBitrateByPortal = false;\n        if (windowResizeEventCalled === undefined) {\n            windowResizeEventCalled = false;\n        }\n        playbackIndex = undefined;\n        droppedFramesHistory = undefined;\n        throughputHistory = undefined;\n        clearTimeout(abandonmentTimeout);\n        abandonmentTimeout = null;\n    }\n\n    function reset() {\n\n        resetInitialSettings();\n\n        eventBus.off(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n        eventBus.off(Events.QUALITY_CHANGE_RENDERED, onQualityChangeRendered, this);\n        eventBus.off(Events.METRIC_ADDED, onMetricAdded, this);\n        eventBus.off(Events.PERIOD_SWITCH_COMPLETED, createAbrRulesCollection, this);\n\n        if (abrRulesCollection) {\n            abrRulesCollection.reset();\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function onQualityChangeRendered(e) {\n        if (e.mediaType === Constants.VIDEO) {\n            playbackIndex = e.oldQuality;\n            droppedFramesHistory.push(playbackIndex, videoModel.getPlaybackQuality());\n        }\n    }\n\n    function onMetricAdded(e) {\n        if (e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            throughputHistory.push(e.mediaType, e.value, useDeadTimeLatency);\n        }\n\n        if (e.metric === MetricsConstants.BUFFER_LEVEL && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            updateIsUsingBufferOccupancyABR(e.mediaType, 0.001 * e.value.level);\n        }\n    }\n\n    function getTopQualityIndexFor(type, id) {\n        let idx;\n        topQualities[id] = topQualities[id] || {};\n\n        if (!topQualities[id].hasOwnProperty(type)) {\n            topQualities[id][type] = 0;\n        }\n\n        idx = checkMaxBitrate(topQualities[id][type], type);\n        idx = checkMaxRepresentationRatio(idx, type, topQualities[id][type]);\n        idx = checkPortalSize(idx, type);\n        return idx;\n    }\n\n    /**\n     * Gets top BitrateInfo for the player\n     * @param {string} type - 'video' or 'audio' are the type options.\n     * @returns {BitrateInfo | null}\n     */\n    function getTopBitrateInfoFor(type) {\n        if (type  && streamProcessorDict && streamProcessorDict[type]) {\n            const streamInfo = streamProcessorDict[type].getStreamInfo();\n            if (streamInfo.id) {\n                const idx = getTopQualityIndexFor(type, streamInfo.id);\n                const bitrates = getBitrateList(streamProcessorDict[type].getMediaInfo());\n                return bitrates[idx] ? bitrates[idx] : null;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function getInitialBitrateFor(type) {\n        const savedBitrate = domStorage.getSavedBitrateSettings(type);\n\n        if (!bitrateDict.hasOwnProperty(type)) {\n            if (ratioDict.hasOwnProperty(type)) {\n                const manifest = manifestModel.getValue();\n                const representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\n\n                if (Array.isArray(representation)) {\n                    const repIdx = Math.max(Math.round(representation.length * ratioDict[type]) - 1, 0);\n                    bitrateDict[type] = representation[repIdx].bandwidth;\n                } else {\n                    bitrateDict[type] = 0;\n                }\n            } else if (!isNaN(savedBitrate)) {\n                bitrateDict[type] = savedBitrate;\n            } else {\n                bitrateDict[type] = (type === Constants.VIDEO) ? DEFAULT_VIDEO_BITRATE : DEFAULT_AUDIO_BITRATE;\n            }\n        }\n\n        return bitrateDict[type];\n    }\n\n    /**\n     * @param {string} type\n     * @param {number} value A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function setInitialBitrateFor(type, value) {\n        bitrateDict[type] = value;\n    }\n\n    function getInitialRepresentationRatioFor(type) {\n        if (!ratioDict.hasOwnProperty(type)) {\n            return null;\n        }\n\n        return ratioDict[type];\n    }\n\n    function setInitialRepresentationRatioFor(type, value) {\n        ratioDict[type] = value;\n    }\n\n    function getMaxAllowedBitrateFor(type) {\n        if (bitrateDict.hasOwnProperty('max') && bitrateDict.max.hasOwnProperty(type)) {\n            return bitrateDict.max[type];\n        }\n        return NaN;\n    }\n\n    function getMinAllowedBitrateFor(type) {\n        if (bitrateDict.hasOwnProperty('min') && bitrateDict.min.hasOwnProperty(type)) {\n            return bitrateDict.min[type];\n        }\n        return NaN;\n    }\n\n    //TODO  change bitrateDict structure to hold one object for video and audio with initial and max values internal.\n    // This means you need to update all the logic around initial bitrate DOMStorage, RebController etc...\n    function setMaxAllowedBitrateFor(type, value) {\n        bitrateDict.max = bitrateDict.max || {};\n        bitrateDict.max[type] = value;\n    }\n\n    function setMinAllowedBitrateFor(type, value) {\n        bitrateDict.min = bitrateDict.min || {};\n        bitrateDict.min[type] = value;\n    }\n\n    function getMaxAllowedIndexFor(type) {\n        const maxBitrate = getMaxAllowedBitrateFor(type);\n        if (maxBitrate) {\n            return getQualityForBitrate(streamProcessorDict[type].getMediaInfo(), maxBitrate);\n        } else {\n            return undefined;\n        }\n    }\n\n    function getMinAllowedIndexFor(type) {\n        const minBitrate = getMinAllowedBitrateFor(type);\n        if (minBitrate) {\n            const bitrateList = getBitrateList(streamProcessorDict[type].getMediaInfo());\n            // This returns the quality index <= for the given bitrate\n            let minIdx = getQualityForBitrate(streamProcessorDict[type].getMediaInfo(), minBitrate);\n            if (bitrateList[minIdx] && minIdx < bitrateList.length - 1 && bitrateList[minIdx].bitrate < minBitrate * 1000) {\n                minIdx++; // Go to the next bitrate\n            }\n            return minIdx;\n        } else {\n            return undefined;\n        }\n    }\n\n    function getMaxAllowedRepresentationRatioFor(type) {\n        if (ratioDict.hasOwnProperty('max') && ratioDict.max.hasOwnProperty(type)) {\n            return ratioDict.max[type];\n        }\n        return 1;\n    }\n\n    function setMaxAllowedRepresentationRatioFor(type, value) {\n        ratioDict.max = ratioDict.max || {};\n        ratioDict.max[type] = value;\n    }\n\n    function getAutoSwitchBitrateFor(type) {\n        return autoSwitchBitrate[type];\n    }\n\n    function setAutoSwitchBitrateFor(type, value) {\n        autoSwitchBitrate[type] = value;\n    }\n\n    function getLimitBitrateByPortal() {\n        return limitBitrateByPortal;\n    }\n\n    function setLimitBitrateByPortal(value) {\n        limitBitrateByPortal = value;\n    }\n\n    function getUsePixelRatioInLimitBitrateByPortal() {\n        return usePixelRatioInLimitBitrateByPortal;\n    }\n\n    function setUsePixelRatioInLimitBitrateByPortal(value) {\n        usePixelRatioInLimitBitrateByPortal = value;\n    }\n\n    function getUseDeadTimeLatency() {\n        return useDeadTimeLatency;\n    }\n\n    function setUseDeadTimeLatency(value) {\n        useDeadTimeLatency = value;\n    }\n\n    function checkPlaybackQuality(type) {\n        if (type  && streamProcessorDict && streamProcessorDict[type]) {\n            const streamInfo = streamProcessorDict[type].getStreamInfo();\n            const streamId = streamInfo ? streamInfo.id : null;\n            const oldQuality = getQualityFor(type);\n            const rulesContext = RulesContext(context).create({\n                abrController: instance,\n                streamProcessor: streamProcessorDict[type],\n                currentValue: oldQuality,\n                switchHistory: switchHistoryDict[type],\n                droppedFramesHistory: droppedFramesHistory,\n                useBufferOccupancyABR: useBufferOccupancyABR(type)\n            });\n\n            if (droppedFramesHistory) {\n                const playbackQuality = videoModel.getPlaybackQuality();\n                if (playbackQuality) {\n                    droppedFramesHistory.push(playbackIndex, playbackQuality);\n                }\n            }\n            if (getAutoSwitchBitrateFor(type)) {\n                const minIdx = getMinAllowedIndexFor(type);\n                const topQualityIdx = getTopQualityIndexFor(type, streamId);\n                const switchRequest = abrRulesCollection.getMaxQuality(rulesContext);\n                let newQuality = switchRequest.quality;\n                if (minIdx !== undefined && newQuality < minIdx) {\n                    newQuality = minIdx;\n                }\n                if (newQuality > topQualityIdx) {\n                    newQuality = topQualityIdx;\n                }\n\n                switchHistoryDict[type].push({oldValue: oldQuality, newValue: newQuality});\n\n                if (newQuality > SwitchRequest.NO_CHANGE && newQuality != oldQuality) {\n                    if (abandonmentStateDict[type].state === ALLOW_LOAD || newQuality > oldQuality) {\n                        changeQuality(type, oldQuality, newQuality, topQualityIdx, switchRequest.reason);\n                    }\n                } else if (debug.getLogToBrowserConsole()) {\n                    const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(type));\n                    logger.debug('AbrController (' + type + ') stay on ' + oldQuality + '/' + topQualityIdx + ' (buffer: ' + bufferLevel + ')');\n                }\n            }\n        }\n    }\n\n    function setPlaybackQuality(type, streamInfo, newQuality, reason) {\n        const id = streamInfo.id;\n        const oldQuality = getQualityFor(type);\n        const isInt = newQuality !== null && !isNaN(newQuality) && (newQuality % 1 === 0);\n\n        if (!isInt) throw new Error('argument is not an integer');\n\n        const topQualityIdx = getTopQualityIndexFor(type, id);\n        if (newQuality !== oldQuality && newQuality >= 0 && newQuality <= topQualityIdx) {\n            changeQuality(type, oldQuality, newQuality, topQualityIdx, reason);\n        }\n    }\n\n    function changeQuality(type, oldQuality, newQuality, topQualityIdx, reason) {\n        if (type  && streamProcessorDict[type]) {\n            const streamInfo = streamProcessorDict[type].getStreamInfo();\n            const id = streamInfo ? streamInfo.id : null;\n            if (debug.getLogToBrowserConsole()) {\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(type));\n                logger.info('AbrController (' + type + ') switch from ' + oldQuality + ' to ' + newQuality + '/' + topQualityIdx + ' (buffer: ' + bufferLevel + ') ' + (reason ? JSON.stringify(reason) : '.'));\n            }\n            setQualityFor(type, id, newQuality);\n            eventBus.trigger(Events.QUALITY_CHANGE_REQUESTED, {mediaType: type, streamInfo: streamInfo, oldQuality: oldQuality, newQuality: newQuality, reason: reason});\n        }\n    }\n\n    function setAbandonmentStateFor(type, state) {\n        abandonmentStateDict[type].state = state;\n    }\n\n    function getAbandonmentStateFor(type) {\n        return abandonmentStateDict[type] ? abandonmentStateDict[type].state : null;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @param {number} bitrate A bitrate value, kbps\n     * @param {number} latency Expected latency of connection, ms\n     * @returns {number} A quality index <= for the given bitrate\n     * @memberof AbrController#\n     */\n    function getQualityForBitrate(mediaInfo, bitrate, latency) {\n        if (useDeadTimeLatency && latency && streamProcessorDict[mediaInfo.type].getCurrentRepresentationInfo() && streamProcessorDict[mediaInfo.type].getCurrentRepresentationInfo().fragmentDuration) {\n            latency = latency / 1000;\n            const fragmentDuration = streamProcessorDict[mediaInfo.type].getCurrentRepresentationInfo().fragmentDuration;\n            if (latency > fragmentDuration) {\n                return 0;\n            } else {\n                const deadTimeRatio = latency / fragmentDuration;\n                bitrate = bitrate * (1 - deadTimeRatio);\n            }\n        }\n\n        const bitrateList = getBitrateList(mediaInfo);\n        if (!bitrateList || bitrateList.length === 0) {\n            return QUALITY_DEFAULT;\n        }\n\n        for (let i = bitrateList.length - 1; i >= 0; i--) {\n            const bitrateInfo = bitrateList[i];\n            if (bitrate * 1000 >= bitrateInfo.bitrate) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @param {MediaInfo} mediaInfo\n     * @returns {Array|null} A list of {@link BitrateInfo} objects\n     * @memberof AbrController#\n     */\n    function getBitrateList(mediaInfo) {\n        if (!mediaInfo || !mediaInfo.bitrateList) return null;\n\n        const bitrateList = mediaInfo.bitrateList;\n        const type = mediaInfo.type;\n\n        const infoList = [];\n        let bitrateInfo;\n\n        for (let i = 0, ln = bitrateList.length; i < ln; i++) {\n            bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = type;\n            bitrateInfo.qualityIndex = i;\n            bitrateInfo.bitrate = bitrateList[i].bandwidth;\n            bitrateInfo.width = bitrateList[i].width;\n            bitrateInfo.height = bitrateList[i].height;\n            bitrateInfo.scanType = bitrateList[i].scanType;\n            infoList.push(bitrateInfo);\n        }\n\n        return infoList;\n    }\n\n    function updateIsUsingBufferOccupancyABR(mediaType, bufferLevel) {\n        const strategy = mediaPlayerModel.getABRStrategy();\n\n        if (strategy === Constants.ABR_STRATEGY_BOLA) {\n            isUsingBufferOccupancyABRDict[mediaType] = true;\n            return;\n        } else if (strategy === Constants.ABR_STRATEGY_THROUGHPUT) {\n            isUsingBufferOccupancyABRDict[mediaType] = false;\n            return;\n        }\n        // else ABR_STRATEGY_DYNAMIC\n\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n        const switchOnThreshold = stableBufferTime;\n        const switchOffThreshold = 0.5 * stableBufferTime;\n\n        const useBufferABR = isUsingBufferOccupancyABRDict[mediaType];\n        const newUseBufferABR = bufferLevel > (useBufferABR ? switchOffThreshold : switchOnThreshold); // use hysteresis to avoid oscillating rules\n        isUsingBufferOccupancyABRDict[mediaType] = newUseBufferABR;\n\n        if (newUseBufferABR !== useBufferABR) {\n            if (newUseBufferABR) {\n                logger.info('AbrController (' + mediaType + ') switching from throughput to buffer occupancy ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n            } else {\n                logger.info('AbrController (' + mediaType + ') switching from buffer occupancy to throughput ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n            }\n        }\n    }\n\n    function useBufferOccupancyABR(mediaType) {\n        return isUsingBufferOccupancyABRDict[mediaType];\n    }\n\n    function getThroughputHistory() {\n        return throughputHistory;\n    }\n\n    function updateTopQualityIndex(mediaInfo) {\n        const type = mediaInfo.type;\n        const streamId = mediaInfo.streamInfo.id;\n        const max = mediaInfo.representationCount - 1;\n\n        setTopQualityIndex(type, streamId, max);\n\n        return max;\n    }\n\n    function isPlayingAtTopQuality(streamInfo) {\n        const streamId = streamInfo.id;\n        const audioQuality = getQualityFor(Constants.AUDIO);\n        const videoQuality = getQualityFor(Constants.VIDEO);\n\n        const isAtTop = (audioQuality === getTopQualityIndexFor(Constants.AUDIO, streamId)) &&\n            (videoQuality === getTopQualityIndexFor(Constants.VIDEO, streamId));\n\n        return isAtTop;\n    }\n\n    function getQualityFor(type) {\n        if (type && streamProcessorDict[type]) {\n            const streamInfo = streamProcessorDict[type].getStreamInfo();\n            const id = streamInfo ? streamInfo.id : null;\n            let quality;\n\n            if (id) {\n                qualityDict[id] = qualityDict[id] || {};\n\n                if (!qualityDict[id].hasOwnProperty(type)) {\n                    qualityDict[id][type] = QUALITY_DEFAULT;\n                }\n\n                quality = qualityDict[id][type];\n                return quality;\n            }\n        }\n        return QUALITY_DEFAULT;\n    }\n\n    function setQualityFor(type, id, value) {\n        qualityDict[id] = qualityDict[id] || {};\n        qualityDict[id][type] = value;\n    }\n\n    function setTopQualityIndex(type, id, value) {\n        topQualities[id] = topQualities[id] || {};\n        topQualities[id][type] = value;\n    }\n\n    function checkMaxBitrate(idx, type) {\n        let newIdx = idx;\n\n        if (!streamProcessorDict[type]) {\n            return newIdx;\n        }\n\n        const minIdx = getMinAllowedIndexFor(type);\n        if (minIdx !== undefined) {\n            newIdx = Math.max (idx , minIdx);\n        }\n\n        const maxIdx = getMaxAllowedIndexFor(type);\n        if (maxIdx !== undefined) {\n            newIdx = Math.min (newIdx , maxIdx);\n        }\n\n        return newIdx;\n    }\n\n    function checkMaxRepresentationRatio(idx, type, maxIdx) {\n        const maxRepresentationRatio = getMaxAllowedRepresentationRatioFor(type);\n        if (isNaN(maxRepresentationRatio) || maxRepresentationRatio >= 1 || maxRepresentationRatio < 0) {\n            return idx;\n        }\n        return Math.min(idx , Math.round(maxIdx * maxRepresentationRatio) );\n    }\n\n    function setWindowResizeEventCalled(value) {\n        windowResizeEventCalled = value;\n    }\n\n    function setElementSize() {\n        if (videoModel) {\n            const hasPixelRatio = usePixelRatioInLimitBitrateByPortal && window.hasOwnProperty('devicePixelRatio');\n            const pixelRatio = hasPixelRatio ? window.devicePixelRatio : 1;\n            elementWidth = videoModel.getClientWidth() * pixelRatio;\n            elementHeight = videoModel.getClientHeight() * pixelRatio;\n        }\n    }\n\n    function checkPortalSize(idx, type) {\n        if (type !== Constants.VIDEO || !limitBitrateByPortal || !streamProcessorDict[type]) {\n            return idx;\n        }\n\n        if (!windowResizeEventCalled) {\n            setElementSize();\n        }\n\n        const manifest = manifestModel.getValue();\n        const representation = dashManifestModel.getAdaptationForType(manifest, 0, type).Representation;\n        let newIdx = idx;\n\n        if (elementWidth > 0 && elementHeight > 0) {\n            while (\n                newIdx > 0 &&\n                representation[newIdx] &&\n                elementWidth < representation[newIdx].width &&\n                elementWidth - representation[newIdx - 1].width < representation[newIdx].width - elementWidth\n            ) {\n                newIdx = newIdx - 1;\n            }\n\n            if (representation.length - 2 >= newIdx && representation[newIdx].width === representation[newIdx + 1].width) {\n                newIdx = Math.min(idx, newIdx + 1);\n            }\n        }\n\n        return newIdx;\n    }\n\n    function onFragmentLoadProgress(e) {\n        const type = e.request.mediaType;\n        if (getAutoSwitchBitrateFor(type)) {\n            const streamProcessor = streamProcessorDict[type];\n            if (!streamProcessor) return;// There may be a fragment load in progress when we switch periods and recreated some controllers.\n\n            const rulesContext = RulesContext(context).create({\n                abrController: instance,\n                streamProcessor: streamProcessor,\n                currentRequest: e.request,\n                useBufferOccupancyABR: useBufferOccupancyABR(type)\n            });\n            const switchRequest = abrRulesCollection.shouldAbandonFragment(rulesContext);\n\n            if (switchRequest.quality > SwitchRequest.NO_CHANGE) {\n                const fragmentModel = streamProcessor.getFragmentModel();\n                const request = fragmentModel.getRequests({state: FragmentModel.FRAGMENT_MODEL_LOADING, index: e.request.index})[0];\n                if (request) {\n                    //TODO Check if we should abort or if better to finish download. check bytesLoaded/Total\n                    fragmentModel.abortRequests();\n                    setAbandonmentStateFor(type, ABANDON_LOAD);\n                    switchHistoryDict[type].reset();\n                    switchHistoryDict[type].push({oldValue: getQualityFor(type, streamController.getActiveStreamInfo()), newValue: switchRequest.quality, confidence: 1, reason: switchRequest.reason});\n                    setPlaybackQuality(type, streamController.getActiveStreamInfo(), switchRequest.quality, switchRequest.reason);\n\n                    clearTimeout(abandonmentTimeout);\n                    abandonmentTimeout = setTimeout(\n                        () => {setAbandonmentStateFor(type, ALLOW_LOAD); abandonmentTimeout = null;},\n                        mediaPlayerModel.getAbandonLoadTimeout()\n                    );\n                }\n            }\n        }\n    }\n\n    instance = {\n        isPlayingAtTopQuality: isPlayingAtTopQuality,\n        updateTopQualityIndex: updateTopQualityIndex,\n        getThroughputHistory: getThroughputHistory,\n        getBitrateList: getBitrateList,\n        getQualityForBitrate: getQualityForBitrate,\n        getMaxAllowedBitrateFor: getMaxAllowedBitrateFor,\n        getTopBitrateInfoFor: getTopBitrateInfoFor,\n        getMinAllowedBitrateFor: getMinAllowedBitrateFor,\n        setMaxAllowedBitrateFor: setMaxAllowedBitrateFor,\n        setMinAllowedBitrateFor: setMinAllowedBitrateFor,\n        getMaxAllowedIndexFor: getMaxAllowedIndexFor,\n        getMinAllowedIndexFor: getMinAllowedIndexFor,\n        getMaxAllowedRepresentationRatioFor: getMaxAllowedRepresentationRatioFor,\n        setMaxAllowedRepresentationRatioFor: setMaxAllowedRepresentationRatioFor,\n        getInitialBitrateFor: getInitialBitrateFor,\n        setInitialBitrateFor: setInitialBitrateFor,\n        getInitialRepresentationRatioFor: getInitialRepresentationRatioFor,\n        setInitialRepresentationRatioFor: setInitialRepresentationRatioFor,\n        setAutoSwitchBitrateFor: setAutoSwitchBitrateFor,\n        getAutoSwitchBitrateFor: getAutoSwitchBitrateFor,\n        getUseDeadTimeLatency: getUseDeadTimeLatency,\n        setUseDeadTimeLatency: setUseDeadTimeLatency,\n        setLimitBitrateByPortal: setLimitBitrateByPortal,\n        getLimitBitrateByPortal: getLimitBitrateByPortal,\n        getUsePixelRatioInLimitBitrateByPortal: getUsePixelRatioInLimitBitrateByPortal,\n        setUsePixelRatioInLimitBitrateByPortal: setUsePixelRatioInLimitBitrateByPortal,\n        getQualityFor: getQualityFor,\n        getAbandonmentStateFor: getAbandonmentStateFor,\n        setPlaybackQuality: setPlaybackQuality,\n        checkPlaybackQuality: checkPlaybackQuality,\n        getTopQualityIndexFor: getTopQualityIndexFor,\n        setElementSize: setElementSize,\n        setWindowResizeEventCalled: setWindowResizeEventCalled,\n        createAbrRulesCollection: createAbrRulesCollection,\n        registerStreamType: registerStreamType,\n        unRegisterStreamType: unRegisterStreamType,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbrController.__dashjs_factory_name = 'AbrController';\nconst factory = FactoryMaker.getSingletonFactory(AbrController);\nfactory.ABANDON_LOAD = ABANDON_LOAD;\nfactory.QUALITY_DEFAULT = QUALITY_DEFAULT;\nFactoryMaker.updateSingletonFactory(AbrController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction BaseURLController() {\n\n    let instance;\n    let dashManifestModel;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelectorFromManifest(manifest);\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n        baseURLSelector.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset: reset,\n        initialize: initialize,\n        resolve: resolve,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getSingletonFactory(BaseURLController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    config = config || {};\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const addBlacklistEventName = config.addBlacklistEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(\n            updateEventName,\n            {\n                entry: entry\n            }\n        );\n    }\n\n    function onAddBlackList(e) {\n        add(e.entry);\n    }\n\n    function setup() {\n        if (addBlacklistEventName) {\n            eventBus.on(addBlacklistEventName, onAddBlackList, this);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    setup();\n\n    return {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FragmentModel from '../models/FragmentModel';\nimport SourceBufferSink from '../SourceBufferSink';\nimport PreBufferSink from '../PreBufferSink';\nimport AbrController from './AbrController';\nimport MediaController from './MediaController';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport BoxParser from '../utils/BoxParser';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\n\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\n\nconst BUFFER_LOADED = 'bufferLoaded';\nconst BUFFER_EMPTY = 'bufferStalled';\nconst STALL_THRESHOLD = 0.5;\nconst BUFFER_END_THRESHOLD = 0.5;\nconst BUFFER_RANGE_CALCULATION_THRESHOLD = 0.01;\nconst QUOTA_EXCEEDED_ERROR_CODE = 22;\n\nconst BUFFER_CONTROLLER_TYPE = 'BufferController';\n\nfunction BufferController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const errHandler = config.errHandler;\n    const streamController = config.streamController;\n    const mediaController = config.mediaController;\n    const adapter = config.adapter;\n    const textController = config.textController;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const type = config.type;\n    const streamProcessor = config.streamProcessor;\n\n    let instance,\n        logger,\n        requiredQuality,\n        isBufferingCompleted,\n        bufferLevel,\n        criticalBufferLevel,\n        mediaSource,\n        maxAppendedIndex,\n        lastIndex,\n        buffer,\n        dischargeBuffer,\n        bufferState,\n        appendedBytesInfo,\n        wallclockTicked,\n        isPruningInProgress,\n        initCache,\n        seekStartTime,\n        seekClearedBufferingCompleted,\n        pendingPruningRanges,\n        bufferResetInProgress,\n        mediaChunk;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        initCache = InitCache(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    function initialize(Source) {\n        setMediaSource(Source);\n\n        requiredQuality = abrController.getQualityFor(type, streamProcessor.getStreamInfo());\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.on(Events.PLAYBACK_PLAYING, onPlaybackPlaying, this);\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.PLAYBACK_SEEKED, onPlaybackSeeked, this);\n        eventBus.on(Events.PLAYBACK_STALLED, onPlaybackStalled, this);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this, EventBus.EVENT_PRIORITY_HIGH);\n        eventBus.on(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\n    }\n\n    function createBuffer(mediaInfo, oldBuffers) {\n        if (!initCache || !mediaInfo || !streamProcessor) return null;\n        if (mediaSource) {\n            try {\n                if (oldBuffers && oldBuffers[type]) {\n                    buffer = SourceBufferSink(context).create(mediaSource, mediaInfo, onAppended.bind(this), oldBuffers[type]);\n                } else {\n                    buffer = SourceBufferSink(context).create(mediaSource, mediaInfo, onAppended.bind(this));\n                }\n                if (typeof buffer.getBuffer().initialize === 'function') {\n                    buffer.getBuffer().initialize(type, streamProcessor);\n                }\n            } catch (e) {\n                logger.fatal('Caught error on create SourceBuffer: ' + e);\n                errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\n            }\n        } else {\n            buffer = PreBufferSink(context).create(onAppended.bind(this));\n        }\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(requiredQuality).MSETimeOffset);\n        return buffer;\n    }\n\n    function dischargePreBuffer() {\n        if (buffer && dischargeBuffer && typeof dischargeBuffer.discharge === 'function') {\n            const ranges = dischargeBuffer.getAllBufferRanges();\n\n            if (ranges.length > 0) {\n                let rangeStr = 'Beginning ' + type + 'PreBuffer discharge, adding buffer for:';\n                for (let i = 0; i < ranges.length; i++) {\n                    rangeStr += ' start: ' + ranges.start(i) + ', end: ' + ranges.end(i) + ';';\n                }\n                logger.debug(rangeStr);\n            } else {\n                logger.debug('PreBuffer discharge requested, but there were no media segments in the PreBuffer.');\n            }\n\n            let chunks = dischargeBuffer.discharge();\n            let lastInit = null;\n            for (let j = 0; j < chunks.length; j++) {\n                const chunk = chunks[j];\n                const initChunk = initCache.extract(chunk.streamId, chunk.representationId);\n                if (initChunk) {\n                    if (lastInit !== initChunk) {\n                        buffer.append(initChunk);\n                        lastInit = initChunk;\n                    }\n                    buffer.append(chunk); //TODO Think about supressing buffer events the second time round after a discharge?\n                }\n            }\n\n            dischargeBuffer.reset();\n            dischargeBuffer = null;\n        }\n    }\n\n    function isActive() {\n        return streamProcessor && streamController && streamProcessor.getStreamInfo();\n    }\n\n    function onInitFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n        logger.info('Init fragment finished loading saving to', type + '\\'s init cache');\n        initCache.save(e.chunk);\n        logger.debug('Append Init fragment', type, ' with representationId:', e.chunk.representationId, ' and quality:', e.chunk.quality);\n        appendToBuffer(e.chunk);\n    }\n\n    function switchInitData(streamId, representationId, bufferResetEnabled) {\n        const chunk = initCache.extract(streamId, representationId);\n        bufferResetInProgress = bufferResetEnabled === true ? bufferResetEnabled : false;\n        if (chunk) {\n            logger.info('Append Init fragment', type, ' with representationId:', chunk.representationId, ' and quality:', chunk.quality);\n            appendToBuffer(chunk);\n        } else {\n            eventBus.trigger(Events.INIT_REQUESTED, { sender: instance });\n        }\n    }\n\n    function onMediaFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n\n        const chunk = e.chunk;\n        const bytes = chunk.bytes;\n        const quality = chunk.quality;\n        const currentRepresentation = streamProcessor.getRepresentationInfoForQuality(quality);\n        const eventStreamMedia = adapter.getEventsFor(currentRepresentation.mediaInfo, streamProcessor);\n        const eventStreamTrack = adapter.getEventsFor(currentRepresentation, streamProcessor);\n\n        if (eventStreamMedia && eventStreamMedia.length > 0 || eventStreamTrack && eventStreamTrack.length > 0) {\n            const request = streamProcessor.getFragmentModel().getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                quality: quality,\n                index: chunk.index\n            })[0];\n\n            const events = handleInbandEvents(bytes, request, eventStreamMedia, eventStreamTrack);\n            streamProcessor.getEventController().addInbandEvents(events);\n        }\n\n        if (bufferResetInProgress) {\n            mediaChunk = chunk;\n            const ranges = buffer && buffer.getAllBufferRanges();\n            if (ranges && ranges.length > 0 && playbackController.getTimeToStreamEnd() > STALL_THRESHOLD) {\n                logger.debug('Clearing buffer because track changed - ' + (ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD));\n                clearBuffers([{\n                    start: 0,\n                    end: ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD,\n                    force: true // Force buffer removal even when buffering is completed and MediaSource is ended\n                }]);\n            }\n        } else {\n            appendToBuffer(chunk);\n        }\n    }\n\n    function appendToBuffer(chunk) {\n        buffer.append(chunk);\n\n        if (chunk.mediaInfo.type === Constants.VIDEO) {\n            eventBus.trigger(Events.VIDEO_CHUNK_RECEIVED, { chunk: chunk });\n        }\n    }\n\n    function showBufferRanges(ranges) {\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                logger.debug('Buffered Range for type:', type, ':', ranges.start(i), ' - ', ranges.end(i), ' currentTime = ', playbackController.getTime());\n            }\n        }\n    }\n\n    function onAppended(e) {\n        if (e.error) {\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE) {\n                criticalBufferLevel = getTotalBufferedTime() * 0.8;\n                logger.warn('Quota exceeded for type: ' + type + ', Critical Buffer: ' + criticalBufferLevel);\n\n                if (criticalBufferLevel > 0) {\n                    // recalculate buffer lengths to keep (bufferToKeep, bufferAheadToKeep, bufferTimeAtTopQuality) according to criticalBufferLevel\n                    const bufferToKeep = Math.max(0.2 * criticalBufferLevel, 1);\n                    const bufferAhead = criticalBufferLevel - bufferToKeep;\n                    mediaPlayerModel.setBufferToKeep(parseFloat(bufferToKeep).toFixed(5));\n                    mediaPlayerModel.setBufferAheadToKeep(parseFloat(bufferAhead).toFixed(5));\n                }\n            }\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE || !hasEnoughSpaceToAppend()) {\n                logger.warn('Clearing playback buffer to overcome quota exceed situation for type: ' + type);\n                eventBus.trigger(Events.QUOTA_EXCEEDED, { sender: instance, criticalBufferLevel: criticalBufferLevel }); //Tells ScheduleController to stop scheduling.\n                pruneAllSafely(); // Then we clear the buffer and onCleared event will tell ScheduleController to start scheduling again.\n            }\n            return;\n        }\n\n        appendedBytesInfo = e.chunk;\n        if (appendedBytesInfo && !isNaN(appendedBytesInfo.index)) {\n            maxAppendedIndex = Math.max(appendedBytesInfo.index, maxAppendedIndex);\n            checkIfBufferingCompleted();\n        }\n\n        const ranges = buffer.getAllBufferRanges();\n        if (appendedBytesInfo.segmentType === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            showBufferRanges(ranges);\n            onPlaybackProgression();\n        } else {\n            if (bufferResetInProgress) {\n                const currentTime = playbackController.getTime();\n                logger.debug('AppendToBuffer seek target should be ' + currentTime);\n                streamProcessor.getScheduleController().setSeekTarget(currentTime);\n                adapter.setIndexHandlerTime(streamProcessor, currentTime);\n            }\n        }\n\n        const dataEvent = {\n            sender: instance,\n            quality: appendedBytesInfo.quality,\n            startTime: appendedBytesInfo.start,\n            index: appendedBytesInfo.index,\n            bufferedRanges: ranges\n        };\n        if (appendedBytesInfo && !appendedBytesInfo.endFragment) {\n            eventBus.trigger(Events.BYTES_APPENDED, dataEvent);\n        } else if (appendedBytesInfo) {\n            eventBus.trigger(Events.BYTES_APPENDED_END_FRAGMENT, dataEvent);\n        }\n    }\n\n    function onQualityChanged(e) {\n        if (requiredQuality === e.newQuality || type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) return;\n\n        updateBufferTimestampOffset(streamProcessor.getRepresentationInfoForQuality(e.newQuality).MSETimeOffset);\n        requiredQuality = e.newQuality;\n    }\n\n    //**********************************************************************\n    // START Buffer Level, State & Sufficiency Handling.\n    //**********************************************************************\n    function onPlaybackSeeking() {\n        if (isBufferingCompleted) {\n            seekClearedBufferingCompleted = true;\n            isBufferingCompleted = false;\n            //a seek command has occured, reset lastIndex value, it will be set next time that onStreamCompleted will be called.\n            lastIndex = Number.POSITIVE_INFINITY;\n        }\n        if (type !== Constants.FRAGMENTED_TEXT) {\n            // remove buffer after seeking operations\n            pruneAllSafely();\n        } else {\n            onPlaybackProgression();\n        }\n    }\n\n    function onPlaybackSeeked() {\n        seekStartTime = undefined;\n    }\n\n    // Prune full buffer but what is around current time position\n    function pruneAllSafely() {\n        const ranges = getAllRangesWithSafetyFactor();\n        if (!ranges || ranges.length === 0) {\n            onPlaybackProgression();\n        }\n        clearBuffers(ranges);\n    }\n\n    // Get all buffer ranges but a range around current time position\n    function getAllRangesWithSafetyFactor() {\n        const clearRanges = [];\n        const ranges = buffer.getAllBufferRanges();\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        const currentTime = playbackController.getTime();\n        const endOfBuffer = ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD;\n\n        const currentTimeRequest = streamProcessor.getFragmentModel().getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: currentTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        // There is no request in current time position yet. Let's remove everything\n        if (!currentTimeRequest) {\n            logger.debug('getAllRangesWithSafetyFactor for', type, '- No request found in current time position, removing full buffer 0 -', endOfBuffer);\n            clearRanges.push({\n                start: 0,\n                end: endOfBuffer\n            });\n        } else {\n            // Build buffer behind range. To avoid pruning time around current time position,\n            // we include fragment right behind the one in current time position\n            const behindRange = {\n                start: 0,\n                end: currentTimeRequest.startTime - STALL_THRESHOLD\n            };\n            const prevReq = streamProcessor.getFragmentModel().getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: currentTimeRequest.startTime - (currentTimeRequest.duration / 2),\n                threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n            })[0];\n            if (prevReq && prevReq.startTime != currentTimeRequest.startTime) {\n                behindRange.end = prevReq.startTime;\n            }\n            if (behindRange.start < behindRange.end && behindRange.end > ranges.start(0)) {\n                clearRanges.push(behindRange);\n            }\n\n            // Build buffer ahead range. To avoid pruning time around current time position,\n            // we include fragment right after the one in current time position\n            const aheadRange = {\n                start: currentTimeRequest.startTime + currentTimeRequest.duration + STALL_THRESHOLD,\n                end: endOfBuffer\n            };\n            const nextReq = streamProcessor.getFragmentModel().getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: currentTimeRequest.startTime + currentTimeRequest.duration + STALL_THRESHOLD,\n                threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n            })[0];\n            if (nextReq && nextReq.startTime !== currentTimeRequest.startTime) {\n                aheadRange.start = nextReq.startTime + nextReq.duration + STALL_THRESHOLD;\n            }\n            if (aheadRange.start < aheadRange.end && aheadRange.start < endOfBuffer) {\n                clearRanges.push(aheadRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function getWorkingTime() {\n        // This function returns current working time for buffer (either start time or current time if playback has started)\n        let ret = playbackController.getTime();\n\n        if (seekStartTime) {\n            // if there is a seek start time, the first buffer data will be available on maximum value between first buffer range value and seek start time.\n            let ranges = buffer.getAllBufferRanges();\n            if (ranges && ranges.length) {\n                ret = Math.max(ranges.start(0), seekStartTime);\n            }\n        }\n        return ret;\n    }\n\n    function onPlaybackProgression() {\n        if (!bufferResetInProgress) {\n            updateBufferLevel();\n            addBufferMetrics();\n        }\n    }\n\n    function onPlaybackStalled() {\n        checkIfSufficientBuffer();\n    }\n\n    function onPlaybackPlaying() {\n        checkIfSufficientBuffer();\n    }\n\n    function getRangeAt(time, tolerance) {\n        const ranges = buffer.getAllBufferRanges();\n        let start = 0;\n        let end = 0;\n        let firstStart = null;\n        let lastEnd = null;\n        let gap = 0;\n        let len,\n            i;\n\n        const toler = (tolerance || 0.15);\n\n        if (ranges !== null && ranges !== undefined) {\n            for (i = 0, len = ranges.length; i < len; i++) {\n                start = ranges.start(i);\n                end = ranges.end(i);\n                if (firstStart === null) {\n                    gap = Math.abs(start - time);\n                    if (time >= start && time < end) {\n                        // start the range\n                        firstStart = start;\n                        lastEnd = end;\n                    } else if (gap <= toler) {\n                        // start the range even though the buffer does not contain time 0\n                        firstStart = start;\n                        lastEnd = end;\n                    }\n                } else {\n                    gap = start - lastEnd;\n                    if (gap <= toler) {\n                        // the discontinuity is smaller than the tolerance, combine the ranges\n                        lastEnd = end;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            if (firstStart !== null) {\n                return {\n                    start: firstStart,\n                    end: lastEnd\n                };\n            }\n        }\n\n        return null;\n    }\n\n    function getBufferLength(time, tolerance) {\n        let range,\n            length;\n\n        range = getRangeAt(time, tolerance);\n\n        if (range === null) {\n            length = 0;\n        } else {\n            length = range.end - time;\n        }\n\n        return length;\n    }\n\n    function updateBufferLevel() {\n        if (playbackController) {\n            bufferLevel = getBufferLength(getWorkingTime() || 0);\n            eventBus.trigger(Events.BUFFER_LEVEL_UPDATED, { sender: instance, bufferLevel: bufferLevel });\n            checkIfSufficientBuffer();\n        }\n    }\n\n    function addBufferMetrics() {\n        if (!isActive()) return;\n        metricsModel.addBufferState(type, bufferState, streamProcessor.getScheduleController().getBufferTarget());\n        metricsModel.addBufferLevel(type, new Date(), bufferLevel * 1000);\n    }\n\n    function checkIfBufferingCompleted() {\n        const isLastIdxAppended = maxAppendedIndex >= lastIndex - 1; // Handles 0 and non 0 based request index\n        if (isLastIdxAppended && !isBufferingCompleted && buffer.discharge === undefined) {\n            isBufferingCompleted = true;\n            logger.debug('checkIfBufferingCompleted trigger BUFFERING_COMPLETED');\n            eventBus.trigger(Events.BUFFERING_COMPLETED, { sender: instance, streamInfo: streamProcessor.getStreamInfo() });\n        }\n    }\n\n    function checkIfSufficientBuffer() {\n        // No need to check buffer if type is not audio or video (for example if several errors occur during text parsing, so that the buffer cannot be filled, no error must occur on video playback)\n        if (type !== 'audio' && type !== 'video') return;\n\n        if (seekClearedBufferingCompleted && !isBufferingCompleted && playbackController && playbackController.getTimeToStreamEnd() - bufferLevel < STALL_THRESHOLD) {\n            seekClearedBufferingCompleted = false;\n            isBufferingCompleted = true;\n            logger.debug('checkIfSufficientBuffer trigger BUFFERING_COMPLETED');\n            eventBus.trigger(Events.BUFFERING_COMPLETED, { sender: instance, streamInfo: streamProcessor.getStreamInfo() });\n        }\n\n        // When the player is working in low latency mode, the buffer is often below STALL_THRESHOLD.\n        // So, when in low latency mode, change dash.js behavior so it notifies a stall just when\n        // buffer reach 0 seconds\n        if (((!mediaPlayerModel.getLowLatencyEnabled() && bufferLevel < STALL_THRESHOLD) || bufferLevel === 0) && !isBufferingCompleted) {\n            notifyBufferStateChanged(BUFFER_EMPTY);\n        } else {\n            if (isBufferingCompleted || bufferLevel >= mediaPlayerModel.getStableBufferTime()) {\n                notifyBufferStateChanged(BUFFER_LOADED);\n            }\n        }\n    }\n\n    function notifyBufferStateChanged(state) {\n        if (bufferState === state ||\n            (state === BUFFER_EMPTY && playbackController.getTime() === 0) || // Don't trigger BUFFER_EMPTY if it's initial loading\n            (type === Constants.FRAGMENTED_TEXT && !textController.isTextEnabled())) {\n            return;\n        }\n\n        bufferState = state;\n        addBufferMetrics();\n\n        eventBus.trigger(Events.BUFFER_LEVEL_STATE_CHANGED, { sender: instance, state: state, mediaType: type, streamInfo: streamProcessor.getStreamInfo() });\n        eventBus.trigger(state === BUFFER_LOADED ? Events.BUFFER_LOADED : Events.BUFFER_EMPTY, { mediaType: type });\n        logger.debug(state === BUFFER_LOADED ? 'Got enough buffer to start for ' + type : 'Waiting for more buffer before starting playback for ' + type);\n    }\n\n\n    function handleInbandEvents(data, request, mediaInbandEvents, trackInbandEvents) {\n        const fragmentStartTime = Math.max(!request || isNaN(request.startTime) ? 0 : request.startTime, 0);\n        const eventStreams = [];\n        const events = [];\n\n        /* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */\n        const inbandEvents = mediaInbandEvents.concat(trackInbandEvents);\n        for (let i = 0, ln = inbandEvents.length; i < ln; i++) {\n            eventStreams[inbandEvents[i].schemeIdUri] = inbandEvents[i];\n        }\n\n        const isoFile = BoxParser(context).getInstance().parse(data);\n        const eventBoxes = isoFile.getBoxes('emsg');\n\n        for (let i = 0, ln = eventBoxes.length; i < ln; i++) {\n            const event = adapter.getEvent(eventBoxes[i], eventStreams, fragmentStartTime);\n\n            if (event) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    /* prune buffer on our own in background to avoid browsers pruning buffer silently */\n    function pruneBuffer() {\n        if (!buffer) return;\n        if (type === Constants.FRAGMENTED_TEXT) return;\n        if (!isBufferingCompleted) {\n            clearBuffers(getClearRanges());\n        }\n    }\n\n    function getClearRanges() {\n        const clearRanges = [];\n        const ranges = buffer.getAllBufferRanges();\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        const currentTime = playbackController.getTime();\n        const rangeToKeep = {\n            start: Math.max(0, currentTime - mediaPlayerModel.getBufferToKeep()),\n            end: currentTime + mediaPlayerModel.getBufferAheadToKeep()\n        };\n\n        const currentTimeRequest = streamProcessor.getFragmentModel().getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: currentTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        // Ensure we keep full range of current fragment\n        if (currentTimeRequest) {\n            rangeToKeep.start = Math.min(currentTimeRequest.startTime, rangeToKeep.start);\n            rangeToKeep.end = Math.max(currentTimeRequest.startTime + currentTimeRequest.duration, rangeToKeep.end);\n        } else if (currentTime === 0 && playbackController.getIsDynamic()) {\n            // Don't prune before the live stream starts, it messes with low latency\n            return [];\n        }\n\n        if (ranges.start(0) <= rangeToKeep.start) {\n            const behindRange = {\n                start: 0,\n                end: rangeToKeep.start\n            };\n            for (let i = 0; i < ranges.length && ranges.end(i) <= rangeToKeep.start; i++) {\n                behindRange.end = ranges.end(i);\n            }\n            if (behindRange.start < behindRange.end) {\n                clearRanges.push(behindRange);\n            }\n        }\n\n        if (ranges.end(ranges.length - 1) >= rangeToKeep.end) {\n            const aheadRange = {\n                start: rangeToKeep.end,\n                end: ranges.end(ranges.length - 1) + BUFFER_RANGE_CALCULATION_THRESHOLD\n            };\n\n            if (aheadRange.start < aheadRange.end) {\n                clearRanges.push(aheadRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function clearBuffers(ranges) {\n        if (!ranges || !buffer || ranges.length === 0) return;\n\n        pendingPruningRanges.push.apply(pendingPruningRanges, ranges);\n        if (isPruningInProgress) {\n            return;\n        }\n\n        clearNextRange();\n    }\n\n    function clearNextRange() {\n        // If there's nothing to prune reset state\n        if (pendingPruningRanges.length === 0 || !buffer) {\n            logger.debug('Nothing to prune, halt pruning');\n            pendingPruningRanges = [];\n            isPruningInProgress = false;\n            return;\n        }\n\n        const sourceBuffer = buffer.getBuffer();\n        // If there's nothing buffered any pruning is invalid, so reset our state\n        if (!sourceBuffer || !sourceBuffer.buffered || sourceBuffer.buffered.length === 0) {\n            logger.debug('SourceBuffer is empty (or does not exist), halt pruning');\n            pendingPruningRanges = [];\n            isPruningInProgress = false;\n            return;\n        }\n\n        const range = pendingPruningRanges.shift();\n        logger.debug('Removing', type, 'buffer from:', range.start, 'to', range.end);\n        isPruningInProgress = true;\n\n        // If removing buffer ahead current playback position, update maxAppendedIndex\n        const currentTime = playbackController.getTime();\n        if (currentTime < range.end) {\n            isBufferingCompleted = false;\n            maxAppendedIndex = 0;\n            if (!bufferResetInProgress) {\n                streamProcessor.getScheduleController().setSeekTarget(currentTime);\n                adapter.setIndexHandlerTime(streamProcessor, currentTime);\n            }\n        }\n\n        buffer.remove(range.start, range.end, range.force);\n    }\n\n    function onRemoved(e) {\n        if (buffer !== e.buffer) return;\n\n        logger.debug('onRemoved buffer from:', e.from, 'to', e.to);\n\n        const ranges = buffer.getAllBufferRanges();\n        showBufferRanges(ranges);\n\n        if (pendingPruningRanges.length === 0) {\n            isPruningInProgress = false;\n        }\n\n        if (e.unintended) {\n            logger.warn('Detected unintended removal from:', e.from, 'to', e.to, 'setting index handler time to', e.from);\n            adapter.setIndexHandlerTime(streamProcessor, e.from);\n        }\n\n        if (isPruningInProgress) {\n            clearNextRange();\n        } else {\n            if (!bufferResetInProgress) {\n                logger.debug('onRemoved : call updateBufferLevel');\n                updateBufferLevel();\n            } else {\n                bufferResetInProgress = false;\n                if (mediaChunk) {\n                    appendToBuffer(mediaChunk);\n                }\n            }\n            eventBus.trigger(Events.BUFFER_CLEARED, { sender: instance, from: e.from, to: e.to, unintended: e.unintended,  hasEnoughSpaceToAppend: hasEnoughSpaceToAppend() });\n        }\n        //TODO - REMEMBER removed a timerout hack calling clearBuffer after manifestInfo.minBufferTime * 1000 if !hasEnoughSpaceToAppend() Aug 04 2016\n    }\n\n    function updateBufferTimestampOffset(MSETimeOffset) {\n        // Each track can have its own @presentationTimeOffset, so we should set the offset\n        // if it has changed after switching the quality or updating an mpd\n        if (buffer && buffer.updateTimestampOffset) {\n            buffer.updateTimestampOffset(MSETimeOffset);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor || e.error) return;\n        updateBufferTimestampOffset(e.currentRepresentation.MSETimeOffset);\n    }\n\n    function onStreamCompleted(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel()) return;\n        lastIndex = e.request.index;\n        checkIfBufferingCompleted();\n    }\n\n    function onCurrentTrackChanged(e) {\n        const ranges = buffer && buffer.getAllBufferRanges();\n        if (!ranges || (e.newMediaInfo.type !== type) || (e.newMediaInfo.streamInfo.id !== streamProcessor.getStreamInfo().id)) return;\n\n        logger.info('Track change asked');\n        if (mediaController.getSwitchMode(type) === MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE) {\n            if (ranges && ranges.length > 0 && playbackController.getTimeToStreamEnd() > STALL_THRESHOLD) {\n                isBufferingCompleted = false;\n                lastIndex = Number.POSITIVE_INFINITY;\n            }\n        }\n    }\n\n    function onWallclockTimeUpdated() {\n        wallclockTicked++;\n        const secondsElapsed = (wallclockTicked * (mediaPlayerModel.getWallclockTimeUpdateInterval() / 1000));\n        if ((secondsElapsed >= mediaPlayerModel.getBufferPruningInterval())) {\n            wallclockTicked = 0;\n            pruneBuffer();\n        }\n    }\n\n    function onPlaybackRateChanged() {\n        checkIfSufficientBuffer();\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function setSeekStartTime(value) {\n        seekStartTime = value;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function setBuffer(newBuffer) {\n        buffer = newBuffer;\n    }\n\n    function getBufferLevel() {\n        return bufferLevel;\n    }\n\n    function setMediaSource(value, mediaInfo) {\n        mediaSource = value;\n        if (buffer && mediaInfo) { //if we have a prebuffer, we should prepare to discharge it, and make a new sourceBuffer ready\n            if (typeof buffer.discharge === 'function') {\n                dischargeBuffer = buffer;\n                createBuffer(mediaInfo);\n            }\n        }\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function getIsPruningInProgress() {\n        return isPruningInProgress;\n    }\n\n    function getTotalBufferedTime() {\n        const ranges = buffer.getAllBufferRanges();\n        let totalBufferedTime = 0;\n        let ln,\n            i;\n\n        if (!ranges) return totalBufferedTime;\n\n        for (i = 0, ln = ranges.length; i < ln; i++) {\n            totalBufferedTime += ranges.end(i) - ranges.start(i);\n        }\n\n        return totalBufferedTime;\n    }\n\n    function hasEnoughSpaceToAppend() {\n        const totalBufferedTime = getTotalBufferedTime();\n        return (totalBufferedTime < criticalBufferLevel);\n    }\n\n    function resetInitialSettings(errored, keepBuffers) {\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\n        bufferState = undefined;\n        requiredQuality = AbrController.QUALITY_DEFAULT;\n        lastIndex = Number.POSITIVE_INFINITY;\n        maxAppendedIndex = 0;\n        appendedBytesInfo = null;\n        isBufferingCompleted = false;\n        isPruningInProgress = false;\n        seekClearedBufferingCompleted = false;\n        bufferLevel = 0;\n        wallclockTicked = 0;\n        pendingPruningRanges = [];\n\n        if (buffer) {\n            if (!errored) {\n                buffer.abort();\n            }\n            buffer.reset(keepBuffers);\n            buffer = null;\n        }\n\n        bufferResetInProgress = false;\n    }\n\n    function reset(errored, keepBuffers) {\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, this);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, this);\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, onCurrentTrackChanged, this);\n        eventBus.off(Events.PLAYBACK_PLAYING, onPlaybackPlaying, this);\n        eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.PLAYBACK_SEEKED, onPlaybackSeeked, this);\n        eventBus.off(Events.PLAYBACK_STALLED, onPlaybackStalled, this);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\n        eventBus.off(Events.SOURCEBUFFER_REMOVE_COMPLETED, onRemoved, this);\n\n        resetInitialSettings(errored, keepBuffers);\n    }\n\n    instance = {\n        getBufferControllerType: getBufferControllerType,\n        initialize: initialize,\n        createBuffer: createBuffer,\n        dischargePreBuffer: dischargePreBuffer,\n        getType: getType,\n        getStreamProcessor: getStreamProcessor,\n        setSeekStartTime: setSeekStartTime,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        getBufferLevel: getBufferLevel,\n        getRangeAt: getRangeAt,\n        setMediaSource: setMediaSource,\n        getMediaSource: getMediaSource,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        switchInitData: switchInitData,\n        getIsPruningInProgress: getIsPruningInProgress,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nconst factory = FactoryMaker.getClassFactory(BufferController);\nfactory.BUFFER_LOADED = BUFFER_LOADED;\nfactory.BUFFER_EMPTY = BUFFER_EMPTY;\nFactoryMaker.updateClassFactory(BufferController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction EventController() {\n\n    const MPD_RELOAD_SCHEME = 'urn:mpeg:dash:event:2012';\n    const MPD_RELOAD_VALUE = 1;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        inlineEvents, // Holds all Inline Events not triggered yet\n        inbandEvents, // Holds all Inband Events not triggered yet\n        activeEvents, // Holds all Events currently running\n        eventInterval, // variable holding the setInterval\n        refreshDelay, // refreshTime for the setInterval\n        presentationTimeThreshold,\n        manifestModel,\n        manifestUpdater,\n        playbackController,\n        isStarted;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n    }\n\n    function resetInitialSettings() {\n        isStarted = false;\n        inlineEvents = {};\n        inbandEvents = {};\n        activeEvents = {};\n        eventInterval = null;\n        refreshDelay = 100;\n        presentationTimeThreshold = refreshDelay / 1000;\n    }\n\n    function checkSetConfigCall() {\n        if (!manifestModel || !manifestUpdater || !playbackController) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function stop() {\n        if (eventInterval !== null && isStarted) {\n            clearInterval(eventInterval);\n            eventInterval = null;\n            isStarted = false;\n        }\n    }\n\n    function start() {\n        checkSetConfigCall();\n        logger.debug('Start Event Controller');\n        if (!isStarted && !isNaN(refreshDelay)) {\n            isStarted = true;\n            eventInterval = setInterval(onEventTimer, refreshDelay);\n        }\n    }\n\n    /**\n     * Add events to the eventList. Events that are not in the mpd anymore but not triggered yet will still be deleted\n     * @param {Array.<Object>} values\n     */\n    function addInlineEvents(values) {\n        checkSetConfigCall();\n\n        inlineEvents = {};\n\n        if (values) {\n            for (var i = 0; i < values.length; i++) {\n                var event = values[i];\n                inlineEvents[event.id] = event;\n                logger.debug('Add inline event with id ' + event.id);\n            }\n        }\n        logger.debug('Added ' + values.length + ' inline events');\n    }\n\n    /**\n     * i.e. processing of any one event message box with the same id is sufficient\n     * @param {Array.<Object>} values\n     */\n    function addInbandEvents(values) {\n        checkSetConfigCall();\n\n        for (var i = 0; i < values.length; i++) {\n            var event = values[i];\n            if (!(event.id in inbandEvents)) {\n                if (event.eventStream.schemeIdUri === MPD_RELOAD_SCHEME && inbandEvents[event.id] === undefined) {\n                    handleManifestReloadEvent(event);\n                }\n                inbandEvents[event.id] = event;\n                logger.debug('Add inband event with id ' + event.id);\n            } else {\n                logger.debug('Repeated event with id ' + event.id);\n            }\n        }\n    }\n\n    function handleManifestReloadEvent(event) {\n        if (event.eventStream.value == MPD_RELOAD_VALUE) {\n            const timescale = event.eventStream.timescale || 1;\n            const validUntil = event.presentationTime / timescale;\n            let newDuration;\n            if (event.presentationTime == 0xFFFFFFFF) {//0xFF... means remaining duration unknown\n                newDuration = NaN;\n            } else {\n                newDuration = (event.presentationTime + event.duration) / timescale;\n            }\n            logger.info('Manifest validity changed: Valid until: ' + validUntil + '; remaining duration: ' + newDuration);\n            eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, {\n                id: event.id,\n                validUntil: validUntil,\n                newDuration: newDuration,\n                newManifestValidAfter: NaN //event.message_data - this is an arraybuffer with a timestring in it, but not used yet\n            });\n        }\n    }\n\n    /**\n     * Remove events which are over from the list\n     */\n    function removeEvents() {\n        if (activeEvents) {\n            var currentVideoTime = playbackController.getTime();\n            var eventIds = Object.keys(activeEvents);\n\n            for (var i = 0; i < eventIds.length; i++) {\n                var eventId = eventIds[i];\n                var curr = activeEvents[eventId];\n                if (curr !== null && (curr.duration + curr.presentationTime) / curr.eventStream.timescale < currentVideoTime) {\n                    logger.debug('Remove Event ' + eventId + ' at time ' + currentVideoTime);\n                    curr = null;\n                    delete activeEvents[eventId];\n                }\n            }\n        }\n    }\n\n    /**\n     * Iterate through the eventList and trigger/remove the events\n     */\n    function onEventTimer() {\n        triggerEvents(inbandEvents);\n        triggerEvents(inlineEvents);\n        removeEvents();\n    }\n\n    function refreshManifest() {\n        checkSetConfigCall();\n        manifestUpdater.refreshManifest();\n    }\n\n    function triggerEvents(events) {\n        var currentVideoTime = playbackController.getTime();\n        var presentationTime;\n\n        /* == Trigger events that are ready == */\n        if (events) {\n            var eventIds = Object.keys(events);\n            for (var i = 0; i < eventIds.length; i++) {\n                var eventId = eventIds[i];\n                var curr = events[eventId];\n\n                if (curr !== undefined) {\n                    presentationTime = curr.presentationTime / curr.eventStream.timescale;\n                    if (presentationTime === 0 || (presentationTime <= currentVideoTime && presentationTime + presentationTimeThreshold > currentVideoTime)) {\n                        logger.debug('Start Event ' + eventId + ' at ' + currentVideoTime);\n                        if (curr.duration > 0) {\n                            activeEvents[eventId] = curr;\n                        }\n                        if (curr.eventStream.schemeIdUri == MPD_RELOAD_SCHEME && curr.eventStream.value == MPD_RELOAD_VALUE) {\n                            if (curr.duration !== 0 || curr.presentationTimeDelta !== 0) { //If both are set to zero, it indicates the media is over at this point. Don't reload the manifest.\n                                refreshManifest();\n                            }\n                        } else {\n                            eventBus.trigger(curr.eventStream.schemeIdUri, {event: curr});\n                        }\n                        delete events[eventId];\n                    }\n                }\n            }\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n\n        if (config.manifestUpdater) {\n            manifestUpdater = config.manifestUpdater;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n    }\n\n    function reset() {\n        stop();\n        resetInitialSettings();\n    }\n\n    instance = {\n        addInlineEvents: addInlineEvents,\n        addInbandEvents: addInbandEvents,\n        stop: stop,\n        start: start,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nEventController.__dashjs_factory_name = 'EventController';\nexport default FactoryMaker.getClassFactory(EventController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport DataChunk from '../vo/DataChunk';\nimport FragmentModel from '../models/FragmentModel';\nimport FragmentLoader from '../FragmentLoader';\nimport RequestModifier from '../utils/RequestModifier';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction FragmentController( config ) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const errHandler = config.errHandler;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const metricsModel = config.metricsModel;\n\n    let instance,\n        logger,\n        fragmentModels;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, instance);\n    }\n\n    function getModel(type) {\n        let model = fragmentModels[type];\n        if (!model) {\n            model = FragmentModel(context).create({\n                metricsModel: metricsModel,\n                fragmentLoader: FragmentLoader(context).create({\n                    metricsModel: metricsModel,\n                    mediaPlayerModel: mediaPlayerModel,\n                    errHandler: errHandler,\n                    requestModifier: RequestModifier(context).getInstance()\n                })\n            });\n\n            fragmentModels[type] = model;\n        }\n\n        return model;\n    }\n\n    function isInitializationRequest(request) {\n        return (request && request.type && request.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    function resetInitialSettings() {\n        for (let model in fragmentModels) {\n            fragmentModels[model].reset();\n        }\n        fragmentModels = {};\n    }\n\n    function reset() {\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.off(Events.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, this);\n        resetInitialSettings();\n    }\n\n    function createDataChunk(bytes, request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.bytes = bytes;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        if (fragmentModels[e.request.mediaType] !== e.sender) {\n            return;\n        }\n\n        const request = e.request;\n        const bytes = e.response;\n        const isInit = isInitializationRequest(request);\n        const streamInfo = request.mediaInfo.streamInfo;\n\n        if (e.error) {\n            if (e.request.mediaType === Constants.AUDIO || e.request.mediaType === Constants.VIDEO || e.request.mediaType === Constants.FRAGMENTED_TEXT) {\n                // add service location to blacklist controller - only for audio or video. text should not set errors\n                eventBus.trigger(Events.SERVICE_LOCATION_BLACKLIST_ADD, {entry: e.request.serviceLocation});\n            }\n        }\n\n        if (!bytes || !streamInfo) {\n            logger.warn('No ' + request.mediaType + ' bytes to push or stream is inactive.');\n            return;\n        }\n        const chunk = createDataChunk(bytes, request, streamInfo.id, e.type !== Events.FRAGMENT_LOADING_PROGRESS);\n        eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED, {\n            chunk: chunk,\n            fragmentModel: e.sender\n        });\n    }\n\n    instance = {\n        getModel: getModel,\n        isInitializationRequest: isInitializationRequest,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentController.__dashjs_factory_name = 'FragmentController';\nexport default FactoryMaker.getClassFactory(FragmentController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport Events from '../../core/events/Events';\nimport EventBus from '../../core/EventBus';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst TRACK_SWITCH_MODE_NEVER_REPLACE = 'neverReplace';\nconst TRACK_SWITCH_MODE_ALWAYS_REPLACE = 'alwaysReplace';\nconst TRACK_SELECTION_MODE_HIGHEST_BITRATE = 'highestBitrate';\nconst TRACK_SELECTION_MODE_WIDEST_RANGE = 'widestRange';\nconst DEFAULT_INIT_TRACK_SELECTION_MODE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\n\nfunction MediaController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        tracks,\n        initialSettings,\n        selectionMode,\n        switchMode,\n        errHandler,\n        domStorage;\n\n    const validTrackSwitchModes = [\n        TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n        TRACK_SWITCH_MODE_NEVER_REPLACE\n    ];\n\n    const validTrackSelectionModes = [\n        TRACK_SELECTION_MODE_HIGHEST_BITRATE,\n        TRACK_SELECTION_MODE_WIDEST_RANGE\n    ];\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @memberof MediaController#\n     */\n    function checkInitialMediaSettingsForType(type, streamInfo) {\n        let settings = getInitialSettings(type);\n        const tracksForType = getTracksFor(type, streamInfo);\n        const tracks = [];\n\n        if (type === Constants.FRAGMENTED_TEXT) {\n            // Choose the first track\n            setTrack(tracksForType[0]);\n            return;\n        }\n\n        if (!settings) {\n            settings = domStorage.getSavedMediaSettings(type);\n            setInitialSettings(type, settings);\n        }\n\n        if (!tracksForType || (tracksForType.length === 0)) return;\n\n        if (settings) {\n            tracksForType.forEach(function (track) {\n                if (matchSettings(settings, track)) {\n                    tracks.push(track);\n                }\n            });\n        }\n\n        if (tracks.length === 0) {\n            setTrack(selectInitialTrack(tracksForType));\n        } else {\n            if (tracks.length > 1) {\n                setTrack(selectInitialTrack(tracks));\n            } else {\n                setTrack(tracks[0]);\n            }\n        }\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @memberof MediaController#\n     */\n    function addTrack(track) {\n        if (!track) return;\n\n        const mediaType = track.type;\n        if (!isMultiTrackSupportedByType(mediaType)) return;\n\n        let streamId = track.streamInfo.id;\n        if (!tracks[streamId]) {\n            tracks[streamId] = createTrackInfo();\n        }\n\n        const mediaTracks = tracks[streamId][mediaType].list;\n        for (let i = 0, len = mediaTracks.length; i < len; ++i) {\n            //track is already set.\n            if (isTracksEqual(mediaTracks[i], track)) {\n                return;\n            }\n        }\n\n        mediaTracks.push(track);\n\n        let initSettings = getInitialSettings(mediaType);\n        if (initSettings && (matchSettings(initSettings, track)) && !getCurrentTrackFor(mediaType, track.streamInfo)) {\n            setTrack(track);\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @returns {Array}\n     * @memberof MediaController#\n     */\n    function getTracksFor(type, streamInfo) {\n        if (!type || !streamInfo) return [];\n\n        const id = streamInfo.id;\n\n        if (!tracks[id] || !tracks[id][type]) return [];\n\n        return tracks[id][type].list;\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getCurrentTrackFor(type, streamInfo) {\n        if (!type || !streamInfo || (streamInfo && !tracks[streamInfo.id])) return null;\n        return tracks[streamInfo.id][type].current;\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isCurrentTrack(track) {\n        const type = track.type;\n        const id = track.streamInfo.id;\n\n        return (tracks[id] && tracks[id][type] && isTracksEqual(tracks[id][type].current, track));\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @memberof MediaController#\n     */\n    function setTrack(track) {\n        if (!track) return;\n\n        const type = track.type;\n        const streamInfo = track.streamInfo;\n        const id = streamInfo.id;\n        const current = getCurrentTrackFor(type, streamInfo);\n\n        if (!tracks[id] || !tracks[id][type] || (current && isTracksEqual(track, current))) return;\n\n        tracks[id][type].current = track;\n\n        if (current) {\n            eventBus.trigger(Events.CURRENT_TRACK_CHANGED, {oldMediaInfo: current, newMediaInfo: track, switchMode: switchMode[type]});\n        }\n\n        let settings = extractSettings(track);\n\n        if (!settings || !tracks[id][type].storeLastSettings) return;\n\n        if (settings.roles) {\n            settings.role = settings.roles[0];\n            delete settings.roles;\n        }\n\n        if (settings.accessibility) {\n            settings.accessibility = settings.accessibility[0];\n        }\n\n        if (settings.audioChannelConfiguration) {\n            settings.audioChannelConfiguration = settings.audioChannelConfiguration[0];\n        }\n\n        domStorage.setSavedMediaSettings(type, settings);\n    }\n\n    /**\n     * @param {string} type\n     * @param {Object} value\n     * @memberof MediaController#\n     */\n    function setInitialSettings(type, value) {\n        if (!type || !value) return;\n\n        initialSettings[type] = value;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getInitialSettings(type) {\n        if (!type) return null;\n\n        return initialSettings[type];\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} mode\n     * @memberof MediaController#\n     */\n    function setSwitchMode(type, mode) {\n        const isModeSupported = (validTrackSwitchModes.indexOf(mode) !== -1);\n\n        if (!isModeSupported) {\n            logger.warn('Track switch mode is not supported: ' + mode);\n            return;\n        }\n\n        switchMode[type] = mode;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {string} mode\n     * @memberof MediaController#\n     */\n    function getSwitchMode(type) {\n        return switchMode[type];\n    }\n\n    /**\n     * @param {string} mode\n     * @memberof MediaController#\n     */\n    function setSelectionModeForInitialTrack(mode) {\n        const isModeSupported = (validTrackSelectionModes.indexOf(mode) !== -1);\n\n        if (!isModeSupported) {\n            logger.warn('Track selection mode is not supported: ' + mode);\n            return;\n        }\n        selectionMode = mode;\n    }\n\n    /**\n     * @returns {string} mode\n     * @memberof MediaController#\n     */\n    function getSelectionModeForInitialTrack() {\n        return selectionMode || DEFAULT_INIT_TRACK_SELECTION_MODE;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isMultiTrackSupportedByType(type) {\n        return (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.TEXT ||\n            type === Constants.FRAGMENTED_TEXT || type === Constants.IMAGE);\n    }\n\n    /**\n     * @param {MediaInfo} t1 - first track to compare\n     * @param {MediaInfo} t2 - second track to compare\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isTracksEqual(t1, t2) {\n        const sameId = t1.id === t2.id;\n        const sameViewpoint = t1.viewpoint === t2.viewpoint;\n        const sameLang = t1.lang === t2.lang;\n        const sameRoles = t1.roles.toString() === t2.roles.toString();\n        const sameAccessibility = t1.accessibility.toString() === t2.accessibility.toString();\n        const sameAudioChannelConfiguration = t1.audioChannelConfiguration.toString() === t2.audioChannelConfiguration.toString();\n\n        return (sameId && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n    }\n\n    /**\n     * @memberof MediaController#\n     */\n    function reset() {\n        tracks = {};\n        resetInitialSettings();\n        resetSwitchMode();\n    }\n\n    function extractSettings(mediaInfo) {\n        const settings = {\n            lang: mediaInfo.lang,\n            viewpoint: mediaInfo.viewpoint,\n            roles: mediaInfo.roles,\n            accessibility: mediaInfo.accessibility,\n            audioChannelConfiguration: mediaInfo.audioChannelConfiguration\n        };\n        let notEmpty = settings.lang || settings.viewpoint || (settings.role && settings.role.length > 0) ||\n        (settings.accessibility && settings.accessibility.length > 0) || (settings.audioChannelConfiguration && settings.audioChannelConfiguration.length > 0);\n\n        return notEmpty ? settings : null;\n    }\n\n    function matchSettings(settings, track) {\n        const matchLang = !settings.lang || (settings.lang === track.lang);\n        const matchViewPoint = !settings.viewpoint || (settings.viewpoint === track.viewpoint);\n        const matchRole = !settings.role || !!track.roles.filter(function (item) {\n            return item === settings.role;\n        })[0];\n        let matchAccessibility = !settings.accessibility || !!track.accessibility.filter(function (item) {\n            return item === settings.accessibility;\n        })[0];\n        let matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n            return item === settings.audioChannelConfiguration;\n        })[0];\n\n        return (matchLang && matchViewPoint && matchRole && matchAccessibility && matchAudioChannelConfiguration);\n    }\n\n    function resetSwitchMode() {\n        switchMode = {\n            audio: TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n            video: TRACK_SWITCH_MODE_NEVER_REPLACE\n        };\n    }\n\n    function resetInitialSettings() {\n        initialSettings = {\n            audio: null,\n            video: null\n        };\n    }\n\n    function selectInitialTrack(tracks) {\n        let mode = getSelectionModeForInitialTrack();\n        let tmpArr = [];\n        const getTracksWithHighestBitrate = function (trackArr) {\n            let max = 0;\n            let result = [];\n            let tmp;\n\n            trackArr.forEach(function (track) {\n                tmp = Math.max.apply(Math, track.bitrateList.map(function (obj) { return obj.bandwidth; }));\n\n                if (tmp > max) {\n                    max = tmp;\n                    result = [track];\n                } else if (tmp === max) {\n                    result.push(track);\n                }\n            });\n\n            return result;\n        };\n        const getTracksWithWidestRange = function (trackArr) {\n            let max = 0;\n            let result = [];\n            let tmp;\n\n            trackArr.forEach(function (track) {\n                tmp = track.representationCount;\n\n                if (tmp > max) {\n                    max = tmp;\n                    result = [track];\n                } else if (tmp === max) {\n                    result.push(track);\n                }\n            });\n\n            return result;\n        };\n\n        switch (mode) {\n            case TRACK_SELECTION_MODE_HIGHEST_BITRATE:\n                tmpArr = getTracksWithHighestBitrate(tracks);\n\n                if (tmpArr.length > 1) {\n                    tmpArr = getTracksWithWidestRange(tmpArr);\n                }\n                break;\n            case TRACK_SELECTION_MODE_WIDEST_RANGE:\n                tmpArr = getTracksWithWidestRange(tracks);\n\n                if (tmpArr.length > 1) {\n                    tmpArr = getTracksWithHighestBitrate(tracks);\n                }\n                break;\n            default:\n                logger.warn('Track selection mode is not supported: ' + mode);\n                break;\n        }\n\n        return tmpArr[0];\n    }\n\n    function createTrackInfo() {\n        return {\n            audio: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            video: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            text: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            fragmentedText: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            },\n            image: {\n                list: [],\n                storeLastSettings: true,\n                current: null\n            }\n        };\n    }\n\n    instance = {\n        checkInitialMediaSettingsForType: checkInitialMediaSettingsForType,\n        addTrack: addTrack,\n        getTracksFor: getTracksFor,\n        getCurrentTrackFor: getCurrentTrackFor,\n        isCurrentTrack: isCurrentTrack,\n        setTrack: setTrack,\n        setInitialSettings: setInitialSettings,\n        getInitialSettings: getInitialSettings,\n        setSwitchMode: setSwitchMode,\n        getSwitchMode: getSwitchMode,\n        setSelectionModeForInitialTrack: setSelectionModeForInitialTrack,\n        getSelectionModeForInitialTrack: getSelectionModeForInitialTrack,\n        isMultiTrackSupportedByType: isMultiTrackSupportedByType,\n        isTracksEqual: isTracksEqual,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaController.__dashjs_factory_name = 'MediaController';\nconst factory = FactoryMaker.getSingletonFactory(MediaController);\nfactory.TRACK_SWITCH_MODE_NEVER_REPLACE = TRACK_SWITCH_MODE_NEVER_REPLACE;\nfactory.TRACK_SWITCH_MODE_ALWAYS_REPLACE = TRACK_SWITCH_MODE_ALWAYS_REPLACE;\nfactory.TRACK_SELECTION_MODE_HIGHEST_BITRATE = TRACK_SELECTION_MODE_HIGHEST_BITRATE;\nfactory.TRACK_SELECTION_MODE_WIDEST_RANGE = TRACK_SELECTION_MODE_WIDEST_RANGE;\nfactory.DEFAULT_INIT_TRACK_SELECTION_MODE = DEFAULT_INIT_TRACK_SELECTION_MODE;\nFactoryMaker.updateSingletonFactory(MediaController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction MediaSourceController() {\n\n    let instance;\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            return new MediaSource();\n        } else if (hasWebKit) {\n            return new WebKitMediaSource();\n        }\n\n        return null;\n    }\n\n    function attachMediaSource(source, videoModel) {\n\n        let objectURL = window.URL.createObjectURL(source);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(source, value) {\n\n        if (source.duration != value)\n            source.duration = value;\n\n        return source.duration;\n    }\n\n    function setSeekable(source, start, end) {\n        if (source && typeof source.setLiveSeekableRange === 'function' && typeof source.clearLiveSeekableRange === 'function' &&\n                source.readyState === 'open' && start >= 0 && start < end) {\n            source.clearLiveSeekableRange();\n            source.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n\n        let buffers = source.sourceBuffers;\n        const ln = buffers.length;\n\n        if (source.readyState !== 'open') {\n            return;\n        }\n\n        for (let i = 0; i < ln; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n\n        source.endOfStream();\n    }\n\n    instance = {\n        createMediaSource: createMediaSource,\n        attachMediaSource: attachMediaSource,\n        detachMediaSource: detachMediaSource,\n        setDuration: setDuration,\n        setSeekable: setSeekable,\n        signalEndOfStream: signalEndOfStream\n    };\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport BufferController from './BufferController';\nimport URIFragmentModel from '../models/URIFragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS = 500;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE = 0.05;\n\n// Start catching up mechanism for low latency live streaming\n// when latency goes beyong targetDelay * (1 + LIVE_CATCHUP_START_THRESHOLD)\nconst LIVE_CATCHUP_START_THRESHOLD = 0.35;\n\nfunction PlaybackController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        streamController,\n        metricsModel,\n        dashMetrics,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        videoModel,\n        currentTime,\n        liveStartTime,\n        wallclockTimeIntervalId,\n        commonEarliestTime,\n        liveDelay,\n        bufferedRange,\n        streamInfo,\n        isDynamic,\n        mediaPlayerModel,\n        playOnceInitialized,\n        lastLivePlaybackTime,\n        originalPlaybackRate,\n        availabilityStartTime,\n        compatibleWithPreviousStream;\n\n    let catchUpPlaybackRate = DEFAULT_CATCHUP_PLAYBACK_RATE;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    function initialize(StreamInfo, compatible) {\n        streamInfo = StreamInfo;\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n        liveStartTime = streamInfo.start;\n        compatibleWithPreviousStream = compatible;\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_ENDED, onPlaybackEnded, this);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    function onPeriodSwitchStarted(e) {\n        if (!isDynamic && e.fromStreamInfo && commonEarliestTime[e.fromStreamInfo.id] !== undefined) {\n            delete bufferedRange[e.fromStreamInfo.id];\n            delete commonEarliestTime[e.fromStreamInfo.id];\n        }\n    }\n\n    function getTimeToStreamEnd() {\n        return parseFloat(( getStreamEndTime() - getTime()).toFixed(5));\n    }\n\n    function getStreamEndTime() {\n        const startTime = getStreamStartTime(true);\n        const offset = isDynamic ? startTime - streamInfo.start : 0;\n        return startTime + (streamInfo.duration - offset);\n    }\n\n    function play() {\n        if (streamInfo && videoModel && videoModel.getElement()) {\n            videoModel.play();\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    function isPaused() {\n        return streamInfo && videoModel ? videoModel.isPaused() : null;\n    }\n\n    function pause() {\n        if (streamInfo && videoModel) {\n            videoModel.pause();\n        }\n    }\n\n    function isSeeking() {\n        return streamInfo && videoModel ? videoModel.isSeeking() : null;\n    }\n\n    function seek(time, stickToBuffered, internalSeek) {\n        if (streamInfo && videoModel) {\n            if (internalSeek === true) {\n                if (time !== videoModel.getTime()) {\n                    // Internal seek = seek video model only (disable 'seeking' listener),\n                    // buffer(s) are already appended at given time (see onBytesAppended())\n                    videoModel.removeEventListener('seeking', onPlaybackSeeking);\n                    logger.info('Requesting seek to time: ' + time);\n                    videoModel.setCurrentTime(time, stickToBuffered);\n                }\n            } else {\n                eventBus.trigger(Events.PLAYBACK_SEEK_ASKED);\n                logger.info('Requesting seek to time: ' + time);\n                videoModel.setCurrentTime(time, stickToBuffered);\n            }\n        }\n    }\n\n    function getTime() {\n        return streamInfo && videoModel ? videoModel.getTime() : null;\n    }\n\n    function getPlaybackRate() {\n        return streamInfo && videoModel ? videoModel.getPlaybackRate() : null;\n    }\n\n    function getPlayedRanges() {\n        return streamInfo && videoModel ? videoModel.getPlayedRanges() : null;\n    }\n\n    function getEnded() {\n        return streamInfo && videoModel ? videoModel.getEnded() : null;\n    }\n\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    function getStreamController() {\n        return streamController;\n    }\n\n    function setLiveStartTime(value) {\n        liveStartTime = value;\n    }\n\n    function getLiveStartTime() {\n        return liveStartTime;\n    }\n\n    function setCatchUpPlaybackRate(value) {\n        catchUpPlaybackRate = value;\n\n        // If value == 0.0, deactivate catchup mechanism\n        if (value === 0.0 && getPlaybackRate() > 1.0) {\n            stopPlaybackCatchUp();\n        }\n    }\n\n    function getCatchUpPlaybackRate() {\n        return catchUpPlaybackRate;\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {number} dvrWindowSize - seconds?\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeLiveDelay(fragmentDuration, dvrWindowSize) {\n        const mpd = dashManifestModel.getMpd(manifestModel.getValue());\n\n        let delay;\n        let ret;\n        const END_OF_PLAYLIST_PADDING = 10;\n\n        if (mediaPlayerModel.getUseSuggestedPresentationDelay() && mpd.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n            delay = mpd.suggestedPresentationDelay;\n        } else if (mediaPlayerModel.getLowLatencyEnabled()) {\n            delay = 0;\n        } else if (mediaPlayerModel.getLiveDelay()) {\n            delay = mediaPlayerModel.getLiveDelay(); // If set by user, this value takes precedence\n        } else if (!isNaN(fragmentDuration)) {\n            delay = fragmentDuration * mediaPlayerModel.getLiveDelayFragmentCount();\n        } else {\n            delay = streamInfo.manifestInfo.minBufferTime * 2;\n        }\n\n        if (mpd.availabilityStartTime) {\n            availabilityStartTime = mpd.availabilityStartTime.getTime();\n        }\n\n        if (dvrWindowSize > 0) {\n            // cap target latency to:\n            // - dvrWindowSize / 2 for short playlists\n            // - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists\n            const targetDelayCapping = Math.max(dvrWindowSize - END_OF_PLAYLIST_PADDING, dvrWindowSize / 2);\n            ret = Math.min(delay, targetDelayCapping);\n        } else {\n            ret = delay;\n        }\n        liveDelay = ret;\n        return ret;\n    }\n\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    function getCurrentLiveLatency() {\n        if (!isDynamic || isNaN(availabilityStartTime)) {\n            return NaN;\n        }\n        const currentTime = getTime();\n        if (isNaN(currentTime) || currentTime === 0) {\n            return 0;\n        }\n\n        return ((Math.round(new Date().getTime() - (currentTime * 1000 + availabilityStartTime))) / 1000).toFixed(3);\n    }\n\n    function startPlaybackCatchUp() {\n        if (videoModel) {\n            const playbackRate = 1 + getCatchUpPlaybackRate();\n            const currentRate = getPlaybackRate();\n            if (playbackRate !== currentRate) {\n                logger.info('Starting live catchup mechanism. Setting playback rate to', playbackRate);\n                originalPlaybackRate = currentRate;\n                videoModel.getElement().playbackRate = playbackRate;\n\n                eventBus.trigger(Events.PLAYBACK_CATCHUP_START, { sender: instance });\n            }\n        }\n    }\n\n    function stopPlaybackCatchUp() {\n        if (videoModel) {\n            const playbackRate = originalPlaybackRate || 1;\n            if (playbackRate !== getPlaybackRate()) {\n                logger.info('Stopping live catchup mechanism. Setting playback rate to', playbackRate);\n                videoModel.getElement().playbackRate = playbackRate;\n\n                eventBus.trigger(Events.PLAYBACK_CATCHUP_END, { sender: instance });\n            }\n        }\n    }\n\n    function reset() {\n        currentTime = 0;\n        liveStartTime = NaN;\n        playOnceInitialized = false;\n        commonEarliestTime = {};\n        liveDelay = 0;\n        availabilityStartTime = 0;\n        catchUpPlaybackRate = DEFAULT_CATCHUP_PLAYBACK_RATE;\n        bufferedRange = {};\n        if (videoModel) {\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n            eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n            eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n            eventBus.off(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\n            eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_ENDED, onPlaybackEnded, this);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n        wallclockTimeIntervalId = null;\n        videoModel = null;\n        streamInfo = null;\n        isDynamic = null;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function getStartTimeFromUriParameters() {\n        const fragData = URIFragmentModel(context).getInstance().getURIFragmentData();\n        let uriParameters;\n        if (fragData) {\n            uriParameters = {};\n            const r = parseInt(fragData.r, 10);\n            if (r >= 0 && streamInfo && r < streamInfo.manifestInfo.DVRWindowSize && fragData.t === null) {\n                fragData.t = Math.floor(Date.now() / 1000) - streamInfo.manifestInfo.DVRWindowSize + r;\n            }\n            uriParameters.fragS = parseFloat(fragData.s);\n            uriParameters.fragT = parseFloat(fragData.t);\n        }\n        return uriParameters;\n    }\n\n    /**\n     * @param {boolean} ignoreStartOffset - ignore URL fragment start offset if true\n     * @param {number} liveEdge - liveEdge value\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function getStreamStartTime(ignoreStartOffset, liveEdge) {\n        let presentationStartTime;\n        let startTimeOffset = NaN;\n        const uriParameters = getStartTimeFromUriParameters();\n\n        if (uriParameters) {\n            if (!ignoreStartOffset) {\n                startTimeOffset = !isNaN(uriParameters.fragS) ? uriParameters.fragS : uriParameters.fragT;\n            } else {\n                startTimeOffset = streamInfo.start;\n            }\n        } else {\n            // handle case where no media fragments are parsed from the manifest URL\n            startTimeOffset = 0;\n        }\n\n        if (isDynamic) {\n            if (!isNaN(startTimeOffset)) {\n                presentationStartTime = startTimeOffset - (streamInfo.manifestInfo.availableFrom.getTime() / 1000);\n\n                if (presentationStartTime > liveStartTime ||\n                    presentationStartTime < (!isNaN(liveEdge) ? (liveEdge - streamInfo.manifestInfo.DVRWindowSize) : NaN)) {\n                    presentationStartTime = null;\n                }\n            }\n            presentationStartTime = presentationStartTime || liveStartTime;\n\n        } else {\n            if (!isNaN(startTimeOffset) && startTimeOffset < Math.max(streamInfo.manifestInfo.duration, streamInfo.duration) && startTimeOffset >= 0) {\n                presentationStartTime = startTimeOffset;\n            } else {\n                let earliestTime = commonEarliestTime[streamInfo.id]; //set by ready bufferStart after first onBytesAppended\n                presentationStartTime = earliestTime !== undefined ? Math.max(earliestTime.audio !== undefined ? earliestTime.audio : 0, earliestTime.video !== undefined ? earliestTime.video : 0, streamInfo.start) : streamInfo.start;\n            }\n        }\n\n        return presentationStartTime;\n    }\n\n    function getActualPresentationTime(currentTime) {\n        const metrics = metricsModel.getReadOnlyMetricsFor(Constants.VIDEO) || metricsModel.getReadOnlyMetricsFor(Constants.AUDIO);\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo(metrics);\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        let actualTime;\n\n        if (!DVRWindow) return NaN;\n        if (currentTime > DVRWindow.end) {\n            actualTime = Math.max(DVRWindow.end - streamInfo.manifestInfo.minBufferTime * 2, DVRWindow.start);\n        } else if (currentTime + 0.250 < DVRWindow.start) {\n            // Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz\n            // https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate\n            // http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource\n            actualTime = DVRWindow.start;\n        } else {\n            return currentTime;\n        }\n\n        return actualTime;\n    }\n\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) return;\n\n        const tick = function () {\n            onWallclockTime();\n        };\n\n        wallclockTimeIntervalId = setInterval(tick, mediaPlayerModel.getWallclockTimeUpdateInterval());\n    }\n\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function updateCurrentTime() {\n        if (isPaused() || !isDynamic || videoModel.getReadyState() === 0) return;\n        const currentTime = getTime();\n        const actualTime = getActualPresentationTime(currentTime);\n        const timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged) {\n            seek(actualTime);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error) return;\n\n        const representationInfo = adapter.convertDataToRepresentationInfo(e.currentRepresentation);\n        const info = representationInfo.mediaInfo.streamInfo;\n\n        if (streamInfo.id !== info.id) return;\n        streamInfo = info;\n\n        updateCurrentTime();\n    }\n\n    function onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function onPlaybackStart() {\n        logger.info('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, {\n            startTime: getTime()\n        });\n    }\n\n    function onPlaybackWaiting() {\n        logger.info('Native video element event: waiting');\n        eventBus.trigger(Events.PLAYBACK_WAITING, {\n            playingTime: getTime()\n        });\n    }\n\n    function onPlaybackPlaying() {\n        logger.info('Native video element event: playing');\n        eventBus.trigger(Events.PLAYBACK_PLAYING, {\n            playingTime: getTime()\n        });\n    }\n\n    function onPlaybackPaused() {\n        logger.info('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, {\n            ended: getEnded()\n        });\n    }\n\n    function onPlaybackSeeking() {\n        const seekTime = getTime();\n        logger.info('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {\n            seekTime: seekTime\n        });\n    }\n\n    function onPlaybackSeeked() {\n        logger.info('Native video element event: seeked');\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n        // Reactivate 'seeking' event listener (see seek())\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n    }\n\n    function onPlaybackTimeUpdated() {\n        const time = getTime();\n        currentTime = time;\n        eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {\n            timeToEnd: getTimeToStreamEnd(),\n            time: time\n        });\n    }\n\n    function updateLivePlaybackTime() {\n        const now = Date.now();\n        if (!lastLivePlaybackTime || now > lastLivePlaybackTime + LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS) {\n            lastLivePlaybackTime = now;\n            onPlaybackTimeUpdated();\n        }\n    }\n\n    function onPlaybackProgress() {\n        eventBus.trigger(Events.PLAYBACK_PROGRESS);\n    }\n\n    function onPlaybackRateChanged() {\n        const rate = getPlaybackRate();\n        logger.info('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, {\n            playbackRate: rate\n        });\n    }\n\n    function onPlaybackMetaDataLoaded() {\n        logger.info('Native video element event: loadedmetadata');\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    // Event to handle the native video element ended event\n    function onNativePlaybackEnded() {\n        logger.info('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_ENDED, {'isLast': streamController.getActiveStreamInfo().isLast});\n    }\n\n    // Handle DASH PLAYBACK_ENDED event\n    function onPlaybackEnded(e) {\n        if (wallclockTimeIntervalId && e.isLast) {\n            // PLAYBACK_ENDED was triggered elsewhere, react.\n            logger.info('[PlaybackController] onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\\'t fire ended');\n            videoModel.setCurrentTime(getStreamEndTime());\n            pause();\n            stopUpdatingWallclockTime();\n        }\n    }\n\n    function onPlaybackError(event) {\n        const target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, {\n            error: target.error\n        });\n    }\n\n    function onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {\n            isDynamic: isDynamic,\n            time: new Date()\n        });\n\n        // Updates playback time for paused dynamic streams\n        // (video element doesn't call timeupdate when the playback is paused)\n        if (getIsDynamic() && isPaused()) {\n            updateLivePlaybackTime();\n        }\n    }\n\n    function checkTimeInRanges(time, ranges) {\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                if (time >= ranges.start(i) && time < ranges.end(i)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function onPlaybackProgression() {\n        if (isDynamic && mediaPlayerModel.getLowLatencyEnabled() && getCatchUpPlaybackRate() > 0.0) {\n            if (!isCatchingUp() && needToCatchUp()) {\n                startPlaybackCatchUp();\n            } else if (stopCatchingUp()) {\n                stopPlaybackCatchUp();\n            }\n        }\n    }\n\n    function needToCatchUp() {\n        return getCurrentLiveLatency() > (mediaPlayerModel.getLiveDelay() * (1 + LIVE_CATCHUP_START_THRESHOLD));\n    }\n\n    function stopCatchingUp() {\n        return getCurrentLiveLatency() <= (mediaPlayerModel.getLiveDelay() );\n    }\n\n    function isCatchingUp() {\n        return getCatchUpPlaybackRate() + 1 === getPlaybackRate();\n    }\n\n    function onBytesAppended(e) {\n        let earliestTime,\n            initialStartTime;\n        let ranges = e.bufferedRanges;\n        if (!ranges || !ranges.length) return;\n        if (commonEarliestTime[streamInfo.id] && commonEarliestTime[streamInfo.id].started === true) {\n            //stream has already been started.\n            return;\n        }\n\n        const type = e.sender.getType();\n\n        if (bufferedRange[streamInfo.id] === undefined) {\n            bufferedRange[streamInfo.id] = [];\n        }\n\n        bufferedRange[streamInfo.id][type] = ranges;\n\n        if (commonEarliestTime[streamInfo.id] === undefined) {\n            commonEarliestTime[streamInfo.id] = [];\n            commonEarliestTime[streamInfo.id].started = false;\n        }\n\n        if (commonEarliestTime[streamInfo.id][type] === undefined) {\n            commonEarliestTime[streamInfo.id][type] = Math.max(ranges.start(0), streamInfo.start);\n        }\n\n        const hasVideoTrack = streamController.isVideoTrackPresent();\n        const hasAudioTrack = streamController.isAudioTrackPresent();\n\n        initialStartTime = getStreamStartTime(false);\n        if (hasAudioTrack && hasVideoTrack) {\n            //current stream has audio and video contents\n            if (!isNaN(commonEarliestTime[streamInfo.id].audio) && !isNaN(commonEarliestTime[streamInfo.id].video)) {\n\n                if (commonEarliestTime[streamInfo.id].audio < commonEarliestTime[streamInfo.id].video) {\n                    // common earliest is video time\n                    // check buffered audio range has video time, if ok, we seek, otherwise, we wait some other data\n                    earliestTime = commonEarliestTime[streamInfo.id].video > initialStartTime ? commonEarliestTime[streamInfo.id].video : initialStartTime;\n                    ranges = bufferedRange[streamInfo.id].audio;\n                } else {\n                    // common earliest is audio time\n                    // check buffered video range has audio time, if ok, we seek, otherwise, we wait some other data\n                    earliestTime = commonEarliestTime[streamInfo.id].audio > initialStartTime ? commonEarliestTime[streamInfo.id].audio : initialStartTime;\n                    ranges = bufferedRange[streamInfo.id].video;\n                }\n                if (checkTimeInRanges(earliestTime, ranges)) {\n                    if (!isSeeking() && !compatibleWithPreviousStream) {\n                        seek(earliestTime, true, true);\n                    }\n                    commonEarliestTime[streamInfo.id].started = true;\n                }\n            }\n        } else {\n            //current stream has only audio or only video content\n            if (commonEarliestTime[streamInfo.id][type]) {\n                earliestTime = commonEarliestTime[streamInfo.id][type] > initialStartTime ? commonEarliestTime[streamInfo.id][type] : initialStartTime;\n                if (!isSeeking() && !compatibleWithPreviousStream) {\n                    seek(earliestTime, false, true);\n                }\n                commonEarliestTime[streamInfo.id].started = true;\n            }\n        }\n    }\n\n    function onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamInfo.id !== streamInfo.id) return;\n        videoModel.setStallState(e.mediaType, e.state === BufferController.BUFFER_EMPTY);\n    }\n\n    function onPlaybackStalled(e) {\n        logger.info('Native video element event: stalled', e);\n        eventBus.trigger(Events.PLAYBACK_STALLED, {\n            e: e\n        });\n    }\n\n    function addAllListeners() {\n        videoModel.addEventListener('canplay', onCanPlay);\n        videoModel.addEventListener('play', onPlaybackStart);\n        videoModel.addEventListener('waiting', onPlaybackWaiting);\n        videoModel.addEventListener('playing', onPlaybackPlaying);\n        videoModel.addEventListener('pause', onPlaybackPaused);\n        videoModel.addEventListener('error', onPlaybackError);\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n        videoModel.addEventListener('seeked', onPlaybackSeeked);\n        videoModel.addEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.addEventListener('progress', onPlaybackProgress);\n        videoModel.addEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.addEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.addEventListener('stalled', onPlaybackStalled);\n        videoModel.addEventListener('ended', onNativePlaybackEnded);\n    }\n\n    function removeAllListeners() {\n        videoModel.removeEventListener('canplay', onCanPlay);\n        videoModel.removeEventListener('play', onPlaybackStart);\n        videoModel.removeEventListener('waiting', onPlaybackWaiting);\n        videoModel.removeEventListener('playing', onPlaybackPlaying);\n        videoModel.removeEventListener('pause', onPlaybackPaused);\n        videoModel.removeEventListener('error', onPlaybackError);\n        videoModel.removeEventListener('seeking', onPlaybackSeeking);\n        videoModel.removeEventListener('seeked', onPlaybackSeeked);\n        videoModel.removeEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.removeEventListener('progress', onPlaybackProgress);\n        videoModel.removeEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.removeEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.removeEventListener('stalled', onPlaybackStalled);\n        videoModel.removeEventListener('ended', onNativePlaybackEnded);\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getStartTimeFromUriParameters: getStartTimeFromUriParameters,\n        getStreamStartTime: getStreamStartTime,\n        getTimeToStreamEnd: getTimeToStreamEnd,\n        getTime: getTime,\n        getPlaybackRate: getPlaybackRate,\n        getPlayedRanges: getPlayedRanges,\n        getEnded: getEnded,\n        getIsDynamic: getIsDynamic,\n        getStreamController: getStreamController,\n        setCatchUpPlaybackRate: setCatchUpPlaybackRate,\n        setLiveStartTime: setLiveStartTime,\n        getLiveStartTime: getLiveStartTime,\n        computeLiveDelay: computeLiveDelay,\n        getLiveDelay: getLiveDelay,\n        getCurrentLiveLatency: getCurrentLiveLatency,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        seek: seek,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport {PlayListTrace} from '../vo/metrics/PlayList';\nimport AbrController from './AbrController';\nimport BufferController from './BufferController';\nimport BufferLevelRule from '../rules/scheduling/BufferLevelRule';\nimport NextFragmentRequestRule from '../rules/scheduling/NextFragmentRequestRule';\nimport FragmentModel from '../models/FragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport MediaController from './MediaController';\n\nfunction ScheduleController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const adapter = config.adapter;\n    const dashMetrics = config.dashMetrics;\n    const dashManifestModel = config.dashManifestModel;\n    const timelineConverter = config.timelineConverter;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const streamController = config.streamController;\n    const textController = config.textController;\n    const type = config.type;\n    const streamProcessor = config.streamProcessor;\n    const mediaController = config.mediaController;\n\n    let instance,\n        logger,\n        fragmentModel,\n        currentRepresentationInfo,\n        initialRequest,\n        isStopped,\n        playListMetrics,\n        playListTraceMetrics,\n        playListTraceMetricsClosed,\n        isFragmentProcessingInProgress,\n        timeToLoadDelay,\n        scheduleTimeout,\n        seekTarget,\n        bufferLevelRule,\n        nextFragmentRequestRule,\n        scheduleWhilePaused,\n        lastFragmentRequest,\n        topQualityIndex,\n        lastInitQuality,\n        replaceRequestArray,\n        switchTrack,\n        bufferResetInProgress,\n        mediaRequest;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n    }\n\n    function initialize() {\n        fragmentModel = streamProcessor.getFragmentModel();\n        scheduleWhilePaused = mediaPlayerModel.getScheduleWhilePaused();\n\n        bufferLevelRule = BufferLevelRule(context).create({\n            abrController: abrController,\n            dashMetrics: dashMetrics,\n            metricsModel: metricsModel,\n            mediaPlayerModel: mediaPlayerModel,\n            textController: textController\n        });\n\n        nextFragmentRequestRule = NextFragmentRequestRule(context).create({\n            adapter: adapter,\n            textController: textController\n        });\n\n        if (dashManifestModel.getIsTextTrack(config.mimeType)) {\n            eventBus.on(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\n        }\n\n        //eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.on(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.on(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.BUFFER_CLEARED, onBufferCleared, this);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n        eventBus.on(Events.INIT_REQUESTED, onInitRequested, this);\n        eventBus.on(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.on(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\n        eventBus.on(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, this);\n    }\n\n    function isStarted() {\n        return (isStopped === false);\n    }\n\n    function start() {\n        if (!currentRepresentationInfo || streamProcessor.isBufferingCompleted()) {\n            logger.warn('Start denied to Schedule Controller');\n            return;\n        }\n        logger.debug('Schedule Controller starts');\n        addPlaylistTraceMetrics();\n        isStopped = false;\n\n        if (initialRequest) {\n            initialRequest = false;\n        }\n\n        startScheduleTimer(0);\n    }\n\n    function stop() {\n        if (isStopped) {\n            return;\n        }\n        logger.debug('Schedule Controller stops');\n        isStopped = true;\n        clearTimeout(scheduleTimeout);\n    }\n\n    function hasTopQualityChanged(type, id) {\n        topQualityIndex[id] = topQualityIndex[id] || {};\n        const newTopQualityIndex = abrController.getTopQualityIndexFor(type, id);\n\n        if (topQualityIndex[id][type] != newTopQualityIndex) {\n            logger.info('Top quality ' + type + ' index has changed from ' + topQualityIndex[id][type] + ' to ' + newTopQualityIndex);\n            topQualityIndex[id][type] = newTopQualityIndex;\n            return true;\n        }\n        return false;\n\n    }\n\n    function schedule() {\n        if (isStopped || isFragmentProcessingInProgress || !streamProcessor.getBufferController() || playbackController.isPaused() && !scheduleWhilePaused) {\n            logger.debug('Schedule stop!');\n            return;\n        }\n\n        validateExecutedFragmentRequest();\n\n        const isReplacement = replaceRequestArray.length > 0;\n        const streamInfo = streamProcessor.getStreamInfo();\n        if (bufferResetInProgress || isNaN(lastInitQuality) || switchTrack || isReplacement ||\n            hasTopQualityChanged(currentRepresentationInfo.mediaInfo.type, streamInfo.id) ||\n            bufferLevelRule.execute(streamProcessor, type, streamController.isVideoTrackPresent())) {\n\n            const getNextFragment = function () {\n                const fragmentController = streamProcessor.getFragmentController();\n                if (currentRepresentationInfo.quality !== lastInitQuality) {\n                    logger.debug('Quality has changed, get init request for representationid = ' + currentRepresentationInfo.id);\n                    lastInitQuality = currentRepresentationInfo.quality;\n                    streamProcessor.switchInitData(currentRepresentationInfo.id);\n                } else if (switchTrack) {\n                    logger.debug('Switch track has been asked, get init request for ' + type + ' with representationid = ' + currentRepresentationInfo.id);\n                    bufferResetInProgress = mediaController.getSwitchMode(type) === MediaController.TRACK_SWITCH_MODE_ALWAYS_REPLACE ? true : false;\n                    streamProcessor.switchInitData(currentRepresentationInfo.id, bufferResetInProgress);\n                    lastInitQuality = currentRepresentationInfo.quality;\n                    switchTrack = false;\n                } else {\n                    const replacement = replaceRequestArray.shift();\n\n                    if (fragmentController.isInitializationRequest(replacement)) {\n                        // To be sure the specific init segment had not already been loaded.\n                        streamProcessor.switchInitData(replacement.representationId);\n                    } else {\n                        let request;\n                        // Don't schedule next fragments while pruning to avoid buffer inconsistencies\n                        if (!streamProcessor.getBufferController().getIsPruningInProgress()) {\n                            request = nextFragmentRequestRule.execute(streamProcessor, replacement);\n                            if (!request && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic) {\n                                logger.info('Playing at the bleeding live edge and frag is not available yet');\n                            }\n                        }\n\n                        if (request) {\n                            logger.debug('getNextFragment - request is ' + request.url);\n                            fragmentModel.executeRequest(request);\n                        } else { // Use case - Playing at the bleeding live edge and frag is not available yet. Cycle back around.\n                            setFragmentProcessState(false);\n                            startScheduleTimer(mediaPlayerModel.getLowLatencyEnabled() ? 100 : 500);\n                        }\n                    }\n                }\n            };\n\n            setFragmentProcessState(true);\n            if (!isReplacement && !switchTrack) {\n                abrController.checkPlaybackQuality(type);\n            }\n\n            getNextFragment();\n\n        } else {\n            startScheduleTimer(500);\n        }\n    }\n\n    function validateExecutedFragmentRequest() {\n        // Validate that the fragment request executed and appended into the source buffer is as\n        // good of quality as the current quality and is the correct media track.\n        const safeBufferLevel = currentRepresentationInfo.fragmentDuration * 1.5;\n        const request = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: playbackController.getTime() + safeBufferLevel,\n            threshold: 0\n        })[0];\n\n        if (request && replaceRequestArray.indexOf(request) === -1 && !dashManifestModel.getIsTextTrack(type)) {\n            const fastSwitchModeEnabled = mediaPlayerModel.getFastSwitchEnabled();\n            const bufferLevel = streamProcessor.getBufferLevel();\n            const abandonmentState = abrController.getAbandonmentStateFor(type);\n\n            // Only replace on track switch when NEVER_REPLACE\n            const trackChanged = !mediaController.isCurrentTrack(request.mediaInfo) && mediaController.getSwitchMode(request.mediaInfo.type) === MediaController.TRACK_SWITCH_MODE_NEVER_REPLACE;\n            const qualityChanged = request.quality < currentRepresentationInfo.quality;\n\n            if (fastSwitchModeEnabled && (trackChanged || qualityChanged) && bufferLevel >= safeBufferLevel && abandonmentState !== AbrController.ABANDON_LOAD) {\n                replaceRequest(request);\n                logger.debug('Reloading outdated fragment at index: ', request.index);\n            } else if (request.quality > currentRepresentationInfo.quality) {\n                // The buffer has better quality it in then what we would request so set append point to end of buffer!!\n                setSeekTarget(playbackController.getTime() + streamProcessor.getBufferLevel());\n            }\n        }\n    }\n\n    function startScheduleTimer(value) {\n        clearTimeout(scheduleTimeout);\n        scheduleTimeout = setTimeout(schedule, value);\n    }\n\n    function onInitRequested(e) {\n        if (!e.sender || e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        getInitRequest(currentRepresentationInfo.quality);\n    }\n\n    function setFragmentProcessState (state) {\n        if (isFragmentProcessingInProgress !== state ) {\n            isFragmentProcessingInProgress = state;\n        } else {\n            logger.debug('isFragmentProcessingInProgress is already equal to', state);\n        }\n    }\n\n    function getInitRequest(quality) {\n        const request = adapter.getInitRequest(streamProcessor, quality);\n        if (request) {\n            setFragmentProcessState(true);\n            fragmentModel.executeRequest(request);\n        }\n    }\n\n    function switchTrackAsked() {\n        switchTrack = true;\n    }\n\n    function replaceRequest(request) {\n        replaceRequestArray.push(request);\n    }\n\n    function onQualityChanged(e) {\n        if (type !== e.mediaType || streamProcessor.getStreamInfo().id !== e.streamInfo.id) {\n            return;\n        }\n\n        currentRepresentationInfo = streamProcessor.getRepresentationInfoForQuality(e.newQuality);\n\n        if (currentRepresentationInfo === null || currentRepresentationInfo === undefined) {\n            throw new Error('Unexpected error! - currentRepresentationInfo is null or undefined');\n        }\n\n        clearPlayListTraceMetrics(new Date(), PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON);\n        addPlaylistTraceMetrics();\n    }\n\n    function completeQualityChange(trigger) {\n        if (playbackController && fragmentModel) {\n            const item = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: playbackController.getTime(),\n                threshold: 0\n            })[0];\n            if (item && playbackController.getTime() >= item.startTime) {\n                if ((!lastFragmentRequest.mediaInfo || (item.mediaInfo.type === lastFragmentRequest.mediaInfo.type && item.mediaInfo.id !== lastFragmentRequest.mediaInfo.id)) && trigger) {\n                    eventBus.trigger(Events.TRACK_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldMediaInfo: lastFragmentRequest.mediaInfo,\n                        newMediaInfo: item.mediaInfo\n                    });\n                }\n                if ((item.quality !== lastFragmentRequest.quality || item.adaptationIndex !== lastFragmentRequest.adaptationIndex) && trigger) {\n                    eventBus.trigger(Events.QUALITY_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldQuality: lastFragmentRequest.quality,\n                        newQuality: item.quality\n                    });\n                }\n                lastFragmentRequest = {\n                    mediaInfo: item.mediaInfo,\n                    quality: item.quality,\n                    adaptationIndex: item.adaptationIndex\n                };\n            }\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error || e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        currentRepresentationInfo = adapter.convertDataToRepresentationInfo(e.currentRepresentation);\n    }\n\n    function onStreamInitialized(e) {\n        if (e.error || streamProcessor.getStreamInfo().id !== e.streamInfo.id) {\n            return;\n        }\n\n        currentRepresentationInfo = streamProcessor.getCurrentRepresentationInfo();\n\n        if (initialRequest) {\n            if (playbackController.getIsDynamic()) {\n                timelineConverter.setTimeSyncCompleted(true);\n                setLiveEdgeSeekTarget();\n            } else {\n                seekTarget = playbackController.getStreamStartTime(false);\n                streamProcessor.getBufferController().setSeekStartTime(seekTarget);\n            }\n        }\n\n        if (isStopped) {\n            start();\n        }\n    }\n\n    function setLiveEdgeSeekTarget() {\n        const liveEdgeFinder = streamProcessor.getLiveEdgeFinder();\n        if (liveEdgeFinder) {\n            const liveEdge = liveEdgeFinder.getLiveEdge();\n            const dvrWindowSize = currentRepresentationInfo.mediaInfo.streamInfo.manifestInfo.DVRWindowSize / 2;\n            const startTime = liveEdge - playbackController.computeLiveDelay(currentRepresentationInfo.fragmentDuration, dvrWindowSize);\n            const request = adapter.getFragmentRequestForTime(streamProcessor, currentRepresentationInfo, startTime, {\n                ignoreIsFinished: true\n            });\n\n            if (request) {\n                // When low latency mode is selected but browser doesn't support fetch\n                // start at the beginning of the segment to avoid consuming the whole buffer\n                if (mediaPlayerModel.getLowLatencyEnabled()) {\n                    const liveStartTime = request.duration < mediaPlayerModel.getLiveDelay() ? request.startTime : request.startTime + request.duration - mediaPlayerModel.getLiveDelay();\n                    playbackController.setLiveStartTime(liveStartTime);\n                } else {\n                    playbackController.setLiveStartTime(request.startTime);\n                }\n            } else {\n                logger.debug('setLiveEdgeSeekTarget : getFragmentRequestForTime returned undefined request object');\n            }\n            seekTarget = playbackController.getStreamStartTime(false, liveEdge);\n            streamProcessor.getBufferController().setSeekStartTime(seekTarget);\n\n            //special use case for multi period stream. If the startTime is out of the current period, send a seek command.\n            //in onPlaybackSeeking callback (StreamController), the detection of switch stream is done.\n            if (seekTarget > (currentRepresentationInfo.mediaInfo.streamInfo.start + currentRepresentationInfo.mediaInfo.streamInfo.duration)) {\n                playbackController.seek(seekTarget);\n            }\n\n            const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor(Constants.STREAM));\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\n                currentTime: seekTarget,\n                presentationStartTime: liveEdge,\n                latency: liveEdge - seekTarget,\n                clientTimeOffset: timelineConverter.getClientTimeOffset()\n            });\n        }\n    }\n\n    function onStreamCompleted(e) {\n        if (e.fragmentModel !== fragmentModel) {\n            return;\n        }\n\n        stop();\n        setFragmentProcessState(false);\n        logger.info('Stream is complete');\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        if (e.sender !== fragmentModel) {\n            return;\n        }\n        logger.info('OnFragmentLoadingCompleted - Url:', e.request ? e.request.url : 'undefined');\n        if (dashManifestModel.getIsTextTrack(type)) {\n            setFragmentProcessState(false);\n        }\n\n        if (e.error && e.request.serviceLocation && !isStopped) {\n            replaceRequest(e.request);\n            setFragmentProcessState(false);\n            startScheduleTimer(0);\n        }\n\n        if (bufferResetInProgress) {\n            mediaRequest = e.request;\n        }\n    }\n\n    function onPlaybackTimeUpdated() {\n        completeQualityChange(true);\n    }\n\n    function onBytesAppended(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        if (bufferResetInProgress && !isNaN(e.startTime)) {\n            bufferResetInProgress = false;\n            fragmentModel.addExecutedRequest(mediaRequest);\n        }\n\n        setFragmentProcessState(false);\n        startScheduleTimer(0);\n    }\n\n    function onFragmentLoadingAbandoned(e) {\n        if (e.streamProcessor !== streamProcessor) {\n            return;\n        }\n        logger.info('onFragmentLoadingAbandoned for ' + type + ', request: ' + e.request.url + ' has been aborted');\n        if (!playbackController.isSeeking() && !switchTrack) {\n            logger.info('onFragmentLoadingAbandoned for ' + type + ', request: ' + e.request.url + ' has to be downloaded again, origin is not seeking process or switch track call');\n            replaceRequest(e.request);\n        }\n        setFragmentProcessState(false);\n        startScheduleTimer(0);\n    }\n\n    function onDataUpdateStarted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        stop();\n    }\n\n    function onBufferCleared(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        if (e.unintended) {\n            // There was an unintended buffer remove, probably creating a gap in the buffer, remove every saved request\n            streamProcessor.getFragmentModel().removeExecutedRequestsAfterTime(e.from,\n                streamProcessor.getStreamInfo().duration);\n        } else {\n            streamProcessor.getFragmentModel().syncExecutedRequestsWithBufferedRange(\n                streamProcessor.getBufferController().getBuffer().getAllBufferRanges(),\n                streamProcessor.getStreamInfo().duration);\n        }\n\n        if (e.hasEnoughSpaceToAppend && isStopped) {\n            start();\n        }\n    }\n\n    function onBufferLevelStateChanged(e) {\n        if ((e.sender.getStreamProcessor() === streamProcessor) && e.state === BufferController.BUFFER_EMPTY && !playbackController.isSeeking()) {\n            logger.info('Buffer is empty! Stalling!');\n            clearPlayListTraceMetrics(new Date(), PlayListTrace.REBUFFERING_REASON);\n        }\n    }\n\n    function onQuotaExceeded(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        stop();\n        setFragmentProcessState(false);\n    }\n\n    function onURLResolutionFailed() {\n        fragmentModel.abortRequests();\n        stop();\n    }\n\n    function onTimedTextRequested(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        getInitRequest(e.index);\n    }\n\n    function onPlaybackStarted() {\n        if (isStopped || !scheduleWhilePaused) {\n            start();\n        }\n    }\n\n    function onPlaybackSeeking(e) {\n        seekTarget = e.seekTime;\n        setTimeToLoadDelay(0);\n\n        if (isStopped) {\n            start();\n        }\n\n        const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor(Constants.STREAM));\n        const latency = currentRepresentationInfo.DVRWindow && playbackController ? currentRepresentationInfo.DVRWindow.end - playbackController.getTime() : NaN;\n        metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\n            latency: latency\n        });\n\n        //if, during the seek command, the scheduleController is waiting : stop waiting, request chunk as soon as possible\n        if (!isFragmentProcessingInProgress) {\n            startScheduleTimer(0);\n        } else {\n            logger.debug('onPlaybackSeeking for ' + type + ', call fragmentModel.abortRequests in order to seek quicker');\n            fragmentModel.abortRequests();\n        }\n    }\n\n    function onPlaybackRateChanged(e) {\n        if (playListTraceMetrics) {\n            playListTraceMetrics.playbackspeed = e.playbackRate.toString();\n        }\n    }\n\n    function getSeekTarget() {\n        return seekTarget;\n    }\n\n    function setSeekTarget(value) {\n        seekTarget = value;\n    }\n\n    function setTimeToLoadDelay(value) {\n        timeToLoadDelay = value;\n    }\n\n    function getTimeToLoadDelay() {\n        return timeToLoadDelay;\n    }\n\n    function getBufferTarget() {\n        return bufferLevelRule.getBufferTarget(streamProcessor, type, streamController.isVideoTrackPresent());\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function setPlayList(playList) {\n        playListMetrics = playList;\n    }\n\n    function finalisePlayList(time, reason) {\n        clearPlayListTraceMetrics(time, reason);\n        playListMetrics = null;\n    }\n\n    function clearPlayListTraceMetrics(endTime, stopreason) {\n        if (playListMetrics && playListTraceMetricsClosed === false) {\n            const startTime = playListTraceMetrics.start;\n            const duration = endTime.getTime() - startTime.getTime();\n            playListTraceMetrics.duration = duration;\n            playListTraceMetrics.stopreason = stopreason;\n            playListMetrics.trace.push(playListTraceMetrics);\n            playListTraceMetricsClosed = true;\n        }\n    }\n\n    function addPlaylistTraceMetrics() {\n        if (playListMetrics && playListTraceMetricsClosed === true && currentRepresentationInfo) {\n            playListTraceMetricsClosed = false;\n            playListTraceMetrics = new PlayListTrace();\n            playListTraceMetrics.representationid = currentRepresentationInfo.id;\n            playListTraceMetrics.start = new Date();\n            playListTraceMetrics.mstart = playbackController.getTime() * 1000;\n            playListTraceMetrics.playbackspeed = playbackController.getPlaybackRate().toString();\n        }\n    }\n\n    function resetInitialSettings() {\n        isFragmentProcessingInProgress = false;\n        timeToLoadDelay = 0;\n        seekTarget = NaN;\n        playListMetrics = null;\n        playListTraceMetrics = null;\n        playListTraceMetricsClosed = true;\n        initialRequest = true;\n        lastInitQuality = NaN;\n        lastFragmentRequest = {\n            mediaInfo: undefined,\n            quality: NaN,\n            adaptationIndex: NaN\n        };\n        topQualityIndex = {};\n        replaceRequestArray = [];\n        isStopped = true;\n        switchTrack = false;\n        bufferResetInProgress = false;\n        mediaRequest = null;\n    }\n\n    function reset() {\n        //eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);\n        eventBus.off(Events.DATA_UPDATE_STARTED, onDataUpdateStarted, this);\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChanged, this);\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.off(Events.STREAM_COMPLETED, onStreamCompleted, this);\n        eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n        eventBus.off(Events.QUOTA_EXCEEDED, onQuotaExceeded, this);\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n        eventBus.off(Events.BUFFER_CLEARED, onBufferCleared, this);\n        eventBus.off(Events.INIT_REQUESTED, onInitRequested, this);\n        eventBus.off(Events.PLAYBACK_RATE_CHANGED, onPlaybackRateChanged, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.off(Events.URL_RESOLUTION_FAILED, onURLResolutionFailed, this);\n        eventBus.off(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, this);\n        if (dashManifestModel.getIsTextTrack(type)) {\n            eventBus.off(Events.TIMED_TEXT_REQUESTED, onTimedTextRequested, this);\n        }\n\n        stop();\n        completeQualityChange(false);\n        resetInitialSettings();\n    }\n\n    instance = {\n        initialize: initialize,\n        getType: getType,\n        getSeekTarget: getSeekTarget,\n        setSeekTarget: setSeekTarget,\n        setTimeToLoadDelay: setTimeToLoadDelay,\n        getTimeToLoadDelay: getTimeToLoadDelay,\n        replaceRequest: replaceRequest,\n        switchTrackAsked: switchTrackAsked,\n        isStarted: isStarted,\n        start: start,\n        stop: stop,\n        reset: reset,\n        setPlayList: setPlayList,\n        getBufferTarget: getBufferTarget,\n        finalisePlayList: finalisePlayList\n    };\n\n    setup();\n\n    return instance;\n}\n\nScheduleController.__dashjs_factory_name = 'ScheduleController';\nexport default FactoryMaker.getClassFactory(ScheduleController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport Stream from '../Stream';\nimport ManifestUpdater from '../ManifestUpdater';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport MediaPlayerModel from '../models/MediaPlayerModel';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {\n    PlayList,\n    PlayListTrace\n} from '../vo/metrics/PlayList';\nimport Debug from '../../core/Debug';\nimport InitCache from '../utils/InitCache';\nimport URLUtils from '../utils/URLUtils';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport TimeSyncController from './TimeSyncController';\nimport BaseURLController from './BaseURLController';\nimport MediaSourceController from './MediaSourceController';\n\nfunction StreamController() {\n    // Check whether there is a gap every 40 wallClockUpdateEvent times\n    const STALL_THRESHOLD_TO_CHECK_GAPS = 40;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        capabilities,\n        manifestUpdater,\n        manifestLoader,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        metricsModel,\n        dashMetrics,\n        mediaSourceController,\n        timeSyncController,\n        baseURLController,\n        domStorage,\n        abrController,\n        mediaController,\n        textController,\n        initCache,\n        urlUtils,\n        errHandler,\n        timelineConverter,\n        streams,\n        activeStream,\n        protectionController,\n        protectionData,\n        autoPlay,\n        isStreamSwitchingInProgress,\n        hasMediaError,\n        hasInitialisationError,\n        mediaSource,\n        videoModel,\n        playbackController,\n        mediaPlayerModel,\n        isPaused,\n        initialPlayback,\n        playListMetrics,\n        videoTrackDetected,\n        audioTrackDetected,\n        isStreamBufferingCompleted,\n        playbackEndedTimerId,\n        wallclockTicked,\n        buffers,\n        compatible,\n        preloading,\n        lastPlaybackTime;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        timeSyncController = TimeSyncController(context).getInstance();\n        baseURLController = BaseURLController(context).getInstance();\n        mediaSourceController = MediaSourceController(context).getInstance();\n        initCache = InitCache(context).getInstance();\n        urlUtils = URLUtils(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function initialize(autoPl, protData) {\n        checkSetConfigCall();\n\n        autoPlay = autoPl;\n        protectionData = protData;\n        timelineConverter.initialize();\n\n        manifestUpdater = ManifestUpdater(context).create();\n        manifestUpdater.setConfig({\n            manifestModel: manifestModel,\n            dashManifestModel: dashManifestModel,\n            mediaPlayerModel: mediaPlayerModel,\n            manifestLoader: manifestLoader,\n            errHandler: errHandler\n        });\n        manifestUpdater.initialize();\n\n        baseURLController.setConfig({\n            dashManifestModel: dashManifestModel\n        });\n\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, onTimeSyncCompleted, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.on(Events.PLAYBACK_ENDED, onEnded, this);\n        eventBus.on(Events.PLAYBACK_ERROR, onPlaybackError, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.MANIFEST_UPDATED, onManifestUpdated, this);\n        eventBus.on(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\n        eventBus.on(Events.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, this);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, onWallclockTimeUpdated, this);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, this);\n    }\n\n    /*\n     * Called when current playback position is changed.\n     * Used to determine the time current stream is finished and we should switch to the next stream.\n     */\n    function onPlaybackTimeUpdated(/*e*/) {\n        if (isVideoTrackPresent()) {\n            const playbackQuality = videoModel.getPlaybackQuality();\n            if (playbackQuality) {\n                metricsModel.addDroppedFrames(Constants.VIDEO, playbackQuality);\n            }\n        }\n    }\n\n    function onWallclockTimeUpdated(/*e*/) {\n        if (!mediaPlayerModel.getJumpGaps() || !activeStream || activeStream.getProcessors().length === 0 ||\n            playbackController.isSeeking() || isPaused || isStreamSwitchingInProgress ||\n            hasMediaError || hasInitialisationError) {\n            return;\n        }\n\n        wallclockTicked++;\n        if (wallclockTicked >= STALL_THRESHOLD_TO_CHECK_GAPS) {\n            const currentTime = playbackController.getTime();\n            if (lastPlaybackTime === currentTime) {\n                jumpGap(currentTime);\n            } else {\n                lastPlaybackTime = currentTime;\n            }\n            wallclockTicked = 0;\n        }\n    }\n\n    function jumpGap(time) {\n        const streamProcessors = activeStream.getProcessors();\n        const smallGapLimit = mediaPlayerModel.getSmallGapLimit();\n        let seekToPosition;\n\n        // Find out what is the right time position to jump to taking\n        // into account state of buffer\n        for (let i = 0; i < streamProcessors.length; i ++) {\n            const mediaBuffer = streamProcessors[i].getBuffer();\n            const ranges = mediaBuffer.getAllBufferRanges();\n            let nextRangeStartTime;\n            if (!ranges || ranges.length <= 1) continue;\n\n            // Get the range just after current time position\n            for (let j = 0; j < ranges.length; j++) {\n                if (time < ranges.start(j)) {\n                    nextRangeStartTime = ranges.start(j);\n                    break;\n                }\n            }\n\n            if (nextRangeStartTime > 0) {\n                const gap = nextRangeStartTime - time;\n                if (gap > 0 && gap <= smallGapLimit) {\n                    if (seekToPosition === undefined || nextRangeStartTime > seekToPosition) {\n                        seekToPosition = nextRangeStartTime;\n                    }\n                }\n            }\n        }\n\n        const timeToStreamEnd = playbackController.getTimeToStreamEnd();\n        if (seekToPosition === undefined && !isNaN(timeToStreamEnd) && timeToStreamEnd < smallGapLimit) {\n            seekToPosition = time + timeToStreamEnd;\n        }\n\n        // If there is a safe position to jump to, do the seeking\n        if (seekToPosition > 0) {\n            if (!isNaN(timeToStreamEnd) && seekToPosition >= time + timeToStreamEnd) {\n                logger.info('Jumping media gap (discontinuity) at time ', time, '. Jumping to end of the stream');\n                eventBus.trigger(Events.PLAYBACK_ENDED, {'isLast': getActiveStreamInfo().isLast});\n            } else {\n                logger.info('Jumping media gap (discontinuity) at time ', time, '. Jumping to time position', seekToPosition);\n                playbackController.seek(seekToPosition);\n            }\n        }\n    }\n\n    function onPlaybackSeeking(e) {\n        const seekingStream = getStreamForTime(e.seekTime);\n\n        //if end period has been detected, stop timer and reset isStreamBufferingCompleted\n        if (playbackEndedTimerId) {\n            stopEndPeriodTimer();\n            isStreamBufferingCompleted = false;\n        }\n\n        if ( seekingStream === activeStream && preloading ) {\n            // Seeking to the current period was requested while preloading the next one, deactivate preloading one\n            preloading.deactivate(true);\n        }\n\n        if (seekingStream && (seekingStream !== activeStream || (preloading && !activeStream.isActive()))) {\n            // If we're preloading other stream, the active one was deactivated and we need to switch back\n            flushPlaylistMetrics(PlayListTrace.END_OF_PERIOD_STOP_REASON);\n            switchStream(activeStream, seekingStream, e.seekTime);\n        } else {\n            flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n        }\n\n        addPlaylistMetrics(PlayList.SEEK_START_REASON);\n    }\n\n    function onPlaybackStarted( /*e*/ ) {\n        logger.debug('[onPlaybackStarted]');\n        if (initialPlayback) {\n            initialPlayback = false;\n            addPlaylistMetrics(PlayList.INITIAL_PLAYOUT_START_REASON);\n        } else {\n            if (isPaused) {\n                isPaused = false;\n                addPlaylistMetrics(PlayList.RESUME_FROM_PAUSE_START_REASON);\n                toggleEndPeriodTimer();\n            }\n        }\n    }\n\n    function onPlaybackPaused(e) {\n        logger.debug('[onPlaybackPaused]');\n        if (!e.ended) {\n            isPaused = true;\n            flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n            toggleEndPeriodTimer();\n        }\n    }\n\n    function stopEndPeriodTimer() {\n        logger.debug('[toggleEndPeriodTimer] stop end period timer.');\n        clearTimeout(playbackEndedTimerId);\n        playbackEndedTimerId = undefined;\n    }\n\n    function toggleEndPeriodTimer() {\n        //stream buffering completed has not been detected, nothing to do....\n        if (isStreamBufferingCompleted) {\n            //stream buffering completed has been detected, if end period timer is running, stop it, otherwise start it....\n            if (playbackEndedTimerId) {\n                stopEndPeriodTimer();\n            } else {\n                const timeToEnd = playbackController.getTimeToStreamEnd();\n                const delayPlaybackEnded = timeToEnd > 0 ? timeToEnd * 1000 : 0;\n                logger.debug('[toggleEndPeriodTimer] start-up of timer to notify PLAYBACK_ENDED event. It will be triggered in ' + delayPlaybackEnded + ' milliseconds');\n                playbackEndedTimerId = setTimeout(function () {eventBus.trigger(Events.PLAYBACK_ENDED, {'isLast': getActiveStreamInfo().isLast});}, delayPlaybackEnded);\n                const preloadDelay = delayPlaybackEnded < 2000 ? delayPlaybackEnded / 4 : delayPlaybackEnded - 2000;\n                logger.info('[StreamController][toggleEndPeriodTimer] Going to fire preload in ' + preloadDelay);\n                setTimeout(onStreamCanLoadNext,  preloadDelay);\n            }\n        }\n    }\n\n    function onStreamBufferingCompleted() {\n        const isLast = getActiveStreamInfo().isLast;\n        if (mediaSource && isLast) {\n            logger.info('[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController.');\n            mediaSourceController.signalEndOfStream(mediaSource);\n        } else if (mediaSource && playbackEndedTimerId === undefined) {\n            //send PLAYBACK_ENDED in order to switch to a new period, wait until the end of playing\n            logger.info('[StreamController][onStreamBufferingCompleted] end of period detected');\n            isStreamBufferingCompleted = true;\n            if (isPaused === false) {\n                toggleEndPeriodTimer();\n            }\n        }\n    }\n\n    function onStreamCanLoadNext() {\n        const isLast = getActiveStreamInfo().isLast;\n        if (mediaSource && !isLast) {\n            const newStream = getNextStream();\n            compatible = activeStream.isCompatibleWithStream(newStream);\n            if (compatible) {\n                logger.info('[StreamController][onStreamCanLoadNext] Preloading next stream');\n                activeStream.stopEventController();\n                activeStream.deactivate(true);\n                newStream.preload(mediaSource, buffers);\n                preloading = newStream;\n                newStream.getProcessors().forEach(p => {\n                    adapter.setIndexHandlerTime(p, newStream.getStartTime());\n                });\n            }\n        }\n    }\n\n    function getStreamForTime(time) {\n        let duration = 0;\n        let stream = null;\n\n        const ln = streams.length;\n\n        if (ln > 0) {\n            duration += streams[0].getStartTime();\n        }\n\n        for (let i = 0; i < ln; i++) {\n            stream = streams[i];\n            duration = parseFloat((duration + stream.getDuration()).toFixed(5));\n\n            if (time < duration) {\n                return stream;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns a playhead time, in seconds, converted to be relative\n     * to the start of an identified stream/period or null if no such stream\n     * @param {number} time\n     * @param {string} id\n     * @returns {number|null}\n     */\n    function getTimeRelativeToStreamId(time, id) {\n        let stream = null;\n        let baseStart = 0;\n        let streamStart = 0;\n        let streamDur = null;\n\n        const ln = streams.length;\n\n        for (let i = 0; i < ln; i++) {\n            stream = streams[i];\n            streamStart = stream.getStartTime();\n            streamDur = stream.getDuration();\n\n            // use start time, if not undefined or NaN or similar\n            if (Number.isFinite(streamStart)) {\n                baseStart = streamStart;\n            }\n\n            if (stream.getId() === id) {\n                return time - baseStart;\n            } else {\n                // use duration if not undefined or NaN or similar\n                if (Number.isFinite(streamDur)) {\n                    baseStart += streamDur;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function getActiveStreamProcessors() {\n        return activeStream ? activeStream.getProcessors() : [];\n    }\n\n    function onEnded() {\n        const nextStream = getNextStream();\n        if (nextStream) {\n            audioTrackDetected = undefined;\n            videoTrackDetected = undefined;\n            switchStream(activeStream, nextStream, NaN);\n        }\n        else {\n            logger.debug('StreamController no next stream found');\n        }\n        flushPlaylistMetrics(nextStream ? PlayListTrace.END_OF_PERIOD_STOP_REASON : PlayListTrace.END_OF_CONTENT_STOP_REASON);\n        playbackEndedTimerId = undefined;\n        isStreamBufferingCompleted = false;\n    }\n\n    function getNextStream() {\n        if (activeStream) {\n            const start = activeStream.getStreamInfo().start;\n            const duration = activeStream.getStreamInfo().duration;\n\n            return streams.filter(function (stream) {\n                return (stream.getStreamInfo().start === parseFloat((start + duration).toFixed(5)));\n            })[0];\n        }\n    }\n\n    function switchStream(oldStream, newStream, seekTime) {\n        if (isStreamSwitchingInProgress || !newStream || (oldStream === newStream && newStream.isActive())) return;\n        isStreamSwitchingInProgress = true;\n\n        eventBus.trigger(Events.PERIOD_SWITCH_STARTED, {\n            fromStreamInfo: oldStream ? oldStream.getStreamInfo() : null,\n            toStreamInfo: newStream.getStreamInfo()\n        });\n\n        compatible = false;\n        if (oldStream) {\n            oldStream.stopEventController();\n            compatible = activeStream.isCompatibleWithStream(newStream) && !seekTime || newStream.getPreloaded();\n            oldStream.deactivate(compatible);\n        }\n\n        activeStream = newStream;\n        preloading = false;\n        playbackController.initialize(activeStream.getStreamInfo(), compatible);\n        if (videoModel.getElement()) {\n            //TODO detect if we should close jump to activateStream.\n            openMediaSource(seekTime, oldStream, false, compatible);\n        } else {\n            preloadStream(seekTime);\n        }\n    }\n\n    function preloadStream(seekTime) {\n        activateStream(seekTime, compatible);\n    }\n\n    function switchToVideoElement(seekTime) {\n        if (activeStream) {\n            playbackController.initialize(activeStream.getStreamInfo());\n            openMediaSource(seekTime, null, true, false);\n        }\n    }\n\n    function openMediaSource(seekTime, oldStream, streamActivated, keepBuffers) {\n        let sourceUrl;\n\n        function onMediaSourceOpen() {\n            // Manage situations in which a call to reset happens while MediaSource is being opened\n            if (!mediaSource) return;\n\n            logger.debug('MediaSource is open!');\n            window.URL.revokeObjectURL(sourceUrl);\n            mediaSource.removeEventListener('sourceopen', onMediaSourceOpen);\n            mediaSource.removeEventListener('webkitsourceopen', onMediaSourceOpen);\n            setMediaDuration();\n\n            if (!oldStream) {\n                eventBus.trigger(Events.SOURCE_INITIALIZED);\n            }\n\n            if (streamActivated) {\n                activeStream.setMediaSource(mediaSource);\n            } else {\n                activateStream(seekTime, keepBuffers);\n            }\n        }\n\n        if (!mediaSource) {\n            mediaSource = mediaSourceController.createMediaSource();\n            mediaSource.addEventListener('sourceopen', onMediaSourceOpen, false);\n            mediaSource.addEventListener('webkitsourceopen', onMediaSourceOpen, false);\n            sourceUrl = mediaSourceController.attachMediaSource(mediaSource, videoModel);\n            logger.debug('MediaSource attached to element.  Waiting on open...');\n        } else {\n            if (keepBuffers) {\n                activateStream(seekTime, keepBuffers);\n                if (!oldStream) {\n                    eventBus.trigger(Events.SOURCE_INITIALIZED);\n                }\n            } else {\n                mediaSourceController.detachMediaSource(videoModel);\n                mediaSource.addEventListener('sourceopen', onMediaSourceOpen, false);\n                mediaSource.addEventListener('webkitsourceopen', onMediaSourceOpen, false);\n                sourceUrl = mediaSourceController.attachMediaSource(mediaSource, videoModel);\n                logger.debug('MediaSource attached to element.  Waiting on open...');\n            }\n        }\n    }\n\n    function activateStream(seekTime, keepBuffers) {\n        buffers = activeStream.activate(mediaSource, keepBuffers ? buffers : undefined);\n        audioTrackDetected = checkTrackPresence(Constants.AUDIO);\n        videoTrackDetected = checkTrackPresence(Constants.VIDEO);\n\n        if (!initialPlayback) {\n            if (!isNaN(seekTime)) {\n                playbackController.seek(seekTime); //we only need to call seek here, IndexHandlerTime was set from seeking event\n            } else {\n                let startTime = playbackController.getStreamStartTime(true);\n                if (!keepBuffers) {\n                    activeStream.getProcessors().forEach(p => {\n                        adapter.setIndexHandlerTime(p, startTime);\n                    });\n                }\n            }\n        }\n\n        activeStream.startEventController();\n        if (autoPlay || !initialPlayback) {\n            playbackController.play();\n        }\n\n        isStreamSwitchingInProgress = false;\n        eventBus.trigger(Events.PERIOD_SWITCH_COMPLETED, {\n            toStreamInfo: activeStream.getStreamInfo()\n        });\n    }\n\n    function setMediaDuration() {\n        const manifestDuration = activeStream.getStreamInfo().manifestInfo.duration;\n        const mediaDuration = mediaSourceController.setDuration(mediaSource, manifestDuration);\n        logger.debug('Duration successfully set to: ' + mediaDuration);\n    }\n\n    function getComposedStream(streamInfo) {\n        for (let i = 0, ln = streams.length; i < ln; i++) {\n            if (streams[i].getId() === streamInfo.id) {\n                return streams[i];\n            }\n        }\n        return null;\n    }\n\n    function composeStreams() {\n        try {\n            const streamsInfo = adapter.getStreamsInfo();\n            if (streamsInfo.length === 0) {\n                throw new Error('There are no streams');\n            }\n\n            const manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate(metricsModel.getMetricsFor(Constants.STREAM));\n            metricsModel.updateManifestUpdateInfo(manifestUpdateInfo, {\n                currentTime: playbackController.getTime(),\n                buffered: videoModel.getBufferRange(),\n                presentationStartTime: streamsInfo[0].start,\n                clientTimeOffset: timelineConverter.getClientTimeOffset()\n            });\n\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\n                // If the Stream object does not exist we probably loaded the manifest the first time or it was\n                // introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations\n                const streamInfo = streamsInfo[i];\n                let stream = getComposedStream(streamInfo);\n\n                if (!stream) {\n                    stream = Stream(context).create({\n                        manifestModel: manifestModel,\n                        dashManifestModel: dashManifestModel,\n                        mediaPlayerModel: mediaPlayerModel,\n                        metricsModel: metricsModel,\n                        dashMetrics: dashMetrics,\n                        manifestUpdater: manifestUpdater,\n                        adapter: adapter,\n                        timelineConverter: timelineConverter,\n                        capabilities: capabilities,\n                        errHandler: errHandler,\n                        baseURLController: baseURLController,\n                        domStorage: domStorage,\n                        abrController: abrController,\n                        playbackController: playbackController,\n                        mediaController: mediaController,\n                        textController: textController,\n                        videoModel: videoModel,\n                        streamController: instance\n                    });\n                    streams.push(stream);\n                    stream.initialize(streamInfo, protectionController);\n                } else {\n                    stream.updateData(streamInfo);\n                }\n\n                metricsModel.addManifestUpdateStreamInfo(manifestUpdateInfo, streamInfo.id, streamInfo.index, streamInfo.start, streamInfo.duration);\n            }\n\n            if (!activeStream) {\n                // we need to figure out what the correct starting period is\n                const startTimeFormUriParameters = playbackController.getStartTimeFromUriParameters();\n                let initialStream = null;\n                if (startTimeFormUriParameters) {\n                    const initialTime = !isNaN(startTimeFormUriParameters.fragS) ? startTimeFormUriParameters.fragS : startTimeFormUriParameters.fragT;\n                    initialStream = getStreamForTime(initialTime);\n                }\n                switchStream(null, initialStream !== null ? initialStream : streams[0], NaN);\n            }\n\n            eventBus.trigger(Events.STREAMS_COMPOSED);\n\n        } catch (e) {\n            errHandler.manifestError(e.message, 'nostreamscomposed', manifestModel.getValue());\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    function onTimeSyncCompleted( /*e*/ ) {\n        const manifest = manifestModel.getValue();\n        //TODO check if we can move this to initialize??\n        if (protectionController) {\n            eventBus.trigger(Events.PROTECTION_CREATED, {\n                controller: protectionController,\n                manifest: manifest\n            });\n            protectionController.setMediaElement(videoModel.getElement());\n            if (protectionData) {\n                protectionController.setProtectionData(protectionData);\n            }\n        }\n\n        composeStreams();\n    }\n\n    function onManifestUpdated(e) {\n        if (!e.error) {\n            //Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream\n            //is SegmentTimeline to avoid using time source\n            const manifest = e.manifest;\n            adapter.updatePeriods(manifest);\n            const streamInfo = adapter.getStreamsInfo(undefined, 1)[0];\n            const mediaInfo = (\n                adapter.getMediaInfoForType(streamInfo, Constants.VIDEO) ||\n                adapter.getMediaInfoForType(streamInfo, Constants.AUDIO)\n            );\n\n            let useCalculatedLiveEdgeTime;\n            if (mediaInfo) {\n                useCalculatedLiveEdgeTime = dashManifestModel.getUseCalculatedLiveEdgeTimeForAdaptation(adapter.getDataForMedia(mediaInfo));\n                if (useCalculatedLiveEdgeTime) {\n                    logger.debug('SegmentTimeline detected using calculated Live Edge Time');\n                    mediaPlayerModel.setUseManifestDateHeaderTimeSource(false);\n                }\n            }\n\n            let manifestUTCTimingSources = dashManifestModel.getUTCTimingSources(e.manifest);\n            let allUTCTimingSources = (!dashManifestModel.getIsDynamic(manifest) || useCalculatedLiveEdgeTime) ? manifestUTCTimingSources : manifestUTCTimingSources.concat(mediaPlayerModel.getUTCTimingSources());\n            const isHTTPS = urlUtils.isHTTPS(e.manifest.url);\n\n            //If https is detected on manifest then lets apply that protocol to only the default time source(s). In the future we may find the need to apply this to more then just default so left code at this level instead of in MediaPlayer.\n            allUTCTimingSources.forEach(function (item) {\n                if (item.value.replace(/.*?:\\/\\//g, '') === MediaPlayerModel.DEFAULT_UTC_TIMING_SOURCE.value.replace(/.*?:\\/\\//g, '')) {\n                    item.value = item.value.replace(isHTTPS ? new RegExp(/^(http:)?\\/\\//i) : new RegExp(/^(https:)?\\/\\//i), isHTTPS ? 'https://' : 'http://');\n                    logger.debug('Matching default timing source protocol to manifest protocol: ', item.value);\n                }\n            });\n\n            baseURLController.initialize(manifest);\n\n            timeSyncController.setConfig({\n                metricsModel: metricsModel,\n                dashMetrics: dashMetrics,\n                baseURLController: baseURLController\n            });\n            timeSyncController.initialize(allUTCTimingSources, mediaPlayerModel.getUseManifestDateHeaderTimeSource());\n        } else {\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    function isAudioTrackPresent() {\n        return audioTrackDetected;\n    }\n\n    function isVideoTrackPresent() {\n        return videoTrackDetected;\n    }\n\n    function checkTrackPresence(type) {\n        let isDetected = false;\n        if (activeStream) {\n            activeStream.getProcessors().forEach(p => {\n                if (p.getMediaInfo().type === type) {\n                    isDetected = true;\n                }\n            });\n        }\n        return isDetected;\n    }\n\n    function flushPlaylistMetrics(reason, time) {\n        time = time || new Date();\n\n        if (playListMetrics) {\n            if (activeStream) {\n                activeStream.getProcessors().forEach(p => {\n                    const ctrlr = p.getScheduleController();\n                    if (ctrlr) {\n                        ctrlr.finalisePlayList(time, reason);\n                    }\n                });\n            }\n            metricsModel.addPlayList(playListMetrics);\n            playListMetrics = null;\n        }\n    }\n\n    function addPlaylistMetrics(startReason) {\n        playListMetrics = new PlayList();\n        playListMetrics.start = new Date();\n        playListMetrics.mstart = playbackController.getTime() * 1000;\n        playListMetrics.starttype = startReason;\n\n        if (activeStream) {\n            activeStream.getProcessors().forEach(p => {\n                let ctrlr = p.getScheduleController();\n                if (ctrlr) {\n                    ctrlr.setPlayList(playListMetrics);\n                }\n            });\n        }\n    }\n\n\n    function onPlaybackError(e) {\n        if (!e.error) return;\n\n        let msg = '';\n\n        switch (e.error.code) {\n            case 1:\n                msg = 'MEDIA_ERR_ABORTED';\n                break;\n            case 2:\n                msg = 'MEDIA_ERR_NETWORK';\n                break;\n            case 3:\n                msg = 'MEDIA_ERR_DECODE';\n                break;\n            case 4:\n                msg = 'MEDIA_ERR_SRC_NOT_SUPPORTED';\n                break;\n            case 5:\n                msg = 'MEDIA_ERR_ENCRYPTED';\n                break;\n            default:\n                msg = 'UNKNOWN';\n                break;\n        }\n\n        hasMediaError = true;\n\n        if (e.error.message) {\n            msg += ' (' + e.error.message + ')';\n        }\n\n        if (e.error.msExtendedCode) {\n            msg += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')';\n        }\n\n        logger.fatal('Video Element Error: ' + msg);\n        if (e.error) {\n            logger.fatal(e.error);\n        }\n        errHandler.mediaSourceError(msg);\n        reset();\n    }\n\n    function getActiveStreamInfo() {\n        return activeStream ? activeStream.getStreamInfo() : null;\n    }\n\n    function getStreamById(id) {\n        return streams.filter(function (item) {\n            return item.getId() === id;\n        })[0];\n    }\n\n    function checkSetConfigCall() {\n        if (!manifestLoader || !manifestLoader.hasOwnProperty('load') || !timelineConverter || !timelineConverter.hasOwnProperty('initialize') ||\n            !timelineConverter.hasOwnProperty('reset') || !timelineConverter.hasOwnProperty('getClientTimeOffset')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function checkInitializeCall() {\n        if (!manifestUpdater || !manifestUpdater.hasOwnProperty('setManifest')) {\n            throw new Error('initialize function has to be called previously');\n        }\n    }\n\n    function load(url) {\n        checkSetConfigCall();\n        manifestLoader.load(url);\n    }\n\n    function loadWithManifest(manifest) {\n        checkInitializeCall();\n        manifestUpdater.setManifest(manifest);\n    }\n\n    function onManifestValidityChanged(e) {\n        if (!isNaN(e.newDuration)) {\n            setMediaDuration(e.newDuration);\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.textController) {\n            textController = config.textController;\n        }\n    }\n\n    function setProtectionData(protData) {\n        protectionData = protData;\n    }\n\n\n    function resetInitialSettings() {\n        streams = [];\n        protectionController = null;\n        isStreamSwitchingInProgress = false;\n        activeStream = null;\n        hasMediaError = false;\n        hasInitialisationError = false;\n        videoTrackDetected = undefined;\n        audioTrackDetected = undefined;\n        initialPlayback = true;\n        isPaused = false;\n        autoPlay = true;\n        playListMetrics = null;\n        playbackEndedTimerId = undefined;\n        isStreamBufferingCompleted = false;\n        wallclockTicked = 0;\n    }\n\n    function reset() {\n        checkSetConfigCall();\n\n        timeSyncController.reset();\n\n        flushPlaylistMetrics(\n            hasMediaError || hasInitialisationError ?\n            PlayListTrace.FAILURE_STOP_REASON :\n            PlayListTrace.USER_REQUEST_STOP_REASON\n        );\n\n        for (let i = 0, ln = streams ? streams.length : 0; i < ln; i++) {\n            const stream = streams[i];\n            stream.reset(hasMediaError);\n        }\n\n        eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackTimeUpdated, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, this);\n        eventBus.off(Events.PLAYBACK_ERROR, onPlaybackError, this);\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.PLAYBACK_ENDED, onEnded, this);\n        eventBus.off(Events.MANIFEST_UPDATED, onManifestUpdated, this);\n        eventBus.off(Events.STREAM_BUFFERING_COMPLETED, onStreamBufferingCompleted, this);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, onMetricAdded, this);\n        eventBus.off(Events.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, this);\n\n        baseURLController.reset();\n        manifestUpdater.reset();\n        metricsModel.clearAllCurrentMetrics();\n        manifestModel.setValue(null);\n        manifestLoader.reset();\n        timelineConverter.reset();\n        initCache.reset();\n\n        if (mediaSource) {\n            mediaSourceController.detachMediaSource(videoModel);\n            mediaSource = null;\n        }\n        videoModel = null;\n        if (protectionController) {\n            protectionController.setMediaElement(null);\n            protectionController = null;\n            protectionData = null;\n            if (manifestModel.getValue()) {\n                eventBus.trigger(Events.PROTECTION_DESTROYED, {\n                    data: manifestModel.getValue().url\n                });\n            }\n        }\n\n        eventBus.trigger(Events.STREAM_TEARDOWN_COMPLETE);\n        resetInitialSettings();\n    }\n\n    function onMetricAdded(e) {\n        if (e.metric === MetricsConstants.DVR_INFO) {\n            //Match media type? How can DVR window be different for media types?\n            //Should we normalize and union the two?\n            if (e.mediaType === Constants.AUDIO) {\n                mediaSourceController.setSeekable(mediaSource, e.value.range.start, e.value.range.end);\n            }\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        getActiveStreamInfo: getActiveStreamInfo,\n        isVideoTrackPresent: isVideoTrackPresent,\n        isAudioTrackPresent: isAudioTrackPresent,\n        switchToVideoElement: switchToVideoElement,\n        getStreamById: getStreamById,\n        getStreamForTime: getStreamForTime,\n        getTimeRelativeToStreamId: getTimeRelativeToStreamId,\n        load: load,\n        loadWithManifest: loadWithManifest,\n        getActiveStreamProcessors: getActiveStreamProcessors,\n        setConfig: setConfig,\n        setProtectionData: setProtectionData,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamController.__dashjs_factory_name = 'StreamController';\nexport default FactoryMaker.getSingletonFactory(StreamController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport DashJSError from './../vo/DashJSError';\nimport {HTTPRequest} from './../vo/metrics/HTTPRequest';\nimport EventBus from './../../core/EventBus';\nimport Events from './../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport URLUtils from '../utils/URLUtils';\n\nconst TIME_SYNC_FAILED_ERROR_CODE = 1;\nconst HTTP_TIMEOUT_MS = 5000;\n\nfunction TimeSyncController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        offsetToDeviceTimeMs,\n        isSynchronizing,\n        isInitialised,\n        useManifestDateHeaderTimeSource,\n        handlers,\n        metricsModel,\n        dashMetrics,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize(timingSources, useManifestDateHeader) {\n        useManifestDateHeaderTimeSource = useManifestDateHeader;\n        offsetToDeviceTimeMs = 0;\n        isSynchronizing = false;\n        isInitialised = false;\n\n        // a list of known schemeIdUris and a method to call with @value\n        handlers = {\n            'urn:mpeg:dash:utc:http-head:2014':     httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2014':   httpHandler.bind(null, xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2014':      httpHandler.bind(null, iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2014':        directHandler,\n\n            // some specs referencing early ISO23009-1 drafts incorrectly use\n            // 2012 in the URI, rather than 2014. support these for now.\n            'urn:mpeg:dash:utc:http-head:2012':     httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2012':   httpHandler.bind(null, xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2012':      httpHandler.bind(null, iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2012':        directHandler,\n\n            // it isn't clear how the data returned would be formatted, and\n            // no public examples available so http-ntp not supported for now.\n            // presumably you would do an arraybuffer type xhr and decode the\n            // binary data returned but I would want to see a sample first.\n            'urn:mpeg:dash:utc:http-ntp:2014':      notSupportedHandler,\n\n            // not clear how this would be supported in javascript (in browser)\n            'urn:mpeg:dash:utc:ntp:2014':           notSupportedHandler,\n            'urn:mpeg:dash:utc:sntp:2014':          notSupportedHandler\n        };\n\n        if (!getIsSynchronizing()) {\n            attemptSync(timingSources);\n            setIsInitialised(true);\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n    }\n\n    function getOffsetToDeviceTimeMs() {\n        return getOffsetMs();\n    }\n\n    function setIsSynchronizing(value) {\n        isSynchronizing = value;\n    }\n\n    function getIsSynchronizing() {\n        return isSynchronizing;\n    }\n\n    function setIsInitialised(value) {\n        isInitialised = value;\n    }\n\n    function setOffsetMs(value) {\n        offsetToDeviceTimeMs = value;\n    }\n\n    function getOffsetMs() {\n        return offsetToDeviceTimeMs;\n    }\n\n    // takes xsdatetime and returns milliseconds since UNIX epoch\n    // may not be necessary as xsdatetime is very similar to ISO 8601\n    // which is natively understood by javascript Date parser\n    function alternateXsdatetimeDecoder(xsdatetimeStr) {\n        // taken from DashParser - should probably refactor both uses\n        const SECONDS_IN_MIN = 60;\n        const MINUTES_IN_HOUR = 60;\n        const MILLISECONDS_IN_SECONDS = 1000;\n        let datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+\\-])([0-9]{2})([0-9]{2}))?/;\n\n        let utcDate,\n            timezoneOffset;\n\n        let match = datetimeRegex.exec(xsdatetimeStr);\n\n        // If the string does not contain a timezone offset different browsers can interpret it either\n        // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n        // all browsers\n        utcDate = Date.UTC(\n            parseInt(match[1], 10),\n            parseInt(match[2], 10) - 1, // months start from zero\n            parseInt(match[3], 10),\n            parseInt(match[4], 10),\n            parseInt(match[5], 10),\n            (match[6] && (parseInt(match[6], 10) || 0)),\n            (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0\n        );\n        // If the date has timezone offset take it into account as well\n        if (match[9] && match[10]) {\n            timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n            utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n        }\n\n        return new Date(utcDate).getTime();\n    }\n\n    // try to use the built in parser, since xsdate is a constrained ISO8601\n    // which is supported natively by Date.parse. if that fails, try a\n    // regex-based version used elsewhere in this application.\n    function xsdatetimeDecoder(xsdatetimeStr) {\n        let parsedDate = Date.parse(xsdatetimeStr);\n\n        if (isNaN(parsedDate)) {\n            parsedDate = alternateXsdatetimeDecoder(xsdatetimeStr);\n        }\n\n        return parsedDate;\n    }\n\n    // takes ISO 8601 timestamp and returns milliseconds since UNIX epoch\n    function iso8601Decoder(isoStr) {\n        return Date.parse(isoStr);\n    }\n\n    // takes RFC 1123 timestamp (which is same as ISO8601) and returns\n    // milliseconds since UNIX epoch\n    function rfc1123Decoder(dateStr) {\n        return Date.parse(dateStr);\n    }\n\n    function notSupportedHandler(url, onSuccessCB, onFailureCB) {\n        onFailureCB();\n    }\n\n    function directHandler(xsdatetimeStr, onSuccessCB, onFailureCB) {\n        let time = xsdatetimeDecoder(xsdatetimeStr);\n\n        if (!isNaN(time)) {\n            onSuccessCB(time);\n            return;\n        }\n\n        onFailureCB();\n    }\n\n    function httpHandler(decoder, url, onSuccessCB, onFailureCB, isHeadRequest) {\n        let oncomplete,\n            onload;\n        let complete = false;\n        let req = new XMLHttpRequest();\n\n        let verb = isHeadRequest ? HTTPRequest.HEAD : HTTPRequest.GET;\n        let urls = url.match(/\\S+/g);\n\n        // according to ISO 23009-1, url could be a white-space\n        // separated list of URLs. just handle one at a time.\n        url = urls.shift();\n\n        oncomplete = function () {\n            if (complete) {\n                return;\n            }\n\n            // we only want to pass through here once per xhr,\n            // regardless of whether the load was successful.\n            complete = true;\n\n            // if there are more urls to try, call self.\n            if (urls.length) {\n                httpHandler(decoder, urls.join(' '), onSuccessCB, onFailureCB, isHeadRequest);\n            } else {\n                onFailureCB();\n            }\n        };\n\n        onload = function () {\n            let time,\n                result;\n\n            if (req.status === 200) {\n                time = isHeadRequest ?\n                        req.getResponseHeader('Date') :\n                        req.response;\n\n                result = decoder(time);\n\n                // decoder returns NaN if non-standard input\n                if (!isNaN(result)) {\n                    onSuccessCB(result);\n                    complete = true;\n                }\n            }\n        };\n\n        if (urlUtils.isRelative(url)) {\n            // passing no path to resolve will return just MPD BaseURL/baseUri\n            const baseUrl = baseURLController.resolve();\n            if (baseUrl) {\n                url = urlUtils.resolve(url, baseUrl.url);\n            }\n        }\n\n        req.open(verb, url);\n        req.timeout = HTTP_TIMEOUT_MS || 0;\n        req.onload = onload;\n        req.onloadend = oncomplete;\n        req.send();\n    }\n\n    function httpHeadHandler(url, onSuccessCB, onFailureCB) {\n        httpHandler(rfc1123Decoder, url, onSuccessCB, onFailureCB, true);\n    }\n\n    function checkForDateHeader() {\n        let metrics = metricsModel.getReadOnlyMetricsFor(Constants.STREAM);\n        let dateHeaderValue = dashMetrics.getLatestMPDRequestHeaderValueByID(metrics, 'Date');\n        let dateHeaderTime = dateHeaderValue !== null ? new Date(dateHeaderValue).getTime() : Number.NaN;\n\n        if (!isNaN(dateHeaderTime)) {\n            setOffsetMs(dateHeaderTime - new Date().getTime());\n            completeTimeSyncSequence(false, dateHeaderTime / 1000, offsetToDeviceTimeMs);\n        } else {\n            completeTimeSyncSequence(true);\n        }\n    }\n\n    function completeTimeSyncSequence(failed, time, offset) {\n        setIsSynchronizing(false);\n        eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED, { time: time, offset: offset, error: failed ? new DashJSError(TIME_SYNC_FAILED_ERROR_CODE) : null });\n    }\n\n    function attemptSync(sources, sourceIndex) {\n\n        // if called with no sourceIndex, use zero (highest priority)\n        let  index = sourceIndex || 0;\n\n        // the sources should be ordered in priority from the manifest.\n        // try each in turn, from the top, until either something\n        // sensible happens, or we run out of sources to try.\n        let source = sources[index];\n\n        // callback to emit event to listeners\n        const onComplete = function (time, offset) {\n            let failed = !time || !offset;\n            if (failed && useManifestDateHeaderTimeSource) {\n                //Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.\n                checkForDateHeader();\n            } else {\n                completeTimeSyncSequence(failed, time, offset);\n            }\n        };\n\n        setIsSynchronizing(true);\n\n        if (source) {\n            // check if there is a handler for this @schemeIdUri\n            if (handlers.hasOwnProperty(source.schemeIdUri)) {\n                // if so, call it with its @value\n                handlers[source.schemeIdUri](\n                    source.value,\n                    function (serverTime) {\n                        // the timing source returned something useful\n                        const deviceTime = new Date().getTime();\n                        const offset = Math.trunc((serverTime - deviceTime) / 1000) * 1000;\n\n                        setOffsetMs(offset);\n\n                        logger.debug('Local time: ' + new Date(deviceTime));\n                        logger.debug('Server time: ' + new Date(serverTime));\n                        logger.info('Server Time - Local Time (ms): ' + offset);\n\n                        onComplete(serverTime, offset);\n                    },\n                    function () {\n                        // the timing source was probably uncontactable\n                        // or returned something we can't use - try again\n                        // with the remaining sources\n                        attemptSync(sources, index + 1);\n                    }\n                );\n            } else {\n                // an unknown schemeIdUri must have been found\n                // try again with the remaining sources\n                attemptSync(sources, index + 1);\n            }\n        } else {\n            // no valid time source could be found, just use device time\n            setOffsetMs(0);\n            onComplete();\n        }\n    }\n\n    function reset() {\n        setIsInitialised(false);\n        setIsSynchronizing(false);\n    }\n\n    instance = {\n        initialize: initialize,\n        getOffsetToDeviceTimeMs: getOffsetToDeviceTimeMs,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTimeSyncController.__dashjs_factory_name = 'TimeSyncController';\nconst factory = FactoryMaker.getSingletonFactory(TimeSyncController);\nfactory.TIME_SYNC_FAILED_ERROR_CODE = TIME_SYNC_FAILED_ERROR_CODE;\nfactory.HTTP_TIMEOUT_MS = HTTP_TIMEOUT_MS;\nFactoryMaker.updateSingletonFactory(TimeSyncController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport X2JS from '../../../externals/xml2json';\nimport URLUtils from '../utils/URLUtils';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst ELEMENT_TYPE_PERIOD = 'Period';\nconst ELEMENT_TYPE_ADAPTATIONSET = 'AdaptationSet';\nconst ELEMENT_TYPE_EVENTSTREAM = 'EventStream';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        matchers,\n        iron,\n        manifest,\n        converter,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            metricsModel: config.metricsModel,\n            mediaPlayerModel: config.mediaPlayerModel,\n            requestModifier: config.requestModifier\n        });\n    }\n\n    function setMatchers(value) {\n        if (value) {\n            matchers = value;\n        }\n    }\n\n    function setIron(value) {\n        if (value) {\n            iron = value;\n        }\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        let elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        converter = new X2JS({\n            escapeMode:         false,\n            attributePrefix:    '',\n            arrayAccessForm:    'property',\n            emptyNodeForm:      'object',\n            stripWhitespaces:   false,\n            enableToStringFunc: false,\n            ignoreRoot:         true,\n            matchers:           matchers\n        });\n\n        manifest = mpd;\n        elements = getElementsToResolve(manifest.Period_asArray, manifest, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n        resolve(elements, ELEMENT_TYPE_PERIOD, RESOLVE_TYPE_ONLOAD);\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        let resolveObject = {};\n        let element,\n            url;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (let i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        let element,\n            resolveObject;\n\n        const openingTag = '<response>';\n        const closingTag = '</response>';\n        let mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            let index = 0;\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            if (element.resolvedContent.indexOf('<?xml') === 0) {\n                index = element.resolvedContent.indexOf('?>') + 2; //find the closing position of the xml declaration, if it exists.\n            }\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = converter.xml_str2json(mergedContent);\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        let elements = [];\n        let i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case ELEMENT_TYPE_PERIOD:\n                    for (i = 0; i < manifest[ELEMENT_TYPE_PERIOD + '_asArray'].length; i++) {\n                        obj = manifest[ELEMENT_TYPE_PERIOD + '_asArray'][i];\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_ADAPTATIONSET + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_ADAPTATIONSET + '_asArray'], obj, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(ELEMENT_TYPE_EVENTSTREAM + '_asArray')) {\n                            elements = elements.concat(getElementsToResolve(obj[ELEMENT_TYPE_EVENTSTREAM + '_asArray'], obj, ELEMENT_TYPE_EVENTSTREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, ELEMENT_TYPE_ADAPTATIONSET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case ELEMENT_TYPE_ADAPTATIONSET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        let toResolve = [];\n        let element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        let resolvedElements = [];\n        let element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type + '_asArray';\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            iron.run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        let i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setMatchers: setMatchers,\n        setIron: setIron,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n\n    let instance;\n    let root;\n    let dashManifestModel;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        let baseUrls = dashManifestModel.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                dashManifestModel.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        let target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        let nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport FragmentRequest from '../vo/FragmentRequest';\nimport Debug from '../../core/Debug';\n\nconst FRAGMENT_MODEL_LOADING = 'loading';\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\nconst FRAGMENT_MODEL_FAILED = 'failed';\n\nfunction FragmentModel(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const fragmentLoader = config.fragmentLoader;\n\n    let instance,\n        logger,\n        streamProcessor,\n        executedRequests,\n        loadingRequests;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(Events.LOADING_COMPLETED, onLoadingCompleted, instance);\n        eventBus.on(Events.LOADING_DATA_PROGRESS, onLoadingInProgress, instance);\n        eventBus.on(Events.LOADING_ABANDONED, onLoadingAborted, instance);\n    }\n\n    function setStreamProcessor(value) {\n        streamProcessor = value;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function isFragmentLoaded(request) {\n        const isEqualComplete = function (req1, req2) {\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\n        };\n\n        const isEqualMedia = function (req1, req2) {\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex) && (req1.type === req2.type);\n        };\n\n        const isEqualInit = function (req1, req2) {\n            return isNaN(req1.index) && isNaN(req2.index) && (req1.quality === req2.quality);\n        };\n\n        const check = function (requests) {\n            let isLoaded = false;\n\n            requests.some(req => {\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\n                    isLoaded = true;\n                    return isLoaded;\n                }\n            });\n            return isLoaded;\n        };\n\n        if (!request) {\n            return false;\n        }\n\n        return check(executedRequests);\n    }\n\n    function isFragmentLoadedOrPending(request) {\n        let isLoaded = false;\n        let i = 0;\n        let req;\n\n        // First, check if the fragment has already been loaded\n        isLoaded = isFragmentLoaded(request);\n\n        // Then, check if the fragment is about to be loeaded\n        if (!isLoaded) {\n            for (i = 0; i < loadingRequests.length; i++) {\n                req = loadingRequests[i];\n                if ((request.url === req.url) && (request.startTime === req.startTime)) {\n                    isLoaded = true;\n                }\n            }\n        }\n\n        return isLoaded;\n    }\n\n    /**\n     *\n     * Gets an array of {@link FragmentRequest} objects\n     *\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\n     *  the only mandatory property is state, which must be a value from\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\n     *  all the requests from executedRequests array where requests.quality = filter.quality\n     *\n     * @returns {Array}\n     * @memberof FragmentModel#\n     */\n    function getRequests(filter) {\n        const states = filter ? filter.state instanceof Array ? filter.state : [filter.state] : [];\n\n        let filteredRequests = [];\n        states.forEach(state => {\n            const requests = getRequestsForState(state);\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\n        });\n\n        return filteredRequests;\n    }\n\n    function getRequestThreshold(req) {\n        return isNaN(req.duration) ? 0.25 : req.duration / 8;\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime >= time - threshold : false);\n        });\n    }\n\n    function removeExecutedRequestsAfterTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime < time : false);\n        });\n    }\n\n    function removeExecutedRequestsInTimeRange(start, end) {\n        if (end <= start + 0.5) {\n            return;\n        }\n\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return (isNaN(req.startTime) || req.startTime >= (end - threshold)) ||\n                (isNaN(req.duration) || (req.startTime + req.duration) <= (start + threshold));\n        });\n    }\n\n    // Remove requests that are not \"represented\" by any of buffered ranges\n    function syncExecutedRequestsWithBufferedRange(bufferedRanges, streamDuration) {\n        if (!bufferedRanges || bufferedRanges.length === 0) {\n            removeExecutedRequestsBeforeTime();\n            return;\n        }\n\n        let start = 0;\n        for (let i = 0, ln = bufferedRanges.length; i < ln; i++) {\n            removeExecutedRequestsInTimeRange(start, bufferedRanges.start(i));\n            start = bufferedRanges.end(i);\n        }\n        if (streamDuration > 0) {\n            removeExecutedRequestsInTimeRange(start, streamDuration);\n        }\n    }\n\n    function abortRequests() {\n        fragmentLoader.abort();\n        loadingRequests = [];\n    }\n\n    function executeRequest(request) {\n        switch (request.action) {\n            case FragmentRequest.ACTION_COMPLETE:\n                executedRequests.push(request);\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_EXECUTED);\n                logger.debug('executeRequest trigger STREAM_COMPLETED');\n                eventBus.trigger(Events.STREAM_COMPLETED, {\n                    request: request,\n                    fragmentModel: this\n                });\n                break;\n            case FragmentRequest.ACTION_DOWNLOAD:\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\n                loadingRequests.push(request);\n                loadCurrentFragment(request);\n                break;\n            default:\n                logger.warn('Unknown request action.');\n        }\n    }\n\n    function loadCurrentFragment(request) {\n        eventBus.trigger(Events.FRAGMENT_LOADING_STARTED, {\n            sender: instance,\n            request: request\n        });\n        fragmentLoader.load(request);\n    }\n\n    function getRequestForTime(arr, time, threshold) {\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\n        const lastIdx = arr.length - 1;\n        for (let i = lastIdx; i >= 0; i--) {\n            const req = arr[i];\n            const start = req.startTime;\n            const end = start + req.duration;\n            threshold = !isNaN(threshold) ? threshold : getRequestThreshold(req);\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\n                return req;\n            }\n        }\n        return null;\n    }\n\n    function filterRequests(arr, filter) {\n        // for time use a specific filtration function\n        if (filter.hasOwnProperty('time')) {\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\n        }\n\n        return arr.filter(request => {\n            for (const prop in filter) {\n                if (prop === 'state') continue;\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) return false;\n            }\n\n            return true;\n        });\n    }\n\n    function getRequestsForState(state) {\n        let requests;\n        switch (state) {\n            case FRAGMENT_MODEL_LOADING:\n                requests = loadingRequests;\n                break;\n            case FRAGMENT_MODEL_EXECUTED:\n                requests = executedRequests;\n                break;\n            default:\n                requests = [];\n        }\n        return requests;\n    }\n\n    function addSchedulingInfoMetrics(request, state) {\n        metricsModel.addSchedulingInfo(\n            request.mediaType,\n            new Date(),\n            request.type,\n            request.startTime,\n            request.availabilityStartTime,\n            request.duration,\n            request.quality,\n            request.range,\n            state);\n\n        metricsModel.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\n    }\n\n    function onLoadingCompleted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\n\n        if (e.response && !e.error) {\n            executedRequests.push(e.request);\n        }\n\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_COMPLETED, {\n            request: e.request,\n            response: e.response,\n            error: e.error,\n            sender: this\n        });\n    }\n\n    function onLoadingInProgress(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_PROGRESS, {\n            request: e.request,\n            response: e.response,\n            error: e.error,\n            sender: this\n        });\n    }\n\n    function onLoadingAborted(e) {\n        if (e.sender !== fragmentLoader) return;\n\n        eventBus.trigger(Events.FRAGMENT_LOADING_ABANDONED, { streamProcessor: this.getStreamProcessor(), request: e.request, mediaType: e.mediaType });\n    }\n\n    function resetInitialSettings() {\n        executedRequests = [];\n        loadingRequests = [];\n    }\n\n    function reset() {\n        eventBus.off(Events.LOADING_COMPLETED, onLoadingCompleted, this);\n        eventBus.off(Events.LOADING_DATA_PROGRESS, onLoadingInProgress, this);\n        eventBus.off(Events.LOADING_ABANDONED, onLoadingAborted, this);\n\n        if (fragmentLoader) {\n            fragmentLoader.reset();\n        }\n        resetInitialSettings();\n    }\n\n    function addExecutedRequest(request) {\n        executedRequests.push(request);\n    }\n\n    instance = {\n        setStreamProcessor: setStreamProcessor,\n        getStreamProcessor: getStreamProcessor,\n        getRequests: getRequests,\n        isFragmentLoaded: isFragmentLoaded,\n        isFragmentLoadedOrPending: isFragmentLoadedOrPending,\n        removeExecutedRequestsBeforeTime: removeExecutedRequestsBeforeTime,\n        removeExecutedRequestsAfterTime: removeExecutedRequestsAfterTime,\n        syncExecutedRequestsWithBufferedRange: syncExecutedRequestsWithBufferedRange,\n        abortRequests: abortRequests,\n        executeRequest: executeRequest,\n        reset: reset,\n        addExecutedRequest: addExecutedRequest\n    };\n\n    setup();\n    return instance;\n}\n\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\nFactoryMaker.updateClassFactory(FragmentModel.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ManifestModel() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        manifest;\n\n    function getValue() {\n        return manifest;\n    }\n\n    function setValue(value) {\n        manifest = value;\n        if (value) {\n            eventBus.trigger(Events.MANIFEST_LOADED,  {data: value});\n        }\n    }\n\n    instance = {\n        getValue: getValue,\n        setValue: setValue\n    };\n\n    return instance;\n}\n\nManifestModel.__dashjs_factory_name = 'ManifestModel';\nexport default FactoryMaker.getSingletonFactory(ManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {\n    HTTPRequest\n}\nfrom '../vo/metrics/HTTPRequest';\nimport Constants from '../constants/Constants';\n\nconst DEFAULT_UTC_TIMING_SOURCE = {\n    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\n    value: 'http://time.akamai.com/?iso'\n};\nconst LIVE_DELAY_FRAGMENT_COUNT = 4;\n\nconst DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION = 360000;\nconst DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION = 360000;\n\nconst BANDWIDTH_SAFETY_FACTOR = 0.9;\nconst ABANDON_LOAD_TIMEOUT = 10000;\n\nconst BUFFER_TO_KEEP = 20;\nconst BUFFER_AHEAD_TO_KEEP = 80;\nconst BUFFER_PRUNING_INTERVAL = 10;\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nconst BUFFER_TIME_AT_TOP_QUALITY = 30;\nconst BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM = 60;\nconst LONG_FORM_CONTENT_DURATION_THRESHOLD = 600;\nconst SEGMENT_OVERLAP_TOLERANCE_TIME = 0.2;\nconst SMALL_GAP_LIMIT = 0.8;\nconst MANIFEST_UPDATE_RETRY_INTERVAL = 100;\n\nconst CACHE_LOAD_THRESHOLD_VIDEO = 50;\nconst CACHE_LOAD_THRESHOLD_AUDIO = 5;\n\nconst FRAGMENT_RETRY_ATTEMPTS = 3;\nconst FRAGMENT_RETRY_INTERVAL = 1000;\n\nconst MANIFEST_RETRY_ATTEMPTS = 3;\nconst MANIFEST_RETRY_INTERVAL = 500;\n\nconst XLINK_RETRY_ATTEMPTS = 1;\nconst XLINK_RETRY_INTERVAL = 500;\n\nconst DEFAULT_LOW_LATENCY_LIVE_DELAY = 2.8;\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\n\n//This value influences the startup time for live (in ms).\nconst WALLCLOCK_TIME_UPDATE_INTERVAL = 50;\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n\n    let instance,\n        useManifestDateHeaderTimeSource,\n        useSuggestedPresentationDelay,\n        UTCTimingSources,\n        liveDelayFragmentCount,\n        liveDelay,\n        scheduleWhilePaused,\n        bufferToKeep,\n        bufferAheadToKeep,\n        bufferPruningInterval,\n        lastBitrateCachingInfo,\n        lastMediaSettingsCachingInfo,\n        stableBufferTime,\n        bufferTimeAtTopQuality,\n        bufferTimeAtTopQualityLongForm,\n        longFormContentDurationThreshold,\n        segmentOverlapToleranceTime,\n        bandwidthSafetyFactor,\n        abandonLoadTimeout,\n        retryAttempts,\n        retryIntervals,\n        wallclockTimeUpdateInterval,\n        ABRStrategy,\n        useDefaultABRRules,\n        xhrWithCredentials,\n        fastSwitchEnabled,\n        customABRRule,\n        movingAverageMethod,\n        cacheLoadThresholds,\n        jumpGaps,\n        smallGapLimit,\n        lowLatencyEnabled,\n        manifestUpdateRetryInterval;\n\n    function setup() {\n        UTCTimingSources = [];\n        useSuggestedPresentationDelay = false;\n        useManifestDateHeaderTimeSource = true;\n        scheduleWhilePaused = true;\n        ABRStrategy = Constants.ABR_STRATEGY_DYNAMIC;\n        useDefaultABRRules = true;\n        fastSwitchEnabled = false;\n        lastBitrateCachingInfo = {\n            enabled: true,\n            ttl: DEFAULT_LOCAL_STORAGE_BITRATE_EXPIRATION\n        };\n        lastMediaSettingsCachingInfo = {\n            enabled: true,\n            ttl: DEFAULT_LOCAL_STORAGE_MEDIA_SETTINGS_EXPIRATION\n        };\n        liveDelayFragmentCount = LIVE_DELAY_FRAGMENT_COUNT;\n        liveDelay = undefined; // Explicitly state that default is undefined\n        bufferToKeep = BUFFER_TO_KEEP;\n        bufferAheadToKeep = BUFFER_AHEAD_TO_KEEP;\n        bufferPruningInterval = BUFFER_PRUNING_INTERVAL;\n        stableBufferTime = NaN;\n        bufferTimeAtTopQuality = BUFFER_TIME_AT_TOP_QUALITY;\n        bufferTimeAtTopQualityLongForm = BUFFER_TIME_AT_TOP_QUALITY_LONG_FORM;\n        longFormContentDurationThreshold = LONG_FORM_CONTENT_DURATION_THRESHOLD;\n        segmentOverlapToleranceTime = SEGMENT_OVERLAP_TOLERANCE_TIME;\n        bandwidthSafetyFactor = BANDWIDTH_SAFETY_FACTOR;\n        abandonLoadTimeout = ABANDON_LOAD_TIMEOUT;\n        wallclockTimeUpdateInterval = WALLCLOCK_TIME_UPDATE_INTERVAL;\n        jumpGaps = false;\n        smallGapLimit = SMALL_GAP_LIMIT;\n        manifestUpdateRetryInterval = MANIFEST_UPDATE_RETRY_INTERVAL;\n        xhrWithCredentials = {\n            default: DEFAULT_XHR_WITH_CREDENTIALS\n        };\n        customABRRule = [];\n        movingAverageMethod = Constants.MOVING_AVERAGE_SLIDING_WINDOW;\n        lowLatencyEnabled = false;\n\n        retryAttempts = {\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_ATTEMPTS,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_ATTEMPTS,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_ATTEMPTS,\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_ATTEMPTS\n        };\n\n        retryIntervals = {\n            [HTTPRequest.MPD_TYPE]:                         MANIFEST_RETRY_INTERVAL,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]:             XLINK_RETRY_INTERVAL,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.INIT_SEGMENT_TYPE]:                FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]:               FRAGMENT_RETRY_INTERVAL,\n            [HTTPRequest.OTHER_TYPE]:                       FRAGMENT_RETRY_INTERVAL\n        };\n\n        cacheLoadThresholds = {};\n        cacheLoadThresholds[Constants.VIDEO] = CACHE_LOAD_THRESHOLD_VIDEO;\n        cacheLoadThresholds[Constants.AUDIO] = CACHE_LOAD_THRESHOLD_AUDIO;\n    }\n\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n\n    function setABRStrategy(value) {\n        ABRStrategy = value;\n    }\n\n    function getABRStrategy() {\n        return ABRStrategy;\n    }\n\n    function setUseDefaultABRRules(value) {\n        useDefaultABRRules = value;\n    }\n\n    function getUseDefaultABRRules() {\n        return useDefaultABRRules;\n    }\n\n    function findABRCustomRule(rulename) {\n        let i;\n        for (i = 0; i < customABRRule.length; i++) {\n            if (customABRRule[i].rulename === rulename) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getABRCustomRules() {\n        return customABRRule;\n    }\n\n    function addABRCustomRule(type, rulename, rule) {\n\n        let index = findABRCustomRule(rulename);\n        if (index === -1) {\n            // add rule\n            customABRRule.push({\n                type: type,\n                rulename: rulename,\n                rule: rule\n            });\n        } else {\n            // update rule\n            customABRRule[index].type = type;\n            customABRRule[index].rule = rule;\n        }\n    }\n\n    function removeABRCustomRule(rulename) {\n        let index = findABRCustomRule(rulename);\n        if (index !== -1) {\n            // remove rule\n            customABRRule.splice(index, 1);\n        }\n    }\n\n    function removeAllABRCustomRule() {\n        customABRRule = [];\n    }\n\n    function setBandwidthSafetyFactor(value) {\n        bandwidthSafetyFactor = value;\n    }\n\n    function getBandwidthSafetyFactor() {\n        return bandwidthSafetyFactor;\n    }\n\n    function setAbandonLoadTimeout(value) {\n        abandonLoadTimeout = value;\n    }\n\n    function getAbandonLoadTimeout() {\n        return abandonLoadTimeout;\n    }\n\n    function setStableBufferTime(value) {\n        stableBufferTime = value;\n    }\n\n    function getStableBufferTime() {\n        const result = !isNaN(stableBufferTime) ? stableBufferTime : fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n        return getLowLatencyEnabled() ? result / LOW_LATENCY_REDUCTION_FACTOR : result;\n    }\n\n    function setBufferTimeAtTopQuality(value) {\n        bufferTimeAtTopQuality = value;\n    }\n\n    function getBufferTimeAtTopQuality() {\n        return bufferTimeAtTopQuality;\n    }\n\n    function setBufferTimeAtTopQualityLongForm(value) {\n        bufferTimeAtTopQualityLongForm = value;\n    }\n\n    function getBufferTimeAtTopQualityLongForm() {\n        return bufferTimeAtTopQualityLongForm;\n    }\n\n    function setLongFormContentDurationThreshold(value) {\n        longFormContentDurationThreshold = value;\n    }\n\n    function getLongFormContentDurationThreshold() {\n        return longFormContentDurationThreshold;\n    }\n\n    function setSegmentOverlapToleranceTime(value) {\n        segmentOverlapToleranceTime = value;\n    }\n\n    function getSegmentOverlapToleranceTime() {\n        return segmentOverlapToleranceTime;\n    }\n\n    function setCacheLoadThresholdForType(type, value) {\n        cacheLoadThresholds[type] = value;\n    }\n\n    function getCacheLoadThresholdForType(type) {\n        return cacheLoadThresholds[type];\n    }\n\n    function setBufferToKeep(value) {\n        bufferToKeep = value;\n    }\n\n    function getBufferToKeep() {\n        return bufferToKeep;\n    }\n\n    function setBufferAheadToKeep(value) {\n        bufferAheadToKeep = value;\n    }\n\n    function getBufferAheadToKeep() {\n        return bufferAheadToKeep;\n    }\n\n    function setLastBitrateCachingInfo(enable, ttl) {\n        lastBitrateCachingInfo.enabled = enable;\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\n            lastBitrateCachingInfo.ttl = ttl;\n        }\n    }\n\n    function getLastBitrateCachingInfo() {\n        return lastBitrateCachingInfo;\n    }\n\n    function setLastMediaSettingsCachingInfo(enable, ttl) {\n        lastMediaSettingsCachingInfo.enabled = enable;\n        if (ttl !== undefined && !isNaN(ttl) && typeof (ttl) === 'number') {\n            lastMediaSettingsCachingInfo.ttl = ttl;\n        }\n    }\n\n    function getLastMediaSettingsCachingInfo() {\n        return lastMediaSettingsCachingInfo;\n    }\n\n    function setBufferPruningInterval(value) {\n        bufferPruningInterval = value;\n    }\n\n    function getBufferPruningInterval() {\n        return bufferPruningInterval;\n    }\n\n    function setFragmentRetryAttempts(value) {\n        retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\n    }\n\n    function setManifestRetryAttempts(value) {\n        retryAttempts[HTTPRequest.MPD_TYPE] = value;\n    }\n\n    function setRetryAttemptsForType(type, value) {\n        retryAttempts[type] = value;\n    }\n\n    function getFragmentRetryAttempts() {\n        return retryAttempts[HTTPRequest.MEDIA_SEGMENT_TYPE];\n    }\n\n    function getManifestRetryAttempts() {\n        return retryAttempts[HTTPRequest.MPD_TYPE];\n    }\n\n    function getRetryAttemptsForType(type) {\n        return getLowLatencyEnabled() ? retryAttempts[type] * LOW_LATENCY_MULTIPLY_FACTOR : retryAttempts[type];\n    }\n\n    function setFragmentRetryInterval(value) {\n        retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE] = value;\n    }\n\n    function setManifestRetryInterval(value) {\n        retryIntervals[HTTPRequest.MPD_TYPE] = value;\n    }\n\n    function setRetryIntervalForType(type, value) {\n        retryIntervals[type] = value;\n    }\n\n    function getFragmentRetryInterval() {\n        return retryIntervals[HTTPRequest.MEDIA_SEGMENT_TYPE];\n    }\n\n    function getManifestRetryInterval() {\n        return retryIntervals[HTTPRequest.MPD_TYPE];\n    }\n\n    function getRetryIntervalForType(type) {\n        return getLowLatencyEnabled() ? retryIntervals[type] / LOW_LATENCY_REDUCTION_FACTOR : retryIntervals[type];\n    }\n\n    function setWallclockTimeUpdateInterval(value) {\n        wallclockTimeUpdateInterval = value;\n    }\n\n    function getWallclockTimeUpdateInterval() {\n        return wallclockTimeUpdateInterval;\n    }\n\n    function setScheduleWhilePaused(value) {\n        scheduleWhilePaused = value;\n    }\n\n    function getScheduleWhilePaused() {\n        return scheduleWhilePaused;\n    }\n\n    function setLiveDelayFragmentCount(value) {\n        liveDelayFragmentCount = value;\n    }\n\n    function setLiveDelay(value) {\n        liveDelay = value;\n    }\n\n    function getLiveDelayFragmentCount() {\n        return liveDelayFragmentCount;\n    }\n\n    function getLiveDelay() {\n        if (lowLatencyEnabled) {\n            return liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\n        }\n        return liveDelay;\n    }\n\n    function setUseManifestDateHeaderTimeSource(value) {\n        useManifestDateHeaderTimeSource = value;\n    }\n\n    function getUseManifestDateHeaderTimeSource() {\n        return useManifestDateHeaderTimeSource;\n    }\n\n    function setUseSuggestedPresentationDelay(value) {\n        useSuggestedPresentationDelay = value;\n    }\n\n    function getUseSuggestedPresentationDelay() {\n        return useSuggestedPresentationDelay;\n    }\n\n    function setUTCTimingSources(value) {\n        UTCTimingSources = value;\n    }\n\n    function getUTCTimingSources() {\n        return UTCTimingSources;\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        if (useCreds === undefined) {\n            return xhrWithCredentials.default;\n        }\n\n        return useCreds;\n    }\n\n    function getFastSwitchEnabled() {\n        return fastSwitchEnabled;\n    }\n\n    function setFastSwitchEnabled(value) {\n        fastSwitchEnabled = value;\n    }\n\n    function setMovingAverageMethod(value) {\n        movingAverageMethod = value;\n    }\n\n    function getMovingAverageMethod() {\n        return movingAverageMethod;\n    }\n\n    function setJumpGaps(value) {\n        jumpGaps = value;\n    }\n\n    function getJumpGaps() {\n        return jumpGaps;\n    }\n\n    function setSmallGapLimit(value) {\n        smallGapLimit = value;\n    }\n\n    function getSmallGapLimit() {\n        return smallGapLimit;\n    }\n\n    function getLowLatencyEnabled() {\n        return lowLatencyEnabled;\n    }\n\n    function setLowLatencyEnabled(value) {\n        lowLatencyEnabled = value;\n    }\n\n    function setManifestUpdateRetryInterval(value) {\n        manifestUpdateRetryInterval = value;\n    }\n\n    function getManifestUpdateRetryInterval() {\n        return manifestUpdateRetryInterval;\n    }\n\n    function reset() {\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\n        //setup();\n    }\n\n    instance = {\n        setABRStrategy: setABRStrategy,\n        getABRStrategy: getABRStrategy,\n        setUseDefaultABRRules: setUseDefaultABRRules,\n        getUseDefaultABRRules: getUseDefaultABRRules,\n        getABRCustomRules: getABRCustomRules,\n        addABRCustomRule: addABRCustomRule,\n        removeABRCustomRule: removeABRCustomRule,\n        removeAllABRCustomRule: removeAllABRCustomRule,\n        setBandwidthSafetyFactor: setBandwidthSafetyFactor,\n        getBandwidthSafetyFactor: getBandwidthSafetyFactor,\n        setAbandonLoadTimeout: setAbandonLoadTimeout,\n        getAbandonLoadTimeout: getAbandonLoadTimeout,\n        setLastBitrateCachingInfo: setLastBitrateCachingInfo,\n        getLastBitrateCachingInfo: getLastBitrateCachingInfo,\n        setLastMediaSettingsCachingInfo: setLastMediaSettingsCachingInfo,\n        getLastMediaSettingsCachingInfo: getLastMediaSettingsCachingInfo,\n        setStableBufferTime: setStableBufferTime,\n        getStableBufferTime: getStableBufferTime,\n        setBufferTimeAtTopQuality: setBufferTimeAtTopQuality,\n        getBufferTimeAtTopQuality: getBufferTimeAtTopQuality,\n        setBufferTimeAtTopQualityLongForm: setBufferTimeAtTopQualityLongForm,\n        getBufferTimeAtTopQualityLongForm: getBufferTimeAtTopQualityLongForm,\n        setLongFormContentDurationThreshold: setLongFormContentDurationThreshold,\n        getLongFormContentDurationThreshold: getLongFormContentDurationThreshold,\n        setSegmentOverlapToleranceTime: setSegmentOverlapToleranceTime,\n        getSegmentOverlapToleranceTime: getSegmentOverlapToleranceTime,\n        getCacheLoadThresholdForType: getCacheLoadThresholdForType,\n        setCacheLoadThresholdForType: setCacheLoadThresholdForType,\n        setBufferToKeep: setBufferToKeep,\n        getBufferToKeep: getBufferToKeep,\n        setBufferAheadToKeep: setBufferAheadToKeep,\n        getBufferAheadToKeep: getBufferAheadToKeep,\n        setBufferPruningInterval: setBufferPruningInterval,\n        getBufferPruningInterval: getBufferPruningInterval,\n        setFragmentRetryAttempts: setFragmentRetryAttempts,\n        getFragmentRetryAttempts: getFragmentRetryAttempts,\n        setManifestRetryAttempts: setManifestRetryAttempts,\n        getManifestRetryAttempts: getManifestRetryAttempts,\n        setRetryAttemptsForType: setRetryAttemptsForType,\n        getRetryAttemptsForType: getRetryAttemptsForType,\n        setFragmentRetryInterval: setFragmentRetryInterval,\n        getFragmentRetryInterval: getFragmentRetryInterval,\n        setManifestRetryInterval: setManifestRetryInterval,\n        getManifestRetryInterval: getManifestRetryInterval,\n        setRetryIntervalForType: setRetryIntervalForType,\n        getRetryIntervalForType: getRetryIntervalForType,\n        setWallclockTimeUpdateInterval: setWallclockTimeUpdateInterval,\n        getWallclockTimeUpdateInterval: getWallclockTimeUpdateInterval,\n        setScheduleWhilePaused: setScheduleWhilePaused,\n        getScheduleWhilePaused: getScheduleWhilePaused,\n        getUseSuggestedPresentationDelay: getUseSuggestedPresentationDelay,\n        setUseSuggestedPresentationDelay: setUseSuggestedPresentationDelay,\n        setLiveDelayFragmentCount: setLiveDelayFragmentCount,\n        getLiveDelayFragmentCount: getLiveDelayFragmentCount,\n        getLiveDelay: getLiveDelay,\n        setLiveDelay: setLiveDelay,\n        setUseManifestDateHeaderTimeSource: setUseManifestDateHeaderTimeSource,\n        getUseManifestDateHeaderTimeSource: getUseManifestDateHeaderTimeSource,\n        setUTCTimingSources: setUTCTimingSources,\n        getUTCTimingSources: getUTCTimingSources,\n        setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n        setFastSwitchEnabled: setFastSwitchEnabled,\n        getFastSwitchEnabled: getFastSwitchEnabled,\n        setMovingAverageMethod: setMovingAverageMethod,\n        getMovingAverageMethod: getMovingAverageMethod,\n        setJumpGaps: setJumpGaps,\n        getJumpGaps: getJumpGaps,\n        setSmallGapLimit: setSmallGapLimit,\n        getSmallGapLimit: getSmallGapLimit,\n        getLowLatencyEnabled: getLowLatencyEnabled,\n        setLowLatencyEnabled: setLowLatencyEnabled,\n        setManifestUpdateRetryInterval: setManifestUpdateRetryInterval,\n        getManifestUpdateRetryInterval: getManifestUpdateRetryInterval,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\n//TODO see if you can move this and not export and just getter to get default value.\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nconst factory = FactoryMaker.getSingletonFactory(MediaPlayerModel);\nfactory.DEFAULT_UTC_TIMING_SOURCE = DEFAULT_UTC_TIMING_SOURCE;\nFactoryMaker.updateSingletonFactory(MediaPlayerModel.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport MetricsList from '../vo/MetricsList';\nimport TCPConnection from '../vo/metrics/TCPConnection';\nimport {HTTPRequest, HTTPRequestTrace} from '../vo/metrics/HTTPRequest';\nimport TrackSwitch from '../vo/metrics/RepresentationSwitch';\nimport BufferLevel from '../vo/metrics/BufferLevel';\nimport BufferState from '../vo/metrics/BufferState';\nimport DVRInfo from '../vo/metrics/DVRInfo';\nimport DroppedFrames from '../vo/metrics/DroppedFrames';\nimport {ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateRepresentationInfo} from '../vo/metrics/ManifestUpdate';\nimport SchedulingInfo from '../vo/metrics/SchedulingInfo';\nimport EventBus from '../../core/EventBus';\nimport RequestsQueue from '../vo/metrics/RequestsQueue';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction MetricsModel() {\n\n    const MAXIMUM_LIST_DEPTH = 1000;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        adapter,\n        streamMetrics;\n\n    function setup() {\n        streamMetrics = {};\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function metricsChanged() {\n        eventBus.trigger(Events.METRICS_CHANGED);\n    }\n\n    function metricChanged(mediaType) {\n        eventBus.trigger(Events.METRIC_CHANGED, {mediaType: mediaType});\n        metricsChanged();\n    }\n\n    function metricUpdated(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_UPDATED, {mediaType: mediaType, metric: metricType, value: vo});\n        metricChanged(mediaType);\n    }\n\n    function metricAdded(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_ADDED, {mediaType: mediaType, metric: metricType, value: vo});\n        metricChanged(mediaType);\n    }\n\n    function clearCurrentMetricsForType(type) {\n        delete streamMetrics[type];\n        metricChanged(type);\n    }\n\n    function clearAllCurrentMetrics() {\n        streamMetrics = {};\n        metricsChanged();\n    }\n\n    function getReadOnlyMetricsFor(type) {\n        if (streamMetrics.hasOwnProperty(type)) {\n            return streamMetrics[type];\n        }\n\n        return null;\n    }\n\n    function getMetricsFor(type) {\n        let metrics;\n\n        if (streamMetrics.hasOwnProperty(type)) {\n            metrics = streamMetrics[type];\n        } else {\n            metrics = new MetricsList();\n            streamMetrics[type] = metrics;\n        }\n\n        return metrics;\n    }\n\n    function pushMetrics(type, list, value) {\n        let metrics = getMetricsFor(type);\n        metrics[list].push(value);\n        if ( metrics[list].length > MAXIMUM_LIST_DEPTH ) {\n            metrics[list].shift();\n        }\n    }\n\n    function addTcpConnection(mediaType, tcpid, dest, topen, tclose, tconnect) {\n        let vo = new TCPConnection();\n\n        vo.tcpid = tcpid;\n        vo.dest = dest;\n        vo.topen = topen;\n        vo.tclose = tclose;\n        vo.tconnect = tconnect;\n\n        pushAndNotify(mediaType, MetricsConstants.TCP_CONNECTION, vo);\n\n        return vo;\n    }\n\n    function appendHttpTrace(httpRequest, s, d, b) {\n        let vo = new HTTPRequestTrace();\n\n        vo.s = s;\n        vo.d = d;\n        vo.b = b;\n\n        httpRequest.trace.push(vo);\n\n        if (!httpRequest.interval) {\n            httpRequest.interval = 0;\n        }\n\n        httpRequest.interval += d;\n\n        return vo;\n    }\n\n    function addHttpRequest(mediaType, tcpid, type, url, actualurl, serviceLocation, range, trequest, tresponse, tfinish, responsecode, mediaduration, responseHeaders, traces) {\n        let vo = new HTTPRequest();\n\n        // ISO 23009-1 D.4.3 NOTE 2:\n        // All entries for a given object will have the same URL and range\n        // and so can easily be correlated. If there were redirects or\n        // failures there will be one entry for each redirect/failure.\n        // The redirect-to URL or alternative url (where multiple have been\n        // provided in the MPD) will appear as the actualurl of the next\n        // entry with the same url value.\n        if (actualurl && (actualurl !== url)) {\n\n            // given the above, add an entry for the original request\n            addHttpRequest(\n                mediaType,\n                null,\n                type,\n                url,\n                null,\n                null,\n                range,\n                trequest,\n                null, // unknown\n                null, // unknown\n                null, // unknown, probably a 302\n                mediaduration,\n                null,\n                null\n            );\n\n            vo.actualurl = actualurl;\n        }\n\n        vo.tcpid = tcpid;\n        vo.type = type;\n        vo.url = url;\n        vo.range = range;\n        vo.trequest = trequest;\n        vo.tresponse = tresponse;\n        vo.responsecode = responsecode;\n\n        vo._tfinish = tfinish;\n        vo._stream = mediaType;\n        vo._mediaduration = mediaduration;\n        vo._responseHeaders = responseHeaders;\n        vo._serviceLocation = serviceLocation;\n\n        if (traces) {\n            traces.forEach(trace => {\n                appendHttpTrace(vo, trace.s, trace.d, trace.b);\n            });\n        } else {\n            // The interval and trace shall be absent for redirect and failure records.\n            delete vo.interval;\n            delete vo.trace;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.HTTP_REQUEST, vo);\n\n        return vo;\n    }\n\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        let vo = new TrackSwitch();\n\n        vo.t = t;\n        vo.mt = mt;\n        vo.to = to;\n\n        if (lto) {\n            vo.lto = lto;\n        } else {\n            delete vo.lto;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.TRACK_SWITCH, vo);\n\n        return vo;\n    }\n\n    function pushAndNotify(mediaType, metricType, metricObject) {\n        pushMetrics(mediaType, metricType, metricObject);\n        metricAdded(mediaType, metricType, metricObject);\n    }\n\n    function addBufferLevel(mediaType, t, level) {\n        let vo = new BufferLevel();\n        vo.t = t;\n        vo.level = level;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_LEVEL, vo);\n\n        return vo;\n    }\n\n    function addBufferState(mediaType, state, target) {\n        let vo = new BufferState();\n        vo.target = target;\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_STATE, vo);\n\n        return vo;\n    }\n\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        let vo = new DVRInfo();\n        vo.time = currentTime ;\n        vo.range = range;\n        vo.manifestInfo = mpd;\n\n        pushAndNotify(mediaType, MetricsConstants.DVR_INFO, vo);\n\n        return vo;\n    }\n\n    function addDroppedFrames(mediaType, quality) {\n        let vo = new DroppedFrames();\n        let list = getMetricsFor(mediaType).DroppedFrames;\n\n        vo.time = quality.creationTime;\n        vo.droppedFrames = quality.droppedVideoFrames;\n\n        if (list.length > 0 && list[list.length - 1] == vo) {\n            return list[list.length - 1];\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.DROPPED_FRAMES, vo);\n\n        return vo;\n    }\n\n    function addSchedulingInfo(mediaType, t, type, startTime, availabilityStartTime, duration, quality, range, state) {\n        let vo = new SchedulingInfo();\n\n        vo.mediaType = mediaType;\n        vo.t = t;\n\n        vo.type = type;\n        vo.startTime = startTime;\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.duration = duration;\n        vo.quality = quality;\n        vo.range = range;\n\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.SCHEDULING_INFO, vo);\n\n        return vo;\n    }\n\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        let vo = new RequestsQueue();\n        vo.loadingRequests = loadingRequests;\n        vo.executedRequests = executedRequests;\n\n        getMetricsFor(mediaType).RequestsQueue = vo;\n        metricAdded(mediaType, MetricsConstants.REQUESTS_QUEUE, vo);\n    }\n\n    function addManifestUpdate(mediaType, type, requestTime, fetchTime, availabilityStartTime, presentationStartTime, clientTimeOffset, currentTime, buffered, latency) {\n        let vo = new ManifestUpdate();\n\n        vo.mediaType = mediaType;\n        vo.type = type;\n        vo.requestTime = requestTime; // when this manifest update was requested\n        vo.fetchTime = fetchTime; // when this manifest update was received\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.presentationStartTime = presentationStartTime; // the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n        vo.clientTimeOffset = clientTimeOffset; // the calculated difference between the server and client wall clock time\n        vo.currentTime = currentTime; // actual element.currentTime\n        vo.buffered = buffered; // actual element.ranges\n        vo.latency = latency; // (static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - currentTime)\n\n        pushMetrics(Constants.STREAM, MetricsConstants.MANIFEST_UPDATE, vo);\n        metricAdded(mediaType, MetricsConstants.MANIFEST_UPDATE, vo);\n\n        return vo;\n    }\n\n    function updateManifestUpdateInfo(manifestUpdate, updatedFields) {\n        if (manifestUpdate) {\n            for (let field in updatedFields) {\n                manifestUpdate[field] = updatedFields[field];\n            }\n\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateStreamInfo(manifestUpdate, id, index, start, duration) {\n        if (manifestUpdate) {\n            let vo = new ManifestUpdateStreamInfo();\n\n            vo.id = id;\n            vo.index = index;\n            vo.start = start;\n            vo.duration = duration;\n\n            manifestUpdate.streamInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_STREAM_INFO, manifestUpdate);\n\n            return vo;\n        }\n        return null;\n    }\n\n    function addManifestUpdateRepresentationInfo(manifestUpdate, id, index, streamIndex, mediaType, presentationTimeOffset, startNumber, fragmentInfoType) {\n        if (manifestUpdate) {\n\n            const vo = new ManifestUpdateRepresentationInfo();\n            vo.id = id;\n            vo.index = index;\n            vo.streamIndex = streamIndex;\n            vo.mediaType = mediaType;\n            vo.startNumber = startNumber;\n            vo.fragmentInfoType = fragmentInfoType;\n            vo.presentationTimeOffset = presentationTimeOffset;\n\n            manifestUpdate.representationInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_TRACK_INFO, manifestUpdate);\n\n            return vo;\n        }\n        return null;\n    }\n\n    function addPlayList(vo) {\n        let type = Constants.STREAM;\n\n        if (vo.trace && Array.isArray(vo.trace)) {\n            vo.trace.forEach(trace => {\n                if (trace.hasOwnProperty('subreplevel') && !trace.subreplevel) {\n                    delete trace.subreplevel;\n                }\n            });\n        } else {\n            delete vo.trace;\n        }\n\n        pushAndNotify(type, MetricsConstants.PLAY_LIST, vo);\n\n        return vo;\n    }\n\n    function addDVBErrors(vo) {\n        let type = Constants.STREAM;\n\n        pushAndNotify(type, MetricsConstants.DVB_ERRORS, vo);\n\n        return vo;\n    }\n\n    instance = {\n        clearCurrentMetricsForType: clearCurrentMetricsForType,\n        clearAllCurrentMetrics: clearAllCurrentMetrics,\n        getReadOnlyMetricsFor: getReadOnlyMetricsFor,\n        getMetricsFor: getMetricsFor,\n        addTcpConnection: addTcpConnection,\n        addHttpRequest: addHttpRequest,\n        addRepresentationSwitch: addRepresentationSwitch,\n        addBufferLevel: addBufferLevel,\n        addBufferState: addBufferState,\n        addDVRInfo: addDVRInfo,\n        addDroppedFrames: addDroppedFrames,\n        addSchedulingInfo: addSchedulingInfo,\n        addRequestsQueue: addRequestsQueue,\n        addManifestUpdate: addManifestUpdate,\n        updateManifestUpdateInfo: updateManifestUpdateInfo,\n        addManifestUpdateStreamInfo: addManifestUpdateStreamInfo,\n        addManifestUpdateRepresentationInfo: addManifestUpdateRepresentationInfo,\n        addPlayList: addPlayList,\n        addDVBErrors: addDVBErrors,\n        setConfig: setConfig\n    };\n\n    setup();\n    return instance;\n}\n\nMetricsModel.__dashjs_factory_name = 'MetricsModel';\nexport default FactoryMaker.getSingletonFactory(MetricsModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport URIFragmentData from '../vo/URIFragmentData';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * Model class managing URI fragments.\n */\nfunction URIFragmentModel() {\n\n    let instance,\n        URIFragmentDataVO;\n\n    /**\n     * @param {string} uri The URI to parse for fragment extraction\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function initialize(uri) {\n        URIFragmentDataVO = new URIFragmentData();\n\n        if (!uri) return null;\n\n        const hashIndex = uri.indexOf('#');\n        if (hashIndex !== -1) {\n            const fragments = uri.substr(hashIndex + 1).split('&');\n            for (let i = 0, len = fragments.length; i < len; ++i) {\n                const fragment = fragments[i];\n                const equalIndex = fragment.indexOf('=');\n                if (equalIndex !== -1) {\n                    const key = fragment.substring(0,equalIndex);\n                    if (URIFragmentDataVO.hasOwnProperty(key)) {\n                        URIFragmentDataVO[key] = fragment.substr(equalIndex + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @returns {URIFragmentData} Object containing supported URI fragments\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function getURIFragmentData() {\n        return URIFragmentDataVO;\n    }\n\n    instance = {\n        initialize: initialize,\n        getURIFragmentData: getURIFragmentData\n    };\n\n    return instance;\n}\n\nURIFragmentModel.__dashjs_factory_name = 'URIFragmentModel';\nexport default FactoryMaker.getSingletonFactory(URIFragmentModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport Debug from '../../core/Debug';\n\nfunction VideoModel() {\n\n    let instance,\n        logger,\n        element,\n        TTMLRenderingDiv,\n        videoContainer,\n        previousPlaybackRate;\n\n    const VIDEO_MODEL_WRONG_ELEMENT_TYPE = 'element is not video or audio DOM type!';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const stalledStreams = [];\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        eventBus.on(Events.PLAYBACK_PLAYING, onPlaying, this);\n    }\n\n    function reset() {\n        eventBus.off(Events.PLAYBACK_PLAYING, onPlaying, this);\n    }\n\n    function onPlaybackCanPlay() {\n        if (element) {\n            element.playbackRate = previousPlaybackRate || 1;\n            element.removeEventListener('canplay', onPlaybackCanPlay);\n        }\n    }\n\n    function setPlaybackRate(value) {\n        if (!element) return;\n        if (element.readyState <= 2 && value > 0) {\n            // If media element hasn't loaded enough data to play yet, wait until it has\n            element.addEventListener('canplay', onPlaybackCanPlay);\n        } else {\n            element.playbackRate = value;\n        }\n    }\n\n    //TODO Move the DVR window calculations from MediaPlayer to Here.\n    function setCurrentTime(currentTime, stickToBuffered) {\n        if (element) {\n            //_currentTime = currentTime;\n\n            // We don't set the same currentTime because it can cause firing unexpected Pause event in IE11\n            // providing playbackRate property equals to zero.\n            if (element.currentTime == currentTime) return;\n\n            // TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime\n            // immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property\n            // Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to\n            // set currentTime even if readyState = 0.\n            // setTimeout is used to workaround InvalidStateError in IE11\n            try {\n                currentTime = stickToBuffered ? stickTimeToBuffered(currentTime) : currentTime;\n                element.currentTime = currentTime;\n            } catch (e) {\n                if (element.readyState === 0 && e.code === e.INVALID_STATE_ERR) {\n                    setTimeout(function () {\n                        element.currentTime = currentTime;\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    function stickTimeToBuffered(time) {\n        const buffered = getBufferRange();\n        let closestTime = time;\n        let closestDistance = 9999999999;\n        if (buffered) {\n            for (let i = 0; i < buffered.length; i++) {\n                const start = buffered.start(i);\n                const end = buffered.end(i);\n                const distanceToStart = Math.abs(start - time);\n                const distanceToEnd = Math.abs(end - time);\n\n                if (time >= start && time <= end) {\n                    return time;\n                }\n\n                if (distanceToStart < closestDistance) {\n                    closestDistance = distanceToStart;\n                    closestTime = start;\n                }\n\n                if (distanceToEnd < closestDistance) {\n                    closestDistance = distanceToEnd;\n                    closestTime = end;\n                }\n            }\n        }\n        return closestTime;\n    }\n\n    function getElement() {\n        return element;\n    }\n\n    function setElement(value) {\n        //add check of value type\n        if (value === null || value === undefined || (value && (/^(VIDEO|AUDIO)$/i).test(value.nodeName))) {\n            element = value;\n            // Workaround to force Firefox to fire the canplay event.\n            if (element) {\n                element.preload = 'auto';\n            }\n        } else {\n            throw VIDEO_MODEL_WRONG_ELEMENT_TYPE;\n        }\n    }\n\n    function setSource(source) {\n        if (element) {\n            if (source) {\n                element.src = source;\n            } else {\n                element.removeAttribute('src');\n                element.load();\n            }\n        }\n    }\n\n    function getSource() {\n        return element ? element.src : null;\n    }\n\n    function getVideoContainer() {\n        return videoContainer;\n    }\n\n    function setVideoContainer(value) {\n        videoContainer = value;\n    }\n\n    function getTTMLRenderingDiv() {\n        return TTMLRenderingDiv;\n    }\n\n    function setTTMLRenderingDiv(div) {\n        TTMLRenderingDiv = div;\n        // The styling will allow the captions to match the video window size and position.\n        TTMLRenderingDiv.style.position = 'absolute';\n        TTMLRenderingDiv.style.display = 'flex';\n        TTMLRenderingDiv.style.overflow = 'hidden';\n        TTMLRenderingDiv.style.pointerEvents = 'none';\n        TTMLRenderingDiv.style.top = 0;\n        TTMLRenderingDiv.style.left = 0;\n    }\n\n    function setStallState(type, state) {\n        stallStream(type, state);\n    }\n\n    function isStalled() {\n        return (stalledStreams.length > 0);\n    }\n\n    function addStalledStream(type) {\n\n        let event;\n\n        if (type === null || element.seeking || stalledStreams.indexOf(type) !== -1) {\n            return;\n        }\n\n        stalledStreams.push(type);\n        if (element && stalledStreams.length === 1) {\n            // Halt playback until nothing is stalled.\n            event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            previousPlaybackRate = element.playbackRate;\n            setPlaybackRate(0);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function removeStalledStream(type) {\n        let index = stalledStreams.indexOf(type);\n        let event;\n\n        if (type === null) {\n            return;\n        }\n        if (index !== -1) {\n            stalledStreams.splice(index, 1);\n        }\n        // If nothing is stalled resume playback.\n        if (element && isStalled() === false && element.playbackRate === 0) {\n            setPlaybackRate(previousPlaybackRate || 1);\n            if (!element.paused) {\n                event = document.createEvent('Event');\n                event.initEvent('playing', true, false);\n                element.dispatchEvent(event);\n            }\n        }\n    }\n\n    function stallStream(type, isStalled) {\n        if (isStalled) {\n            addStalledStream(type);\n        } else {\n            removeStalledStream(type);\n        }\n    }\n\n    //Calling play on the element will emit playing - even if the stream is stalled. If the stream is stalled, emit a waiting event.\n    function onPlaying() {\n        if (element && isStalled() && element.playbackRate === 0) {\n            const event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function getPlaybackQuality() {\n        if (!element) { return null; }\n        let hasWebKit = ('webkitDroppedFrameCount' in element) && ('webkitDecodedFrameCount' in element);\n        let hasQuality = ('getVideoPlaybackQuality' in element);\n        let result = null;\n\n        if (hasQuality) {\n            result = element.getVideoPlaybackQuality();\n        }\n        else if (hasWebKit) {\n            result = {\n                droppedVideoFrames: element.webkitDroppedFrameCount,\n                totalVideoFrames: element.webkitDroppedFrameCount + element.webkitDecodedFrameCount,\n                creationTime: new Date()\n            };\n        }\n\n        return result;\n    }\n\n    function play() {\n        if (element) {\n            element.autoplay = true;\n            const p = element.play();\n            if (p && (typeof Promise !== 'undefined') && (p instanceof Promise)) {\n                p.catch((e) => {\n                    if (e.name === 'NotAllowedError') {\n                        eventBus.trigger(Events.PLAYBACK_NOT_ALLOWED);\n                    }\n                    logger.warn(`Caught pending play exception - continuing (${e})`);\n                });\n            }\n        }\n    }\n\n    function isPaused() {\n        return element ? element.paused : null;\n    }\n\n    function pause() {\n        if (element) {\n            element.pause();\n            element.autoplay = false;\n        }\n    }\n\n    function isSeeking() {\n        return element ? element.seeking : null;\n    }\n\n    function getTime() {\n        return element ? element.currentTime : null;\n    }\n\n    function getPlaybackRate() {\n        return element ? element.playbackRate : null;\n    }\n\n    function getPlayedRanges() {\n        return element ? element.played : null;\n    }\n\n    function getEnded() {\n        return element ? element.ended : null;\n    }\n\n    function addEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.addEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function removeEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.removeEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function getReadyState() {\n        return element ? element.readyState : NaN;\n    }\n\n    function getBufferRange() {\n        return element ? element.buffered : null;\n    }\n\n    function getClientWidth() {\n        return element ? element.clientWidth : NaN;\n    }\n\n    function getClientHeight() {\n        return element ? element.clientHeight : NaN;\n    }\n\n    function getVideoWidth() {\n        return element ? element.videoWidth : NaN;\n    }\n\n    function getVideoHeight() {\n        return element ? element.videoHeight : NaN;\n    }\n\n    function getVideoRelativeOffsetTop() {\n        return element && element.parentNode ? element.getBoundingClientRect().top - element.parentNode.getBoundingClientRect().top : NaN;\n    }\n\n    function getVideoRelativeOffsetLeft() {\n        return element && element.parentNode ? element.getBoundingClientRect().left - element.parentNode.getBoundingClientRect().left : NaN;\n    }\n\n    function getTextTracks() {\n        return element ? element.textTracks : [];\n    }\n\n    function getTextTrack(kind, label, lang, isTTML, isEmbedded) {\n        if (element) {\n            for (var i = 0; i < element.textTracks.length; i++) {\n                //label parameter could be a number (due to adaptationSet), but label, the attribute of textTrack, is a string => to modify...\n                //label could also be undefined (due to adaptationSet)\n                if (element.textTracks[i].kind === kind && (label ? element.textTracks[i].label == label : true) &&\n                   element.textTracks[i].language === lang && element.textTracks[i].isTTML === isTTML && element.textTracks[i].isEmbedded === isEmbedded) {\n                    return element.textTracks[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function addTextTrack(kind, label, lang) {\n        if (element) {\n            return element.addTextTrack(kind, label, lang);\n        }\n        return null;\n    }\n\n    function appendChild(childElement) {\n        if (element) {\n            element.appendChild(childElement);\n            //in Chrome, we need to differenciate textTrack with same lang, kind and label but different format (vtt, ttml, etc...)\n            if (childElement.isTTML !== undefined) {\n                element.textTracks[element.textTracks.length - 1].isTTML = childElement.isTTML;\n                element.textTracks[element.textTracks.length - 1].isEmbedded = childElement.isEmbedded;\n            }\n        }\n    }\n\n    function removeChild(childElement) {\n        if (element) {\n            element.removeChild(childElement);\n        }\n    }\n\n    instance = {\n        initialize: initialize,\n        setCurrentTime: setCurrentTime,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        getTime: getTime,\n        getPlaybackRate: getPlaybackRate,\n        getPlayedRanges: getPlayedRanges,\n        getEnded: getEnded,\n        setStallState: setStallState,\n        getElement: getElement,\n        setElement: setElement,\n        setSource: setSource,\n        getSource: getSource,\n        getVideoContainer: getVideoContainer,\n        setVideoContainer: setVideoContainer,\n        getTTMLRenderingDiv: getTTMLRenderingDiv,\n        setTTMLRenderingDiv: setTTMLRenderingDiv,\n        getPlaybackQuality: getPlaybackQuality,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n        getReadyState: getReadyState,\n        getBufferRange: getBufferRange,\n        getClientWidth: getClientWidth,\n        getClientHeight: getClientHeight,\n        getTextTracks: getTextTracks,\n        getTextTrack: getTextTrack,\n        addTextTrack: addTextTrack,\n        appendChild: appendChild,\n        removeChild: removeChild,\n        getVideoWidth: getVideoWidth,\n        getVideoHeight: getVideoHeight,\n        getVideoRelativeOffsetTop: getVideoRelativeOffsetTop,\n        getVideoRelativeOffsetLeft: getVideoRelativeOffsetLeft,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nVideoModel.__dashjs_factory_name = 'VideoModel';\nexport default FactoryMaker.getSingletonFactory(VideoModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport BoxParser from '../utils/BoxParser';\n\n/**\n* @module FetchLoader\n* @description Manages download of resources via HTTP using fetch.\n* @param {Object} cfg - dependencies from parent\n*/\nfunction FetchLoader(cfg) {\n    cfg = cfg || {};\n    const requestModifier = cfg.requestModifier;\n\n    let instance;\n\n    function load(httpRequest) {\n\n        // Variables will be used in the callback functions\n        let firstProgress = true; /*jshint ignore:line*/\n        let needFailureReport = true; /*jshint ignore:line*/\n        let requestStartTime = new Date();\n        let lastTraceTime = requestStartTime; /*jshint ignore:line*/\n        let lastTraceReceivedCount = 0; /*jshint ignore:line*/\n\n        let request = httpRequest.request;\n\n        const headers = new Headers(); /*jshint ignore:line*/\n        if (request.range) {\n            headers.append('Range', 'bytes=' + request.range);\n        }\n\n        if (!request.requestStartDate) {\n            request.requestStartDate = requestStartTime;\n        }\n\n        if (requestModifier) {\n            // modifyRequestHeader expects a XMLHttpRequest object so,\n            // to keep backward compatibility, we should expose a setRequestHeader method\n            // TODO: Remove RequestModifier dependency on XMLHttpRequest object and define\n            // a more generic way to intercept/modify requests\n            requestModifier.modifyRequestHeader({\n                setRequestHeader: function (header, value) {\n                    headers.append(header, value);\n                }\n            });\n        }\n\n        let abortController;\n        if (typeof window.AbortController === 'function') {\n            abortController = new AbortController(); /*jshint ignore:line*/\n            httpRequest.abortController = abortController;\n        }\n\n        const reqOptions = {\n            method: httpRequest.method,\n            headers: headers,\n            credentials: httpRequest.withCredentials ? 'include' : undefined,\n            signal: abortController ? abortController.signal : undefined\n        };\n\n        fetch(httpRequest.url, reqOptions).then(function (response) {\n            if (!httpRequest.response) {\n                httpRequest.response = {};\n            }\n            httpRequest.response.status = response.status;\n            httpRequest.response.statusText = response.statusText;\n            httpRequest.response.responseURL = response.url;\n\n            if (!response.ok) {\n                httpRequest.onerror();\n            }\n\n            let responseHeaders = '';\n            for (const key of response.headers.keys()) {\n                responseHeaders += key + ': ' + response.headers.get(key) + '\\n';\n            }\n            httpRequest.response.responseHeaders = responseHeaders;\n\n            if (!response.body) {\n                // Fetch returning a ReadableStream response body is not currently supported by all browsers.\n                // Browser compatibility: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n                // If it is not supported, returning the whole segment when it's ready (as xhr)\n                return response.arrayBuffer().then(function (buffer) {\n                    httpRequest.response.response = buffer;\n                    const event = {\n                        loaded: buffer.byteLength,\n                        total: buffer.byteLength\n                    };\n                    httpRequest.progress(event);\n                    httpRequest.onload();\n                    httpRequest.onend();\n                    return;\n                });\n            }\n\n            const totalBytes = parseInt(response.headers.get('Content-Length'), 10);\n            let bytesReceived = 0;\n            let signaledFirstByte = false;\n            let remaining = new Uint8Array();\n            let offset = 0;\n\n            httpRequest.reader = response.body.getReader();\n            let downLoadedData = [];\n\n            const processResult = function ({ value, done }) {\n                if (done) {\n                    if (remaining) {\n                        // If there is pending data, call progress so network metrics\n                        // are correctly generated\n                        // Same structure as https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress\n                        httpRequest.progress({\n                            loaded: bytesReceived,\n                            total: isNaN(totalBytes) ? bytesReceived : totalBytes,\n                            lengthComputable: true,\n                            time: calculateDownloadedTime(downLoadedData, bytesReceived)\n                        });\n\n                        httpRequest.response.response = remaining.buffer;\n                    }\n                    httpRequest.onload();\n                    httpRequest.onend();\n                    return;\n                }\n\n                if (value && value.length > 0) {\n                    remaining = concatTypedArray(remaining, value);\n                    bytesReceived += value.length;\n                    downLoadedData.push({\n                        ts: Date.now(),\n                        bytes: value.length\n                    });\n\n                    const boxesInfo = BoxParser().getInstance().findLastTopIsoBoxCompleted(['moov', 'mdat'], remaining, offset);\n                    if (boxesInfo.found) {\n                        const end = boxesInfo.lastCompletedOffset + boxesInfo.size;\n\n                        // If we are going to pass full buffer, avoid copying it and pass\n                        // complete buffer. Otherwise clone the part of the buffer that is completed\n                        // and adjust remaining buffer. A clone is needed because ArrayBuffer of a typed-array\n                        // keeps a reference to the original data\n                        let data;\n                        if (end === remaining.length) {\n                            data = remaining;\n                            remaining = new Uint8Array();\n                        } else {\n                            data = new Uint8Array(remaining.subarray(0, end));\n                            remaining = remaining.subarray(end);\n                        }\n\n                        // Announce progress but don't track traces. Throughput measures are quite unstable\n                        // when they are based in small amount of data\n                        httpRequest.progress({\n                            data: data.buffer,\n                            lengthComputable: false,\n                            noTrace: true\n                        });\n\n                        offset = 0;\n                    } else {\n                        offset = boxesInfo.lastCompletedOffset;\n\n                        // Call progress so it generates traces that will be later used to know when the first byte\n                        // were received\n                        if (!signaledFirstByte) {\n                            httpRequest.progress({\n                                lengthComputable: false,\n                                noTrace: true\n                            });\n                            signaledFirstByte = true;\n                        }\n                    }\n                }\n                read(httpRequest, processResult);\n            };\n\n            read(httpRequest, processResult);\n        })\n        .catch( function (e) {\n            if (httpRequest.onerror) {\n                httpRequest.onerror(e);\n            }\n        });\n    }\n\n    function read(httpRequest, processResult) {\n        httpRequest.reader.read()\n        .then(processResult)\n        .catch(function () {\n            // don't do nothing. Manage this error in fetch method promise\n        });\n    }\n\n    function concatTypedArray(remaining, data) {\n        if (remaining.length === 0) {\n            return data;\n        }\n        const result = new Uint8Array(remaining.length + data.length);\n        result.set(remaining);\n        result.set(data, remaining.length);\n        return result;\n    }\n\n    function abort(request) {\n        if (request.abortController) {\n            // For firefox and edge\n            request.abortController.abort();\n        } else if (request.reader) {\n            // For Chrome\n            try {\n                request.reader.cancel();\n            } catch (e) {\n                // throw exceptions (TypeError) when reader was previously closed,\n                // for example, because a network issue\n            }\n        }\n    }\n\n    function calculateDownloadedTime(datum, bytesReceived) {\n        datum = datum.filter(data => data.bytes > ((bytesReceived / 4) / datum.length) );\n        if (datum.length > 1) {\n            let time = 0;\n            const avgTimeDistance = (datum[datum.length - 1].ts - datum[0].ts) / datum.length;\n            datum.forEach((data, index) => {\n                // To be counted the data has to be over a threshold\n                const next = datum[index + 1];\n                if (next) {\n                    const distance = next.ts - data.ts;\n                    time += distance < avgTimeDistance ? distance : 0;\n                }\n            });\n            return time;\n        }\n        return null;\n    }\n\n    instance = {\n        load: load,\n        abort: abort,\n        calculateDownloadedTime: calculateDownloadedTime\n    };\n\n    return instance;\n}\n\nFetchLoader.__dashjs_factory_name = 'FetchLoader';\n\nconst factory = FactoryMaker.getClassFactory(FetchLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XHRLoader from './XHRLoader';\nimport FetchLoader from './FetchLoader';\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ErrorHandler from '../utils/ErrorHandler';\n\n/**\n * @module HTTPLoader\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependancies from parent\n */\nfunction HTTPLoader(cfg) {\n\n    cfg = cfg || {};\n\n    const context = this.context;\n    const errHandler = cfg.errHandler;\n    const metricsModel = cfg.metricsModel;\n    const mediaPlayerModel = cfg.mediaPlayerModel;\n    const requestModifier = cfg.requestModifier;\n    const useFetch = cfg.useFetch || false;\n\n    let instance;\n    let requests;\n    let delayedRequests;\n    let retryTimers;\n    let downloadErrorToRequestTypeMap;\n\n    function setup() {\n        requests = [];\n        delayedRequests = [];\n        retryTimers = [];\n\n        downloadErrorToRequestTypeMap = {\n            [HTTPRequest.MPD_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_MANIFEST,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_XLINK,\n            [HTTPRequest.INIT_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_INITIALIZATION,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT,\n            [HTTPRequest.OTHER_TYPE]: ErrorHandler.DOWNLOAD_ERROR_ID_CONTENT\n        };\n    }\n\n    function internalLoad(config, remainingAttempts) {\n        const request = config.request;\n        const traces = [];\n        let firstProgress = true;\n        let needFailureReport = true;\n        let requestStartTime = new Date();\n        let lastTraceTime = requestStartTime;\n        let lastTraceReceivedCount = 0;\n        let httpRequest;\n\n        if (!requestModifier || !metricsModel || !errHandler) {\n            throw new Error('config object is not correct or missing');\n        }\n\n        const handleLoaded = function (success) {\n            needFailureReport = false;\n\n            request.requestStartDate = requestStartTime;\n            request.requestEndDate = new Date();\n            request.firstByteDate = request.firstByteDate || requestStartTime;\n\n            if (!request.checkExistenceOnly) {\n                metricsModel.addHttpRequest(\n                    request.mediaType,\n                    null,\n                    request.type,\n                    request.url,\n                    httpRequest.response ? httpRequest.response.responseURL : null,\n                    request.serviceLocation || null,\n                    request.range || null,\n                    request.requestStartDate,\n                    request.firstByteDate,\n                    request.requestEndDate,\n                    httpRequest.response ? httpRequest.response.status : null,\n                    request.duration,\n                    httpRequest.response && httpRequest.response.getAllResponseHeaders ? httpRequest.response.getAllResponseHeaders() : httpRequest.response.responseHeaders,\n                    success ? traces : null\n                );\n            }\n        };\n\n        const onloadend = function () {\n            if (requests.indexOf(httpRequest) === -1) {\n                return;\n            } else {\n                requests.splice(requests.indexOf(httpRequest), 1);\n            }\n\n            if (needFailureReport) {\n                handleLoaded(false);\n\n                if (remainingAttempts > 0) {\n                    remainingAttempts--;\n                    retryTimers.push(\n                        setTimeout(function () {\n                            internalLoad(config, remainingAttempts);\n                        }, mediaPlayerModel.getRetryIntervalForType(request.type))\n                    );\n                } else {\n                    errHandler.downloadError(\n                        downloadErrorToRequestTypeMap[request.type],\n                        request.url,\n                        request\n                    );\n\n                    if (config.error) {\n                        config.error(request, 'error', httpRequest.response.statusText);\n                    }\n\n                    if (config.complete) {\n                        config.complete(request, httpRequest.response.statusText);\n                    }\n                }\n            }\n        };\n\n        const progress = function (event) {\n            const currentTime = new Date();\n\n            if (firstProgress) {\n                firstProgress = false;\n                if (!event.lengthComputable ||\n                    (event.lengthComputable && event.total !== event.loaded)) {\n                    request.firstByteDate = currentTime;\n                }\n            }\n\n            if (event.lengthComputable) {\n                request.bytesLoaded = event.loaded;\n                request.bytesTotal = event.total;\n            }\n\n            if (!event.noTrace) {\n                traces.push({\n                    s: lastTraceTime,\n                    d: event.time ? event.time : currentTime.getTime() - lastTraceTime.getTime(),\n                    b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0]\n                });\n\n                lastTraceTime = currentTime;\n                lastTraceReceivedCount = event.loaded;\n            }\n\n            if (config.progress && event) {\n                config.progress(event);\n            }\n        };\n\n        const onload = function () {\n            if (httpRequest.response.status >= 200 && httpRequest.response.status <= 299) {\n                handleLoaded(true);\n\n                if (config.success) {\n                    config.success(httpRequest.response.response, httpRequest.response.statusText, httpRequest.response.responseURL);\n                }\n\n                if (config.complete) {\n                    config.complete(request, httpRequest.response.statusText);\n                }\n            }\n        };\n\n        const onabort = function () {\n            if (config.abort) {\n                config.abort(request);\n            }\n        };\n\n        let loader;\n        if (useFetch && window.fetch && request.responseType === 'arraybuffer') {\n            loader = FetchLoader(context).create({\n                requestModifier: requestModifier\n            });\n        } else {\n            loader = XHRLoader(context).create({\n                requestModifier: requestModifier\n            });\n        }\n\n        const modifiedUrl = requestModifier.modifyRequestURL(request.url);\n        const verb = request.checkExistenceOnly ? HTTPRequest.HEAD : HTTPRequest.GET;\n        const withCredentials = mediaPlayerModel.getXHRWithCredentialsForType(request.type);\n\n        httpRequest = {\n            url: modifiedUrl,\n            method: verb,\n            withCredentials: withCredentials,\n            request: request,\n            onload: onload,\n            onend: onloadend,\n            onerror: onloadend,\n            progress: progress,\n            onabort: onabort,\n            loader: loader\n        };\n\n        // Adds the ability to delay single fragment loading time to control buffer.\n        let now = new Date().getTime();\n        if (isNaN(request.delayLoadingTime) || now >= request.delayLoadingTime) {\n            // no delay - just send\n            requests.push(httpRequest);\n            loader.load(httpRequest);\n        } else {\n            // delay\n            let delayedRequest = { httpRequest: httpRequest };\n            delayedRequests.push(delayedRequest);\n            delayedRequest.delayTimeout = setTimeout(function () {\n                if (delayedRequests.indexOf(delayedRequest) === -1) {\n                    return;\n                } else {\n                    delayedRequests.splice(delayedRequests.indexOf(delayedRequest), 1);\n                }\n                try {\n                    requestStartTime = new Date();\n                    lastTraceTime = requestStartTime;\n                    requests.push(delayedRequest.httpRequest);\n                    loader.load(delayedRequest.httpRequest);\n                } catch (e) {\n                    delayedRequest.httpRequest.onerror();\n                }\n            }, (request.delayLoadingTime - now));\n        }\n    }\n\n    /**\n     * Initiates a download of the resource described by config.request\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            internalLoad(\n                config,\n                mediaPlayerModel.getRetryAttemptsForType(\n                    config.request.type\n                )\n            );\n        }\n    }\n\n    /**\n     * Aborts any inflight downloads\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function abort() {\n        retryTimers.forEach(t => clearTimeout(t));\n        retryTimers = [];\n\n        delayedRequests.forEach(x => clearTimeout(x.delayTimeout));\n        delayedRequests = [];\n\n        requests.forEach(x => {\n            // abort will trigger onloadend which we don't want\n            // when deliberately aborting inflight requests -\n            // set them to undefined so they are not called\n            x.onloadend = x.onerror = x.onprogress = undefined;\n            x.loader.abort(x);\n            x.onabort();\n        });\n        requests = [];\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    setup();\n\n    return instance;\n}\n\nHTTPLoader.__dashjs_factory_name = 'HTTPLoader';\n\nconst factory = FactoryMaker.getClassFactory(HTTPLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module XHRLoader\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependencies from parent\n */\nfunction XHRLoader(cfg) {\n\n    cfg = cfg || {};\n    const requestModifier = cfg.requestModifier;\n\n    let instance;\n\n    function load(httpRequest) {\n\n        // Variables will be used in the callback functions\n        let firstProgress = true; /*jshint ignore:line*/\n        let needFailureReport = true; /*jshint ignore:line*/\n        let requestStartTime = new Date();\n        let lastTraceTime = requestStartTime; /*jshint ignore:line*/\n        let lastTraceReceivedCount = 0; /*jshint ignore:line*/\n\n        let request = httpRequest.request;\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(httpRequest.method, httpRequest.url, true);\n\n        if (request.responseType) {\n            xhr.responseType = request.responseType;\n        }\n\n        if (request.range) {\n            xhr.setRequestHeader('Range', 'bytes=' + request.range);\n        }\n\n        if (!request.requestStartDate) {\n            request.requestStartDate = requestStartTime;\n        }\n\n        if (requestModifier) {\n            xhr = requestModifier.modifyRequestHeader(xhr);\n        }\n\n        xhr.withCredentials = httpRequest.withCredentials;\n\n        xhr.onload = httpRequest.onload;\n        xhr.onloadend = httpRequest.onend;\n        xhr.onerror = httpRequest.onerror;\n        xhr.onprogress = httpRequest.progress;\n        xhr.onabort = httpRequest.onabort;\n\n        xhr.send();\n\n        httpRequest.response = xhr;\n    }\n\n    function abort(request) {\n        const x = request.response;\n        x.onloadend = x.onerror = x.onprogress = undefined; //Ignore events from aborted requests.\n        x.abort();\n    }\n\n    instance = {\n        load: load,\n        abort: abort\n    };\n\n    return instance;\n}\n\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\n\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\nexport default factory;\n","\nimport FactoryMaker from '../../core/FactoryMaker';\n\n\nfunction DroppedFramesHistory() {\n\n    let values = [];\n    let lastDroppedFrames = 0;\n    let lastTotalFrames = 0;\n\n    function push(index, playbackQuality) {\n        let droppedVideoFrames = playbackQuality && playbackQuality.droppedVideoFrames ? playbackQuality.droppedVideoFrames : 0;\n        let totalVideoFrames = playbackQuality && playbackQuality.totalVideoFrames ? playbackQuality.totalVideoFrames : 0;\n\n        let intervalDroppedFrames = droppedVideoFrames - lastDroppedFrames;\n        lastDroppedFrames = droppedVideoFrames;\n\n        let intervalTotalFrames = totalVideoFrames - lastTotalFrames;\n        lastTotalFrames = totalVideoFrames;\n\n        if (!isNaN(index)) {\n            if (!values[index]) {\n                values[index] = {droppedVideoFrames: intervalDroppedFrames, totalVideoFrames: intervalTotalFrames};\n            } else {\n                values[index].droppedVideoFrames += intervalDroppedFrames;\n                values[index].totalVideoFrames += intervalTotalFrames;\n            }\n        }\n    }\n\n    function getDroppedFrameHistory() {\n        return values;\n    }\n\n    function reset(playbackQuality) {\n        values = [];\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n    }\n\n    return {\n        push: push,\n        getFrameHistory: getDroppedFrameHistory,\n        reset: reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nconst factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const streamProcessor = config.streamProcessor;\n    const representationInfo = config.streamProcessor.getCurrentRepresentationInfo();\n    const switchHistory = config.switchHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const bufferOccupancyABR = config.useBufferOccupancyABR;\n\n    function getMediaType() {\n        return representationInfo.mediaInfo.type;\n    }\n\n    function getStreamInfo() {\n        return representationInfo.mediaInfo.streamInfo;\n    }\n\n    function getMediaInfo() {\n        return representationInfo.mediaInfo;\n    }\n\n    function getRepresentationInfo() {\n        return representationInfo;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getSwitchHistory() {\n        return switchHistory;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    function useBufferOccupancyABR() {\n        return bufferOccupancyABR;\n    }\n\n    instance = {\n        getMediaType: getMediaType,\n        getMediaInfo: getMediaInfo,\n        getDroppedFramesHistory: getDroppedFramesHistory,\n        getCurrentRequest: getCurrentRequest,\n        getSwitchHistory: getSwitchHistory,\n        getStreamInfo: getStreamInfo,\n        getStreamProcessor: getStreamProcessor,\n        getAbrController: getAbrController,\n        getRepresentationInfo: getRepresentationInfo,\n        useBufferOccupancyABR: useBufferOccupancyABR\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst NO_CHANGE = -1;\nconst PRIORITY = {\n    DEFAULT: 0.5,\n    STRONG: 1,\n    WEAK: 0\n};\n\nfunction SwitchRequest(q, r, p) {\n    //TODO refactor all the calls to this to use config to be like everything else.\n    let instance;\n    let quality;\n    let priority;\n    let reason;\n\n    // check priority value\n    function getPriority(p) {\n        let ret = PRIORITY.DEFAULT;\n\n        // check that p is one of declared priority value\n        if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\n            ret = p;\n        }\n        return ret;\n    }\n\n    // init attributes\n    quality = (q === undefined) ? NO_CHANGE : q;\n    priority = getPriority(p);\n    reason = (r === undefined) ? null : r;\n\n    instance = {\n        quality: quality,\n        reason: reason,\n        priority: priority\n    };\n\n    return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\nconst factory = FactoryMaker.getClassFactory(SwitchRequest);\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.PRIORITY = PRIORITY;\nFactoryMaker.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport SwitchRequest from './SwitchRequest';\n\nconst SWITCH_REQUEST_HISTORY_DEPTH = 8; // must be > SwitchHistoryRule SAMPLE_SIZE to enable rule\n\nfunction SwitchRequestHistory() {\n    let switchRequests = []; // running total\n    let srHistory = []; // history of each switch\n\n    function push(switchRequest) {\n        if (switchRequest.newValue === SwitchRequest.NO_CHANGE) {\n            switchRequest.newValue = switchRequest.oldValue;\n        }\n        if (!switchRequests[switchRequest.oldValue]) {\n            switchRequests[switchRequest.oldValue] = {noDrops: 0, drops: 0, dropSize: 0};\n        }\n\n        // Set switch details\n        let indexDiff = switchRequest.newValue - switchRequest.oldValue;\n        let drop = (indexDiff < 0) ? 1 : 0;\n        let dropSize = drop ? -indexDiff : 0;\n        let noDrop = drop ? 0 : 1;\n\n        // Update running totals\n        switchRequests[switchRequest.oldValue].drops += drop;\n        switchRequests[switchRequest.oldValue].dropSize += dropSize;\n        switchRequests[switchRequest.oldValue].noDrops += noDrop;\n\n        // Save to history\n        srHistory.push({idx: switchRequest.oldValue, noDrop: noDrop, drop: drop, dropSize: dropSize});\n\n        // Shift earliest switch off srHistory and readjust to keep depth of running totals constant\n        if ( srHistory.length > SWITCH_REQUEST_HISTORY_DEPTH ) {\n            let srHistoryFirst = srHistory.shift();\n            switchRequests[srHistoryFirst.idx].drops -= srHistoryFirst.drop;\n            switchRequests[srHistoryFirst.idx].dropSize -= srHistoryFirst.dropSize;\n            switchRequests[srHistoryFirst.idx].noDrops -= srHistoryFirst.noDrop;\n        }\n    }\n\n    function getSwitchRequests() {\n        return switchRequests;\n    }\n\n    function reset() {\n        switchRequests = [];\n        srHistory = [];\n    }\n\n    return {\n        push: push,\n        getSwitchRequests: getSwitchRequests,\n        reset: reset\n    };\n}\n\nSwitchRequestHistory.__dashjs_factory_name = 'SwitchRequestHistory';\nconst factory = FactoryMaker.getClassFactory(SwitchRequestHistory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2017, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n// throughput generally stored in kbit/s\n// latency generally stored in ms\n\nfunction ThroughputHistory(config) {\n\n    config = config || {};\n    // sliding window constants\n    const MAX_MEASUREMENTS_TO_KEEP = 20;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE = 3;\n    const AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD = 4;\n    const AVERAGE_LATENCY_SAMPLE_AMOUNT = 4;\n    const THROUGHPUT_DECREASE_SCALE = 1.3;\n    const THROUGHPUT_INCREASE_SCALE = 1.3;\n\n    // EWMA constants\n    const EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS = 8;\n    const EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS = 3;\n    const EWMA_LATENCY_SLOW_HALF_LIFE_COUNT = 2;\n    const EWMA_LATENCY_FAST_HALF_LIFE_COUNT = 1;\n\n    const mediaPlayerModel = config.mediaPlayerModel;\n\n    let throughputDict,\n        latencyDict,\n        ewmaThroughputDict,\n        ewmaLatencyDict,\n        ewmaHalfLife;\n\n    function setup() {\n        ewmaHalfLife = {\n            throughputHalfLife: { fast: EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS, slow: EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS },\n            latencyHalfLife:    { fast: EWMA_LATENCY_FAST_HALF_LIFE_COUNT,      slow: EWMA_LATENCY_SLOW_HALF_LIFE_COUNT }\n        };\n\n        reset();\n    }\n\n    function isCachedResponse(mediaType, latencyMs, downloadTimeMs) {\n        if (mediaType === Constants.VIDEO) {\n            return downloadTimeMs < mediaPlayerModel.getCacheLoadThresholdForType(Constants.VIDEO);\n        } else if (mediaType === Constants.AUDIO) {\n            return downloadTimeMs < mediaPlayerModel.getCacheLoadThresholdForType(Constants.AUDIO);\n        }\n    }\n\n    function push(mediaType, httpRequest, useDeadTimeLatency) {\n        if (!httpRequest.trace || !httpRequest.trace.length) {\n            return;\n        }\n\n        const latencyTimeInMilliseconds = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) || 1;\n        const downloadTimeInMilliseconds = (httpRequest._tfinish.getTime() - httpRequest.tresponse.getTime()) || 1; //Make sure never 0 we divide by this value. Avoid infinity!\n        const downloadTime = httpRequest.trace.reduce((a, b) => a + b.d, 0);\n        const downloadBytes = httpRequest.trace.reduce((a, b) => a + b.b[0], 0);\n        let throughputMeasureTime = useDeadTimeLatency ? downloadTimeInMilliseconds : latencyTimeInMilliseconds + downloadTimeInMilliseconds;\n        throughputMeasureTime = mediaPlayerModel.getLowLatencyEnabled() ? downloadTime : throughputMeasureTime;\n        const throughput = Math.round((8 * downloadBytes) / throughputMeasureTime); // bits/ms = kbits/s\n\n        checkSettingsForMediaType(mediaType);\n\n        if (isCachedResponse(mediaType, latencyTimeInMilliseconds, downloadTimeInMilliseconds)) {\n            if (throughputDict[mediaType].length > 0 && !throughputDict[mediaType].hasCachedEntries) {\n                // already have some entries which are not cached entries\n                // prevent cached fragment loads from skewing the average values\n                return;\n            } else { // have no entries || have cached entries\n                // no uncached entries yet, rely on cached entries because ABR rules need something to go by\n                throughputDict[mediaType].hasCachedEntries = true;\n            }\n        } else if (throughputDict[mediaType] && throughputDict[mediaType].hasCachedEntries) {\n            // if we are here then we have some entries already, but they are cached, and now we have a new uncached entry\n            clearSettingsForMediaType(mediaType);\n        }\n\n        throughputDict[mediaType].push(throughput);\n        if (throughputDict[mediaType].length > MAX_MEASUREMENTS_TO_KEEP) {\n            throughputDict[mediaType].shift();\n        }\n\n        latencyDict[mediaType].push(latencyTimeInMilliseconds);\n        if (latencyDict[mediaType].length > MAX_MEASUREMENTS_TO_KEEP) {\n            latencyDict[mediaType].shift();\n        }\n\n        updateEwmaEstimate(ewmaThroughputDict[mediaType], throughput, 0.001 * downloadTimeInMilliseconds, ewmaHalfLife.throughputHalfLife);\n        updateEwmaEstimate(ewmaLatencyDict[mediaType], latencyTimeInMilliseconds, 1, ewmaHalfLife.latencyHalfLife);\n    }\n\n    function updateEwmaEstimate(ewmaObj, value, weight, halfLife) {\n        // Note about startup:\n        // Estimates start at 0, so early values are underestimated.\n        // This effect is countered in getAverageEwma() by dividing the estimates by:\n        //     1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n\n        const fastAlpha = Math.pow(0.5, weight / halfLife.fast);\n        ewmaObj.fastEstimate = (1 - fastAlpha) * value + fastAlpha * ewmaObj.fastEstimate;\n\n        const slowAlpha = Math.pow(0.5, weight / halfLife.slow);\n        ewmaObj.slowEstimate = (1 - slowAlpha) * value + slowAlpha * ewmaObj.slowEstimate;\n\n        ewmaObj.totalWeight += weight;\n    }\n\n    function getSampleSize(isThroughput, mediaType, isLive) {\n        let arr;\n        let sampleSize;\n\n        if (isThroughput) {\n            arr = throughputDict[mediaType];\n            sampleSize = isLive ? AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE : AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD;\n        } else {\n            arr = latencyDict[mediaType];\n            sampleSize = AVERAGE_LATENCY_SAMPLE_AMOUNT;\n        }\n\n        if (!arr) {\n            sampleSize = 0;\n        } else if (sampleSize >= arr.length) {\n            sampleSize = arr.length;\n        } else if (isThroughput) {\n            // if throughput samples vary a lot, average over a wider sample\n            for (let i = 1; i < sampleSize; ++i) {\n                const ratio = arr[i] / arr[i - 1];\n                if (ratio >= THROUGHPUT_INCREASE_SCALE || ratio <= 1 / THROUGHPUT_DECREASE_SCALE) {\n                    sampleSize += 1;\n                    if (sampleSize === arr.length) { // cannot increase sampleSize beyond arr.length\n                        break;\n                    }\n                }\n            }\n        }\n\n        return sampleSize;\n    }\n\n    function getAverage(isThroughput, mediaType, isDynamic) {\n        // only two moving average methods defined at the moment\n        return mediaPlayerModel.getMovingAverageMethod() !== Constants.MOVING_AVERAGE_SLIDING_WINDOW ?\n            getAverageEwma(isThroughput, mediaType) : getAverageSlidingWindow(isThroughput, mediaType, isDynamic);\n    }\n\n    function getAverageSlidingWindow(isThroughput, mediaType, isDynamic) {\n        const sampleSize = getSampleSize(isThroughput, mediaType, isDynamic);\n        const dict = isThroughput ? throughputDict : latencyDict;\n        let arr = dict[mediaType];\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        arr = arr.slice(-sampleSize); // still works if sampleSize too large\n        // arr.length >= 1\n        return arr.reduce((total, elem) => total + elem) / arr.length;\n    }\n\n    function getAverageEwma(isThroughput, mediaType) {\n        const halfLife = isThroughput ? ewmaHalfLife.throughputHalfLife : ewmaHalfLife.latencyHalfLife;\n        const ewmaObj = isThroughput ? ewmaThroughputDict[mediaType] : ewmaLatencyDict[mediaType];\n\n        if (!ewmaObj || ewmaObj.totalWeight <= 0) {\n            return NaN;\n        }\n\n        // to correct for startup, divide by zero factor = 1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n        const fastEstimate = ewmaObj.fastEstimate / (1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife.fast));\n        const slowEstimate = ewmaObj.slowEstimate / (1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife.slow));\n        return isThroughput ? Math.min(fastEstimate, slowEstimate) : Math.max(fastEstimate, slowEstimate);\n    }\n\n    function getAverageThroughput(mediaType, isDynamic) {\n        return getAverage(true, mediaType, isDynamic);\n    }\n\n    function getSafeAverageThroughput(mediaType, isDynamic) {\n        let average = getAverageThroughput(mediaType, isDynamic);\n        if (!isNaN(average)) {\n            average *= mediaPlayerModel.getBandwidthSafetyFactor();\n        }\n        return average;\n    }\n\n    function getAverageLatency(mediaType) {\n        return getAverage(false, mediaType);\n    }\n\n    function checkSettingsForMediaType(mediaType) {\n        throughputDict[mediaType] = throughputDict[mediaType] || [];\n        latencyDict[mediaType] = latencyDict[mediaType] || [];\n        ewmaThroughputDict[mediaType] = ewmaThroughputDict[mediaType] || {fastEstimate: 0, slowEstimate: 0, totalWeight: 0};\n        ewmaLatencyDict[mediaType] = ewmaLatencyDict[mediaType] || {fastEstimate: 0, slowEstimate: 0, totalWeight: 0};\n    }\n\n    function clearSettingsForMediaType(mediaType) {\n        delete throughputDict[mediaType];\n        delete latencyDict[mediaType];\n        delete ewmaThroughputDict[mediaType];\n        delete ewmaLatencyDict[mediaType];\n        checkSettingsForMediaType(mediaType);\n    }\n\n    function reset() {\n        throughputDict = {};\n        latencyDict = {};\n        ewmaThroughputDict = {};\n        ewmaLatencyDict = {};\n    }\n\n    const instance = {\n        push: push,\n        getAverageThroughput: getAverageThroughput,\n        getSafeAverageThroughput: getSafeAverageThroughput,\n        getAverageLatency: getAverageLatency,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nThroughputHistory.__dashjs_factory_name = 'ThroughputHistory';\nexport default FactoryMaker.getClassFactory(ThroughputHistory);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ThroughputRule from './ThroughputRule';\nimport InsufficientBufferRule from './InsufficientBufferRule';\nimport AbandonRequestsRule from './AbandonRequestsRule';\nimport DroppedFramesRule from './DroppedFramesRule';\nimport SwitchHistoryRule from './SwitchHistoryRule';\nimport BolaRule from './BolaRule';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\n\nconst QUALITY_SWITCH_RULES = 'qualitySwitchRules';\nconst ABANDON_FRAGMENT_RULES = 'abandonFragmentRules';\n\nfunction ABRRulesCollection(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const metricsModel = config.metricsModel;\n    const dashMetrics = config.dashMetrics;\n\n    let instance,\n        qualitySwitchRules,\n        abandonFragmentRules;\n\n    function initialize() {\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n\n        if (mediaPlayerModel.getUseDefaultABRRules()) {\n            // Only one of BolaRule and ThroughputRule will give a switchRequest.quality !== SwitchRequest.NO_CHANGE.\n            // This is controlled by useBufferOccupancyABR mechanism in AbrController.\n            qualitySwitchRules.push(\n                BolaRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel\n                })\n            );\n            qualitySwitchRules.push(\n                ThroughputRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics\n                })\n            );\n            qualitySwitchRules.push(\n                InsufficientBufferRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics\n                })\n            );\n            qualitySwitchRules.push(\n                SwitchHistoryRule(context).create()\n            );\n            qualitySwitchRules.push(\n                DroppedFramesRule(context).create()\n            );\n            abandonFragmentRules.push(\n                AbandonRequestsRule(context).create({\n                    metricsModel: metricsModel,\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel\n                })\n            );\n        }\n\n        // add custom ABR rules if any\n        const customRules = mediaPlayerModel.getABRCustomRules();\n        customRules.forEach(function (rule) {\n            if (rule.type === QUALITY_SWITCH_RULES) {\n                qualitySwitchRules.push(rule.rule(context).create());\n            }\n\n            if (rule.type === ABANDON_FRAGMENT_RULES) {\n                abandonFragmentRules.push(rule.rule(context).create());\n            }\n        });\n    }\n\n    function getActiveRules(srArray) {\n        return srArray.filter(sr => sr.quality > SwitchRequest.NO_CHANGE);\n    }\n\n    function getMinSwitchRequest(srArray) {\n        const values = {};\n        let i,\n            len,\n            req,\n            newQuality,\n            quality;\n\n        if (srArray.length === 0) {\n            return;\n        }\n\n        values[SwitchRequest.PRIORITY.STRONG] = SwitchRequest.NO_CHANGE;\n        values[SwitchRequest.PRIORITY.WEAK] = SwitchRequest.NO_CHANGE;\n        values[SwitchRequest.PRIORITY.DEFAULT] = SwitchRequest.NO_CHANGE;\n\n        for (i = 0, len = srArray.length; i < len; i += 1) {\n            req = srArray[i];\n            if (req.quality !== SwitchRequest.NO_CHANGE) {\n                values[req.priority] = values[req.priority] > SwitchRequest.NO_CHANGE ? Math.min(values[req.priority], req.quality) : req.quality;\n            }\n        }\n\n        if (values[SwitchRequest.PRIORITY.WEAK] !== SwitchRequest.NO_CHANGE) {\n            newQuality = values[SwitchRequest.PRIORITY.WEAK];\n        }\n\n        if (values[SwitchRequest.PRIORITY.DEFAULT] !== SwitchRequest.NO_CHANGE) {\n            newQuality = values[SwitchRequest.PRIORITY.DEFAULT];\n        }\n\n        if (values[SwitchRequest.PRIORITY.STRONG] !== SwitchRequest.NO_CHANGE) {\n            newQuality = values[SwitchRequest.PRIORITY.STRONG];\n        }\n\n        if (newQuality !== SwitchRequest.NO_CHANGE) {\n            quality = newQuality;\n        }\n\n        return SwitchRequest(context).create(quality);\n    }\n\n    function getMaxQuality(rulesContext) {\n        const switchRequestArray = qualitySwitchRules.map(rule => rule.getMaxIndex(rulesContext));\n        const activeRules = getActiveRules(switchRequestArray);\n        const maxQuality = getMinSwitchRequest(activeRules);\n\n        return maxQuality || SwitchRequest(context).create();\n    }\n\n    function shouldAbandonFragment(rulesContext) {\n        const abandonRequestArray = abandonFragmentRules.map(rule => rule.shouldAbandon(rulesContext));\n        const activeRules = getActiveRules(abandonRequestArray);\n        const shouldAbandon = getMinSwitchRequest(activeRules);\n\n        return shouldAbandon || SwitchRequest(context).create();\n    }\n\n    function reset() {\n        [qualitySwitchRules, abandonFragmentRules].forEach(rules => {\n            if (rules && rules.length) {\n                rules.forEach(rule => rule.reset && rule.reset());\n            }\n        });\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n    }\n\n    instance = {\n        initialize: initialize,\n        reset: reset,\n        getMaxQuality: getMaxQuality,\n        shouldAbandonFragment: shouldAbandonFragment\n    };\n\n    return instance;\n}\n\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\nconst factory = FactoryMaker.getClassFactory(ABRRulesCollection);\nfactory.QUALITY_SWITCH_RULES = QUALITY_SWITCH_RULES;\nfactory.ABANDON_FRAGMENT_RULES = ABANDON_FRAGMENT_RULES;\nFactoryMaker.updateSingletonFactory(ABRRulesCollection.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\n\nfunction AbandonRequestsRule(config) {\n\n    config = config || {};\n    const ABANDON_MULTIPLIER = 1.8;\n    const GRACE_TIME_THRESHOLD = 500;\n    const MIN_LENGTH_TO_AVERAGE = 5;\n\n    const context = this.context;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const metricsModel = config.metricsModel;\n    const dashMetrics = config.dashMetrics;\n\n    let instance,\n        logger,\n        fragmentDict,\n        abandonDict,\n        throughputArray;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    function setFragmentRequestDict(type, id) {\n        fragmentDict[type] = fragmentDict[type] || {};\n        fragmentDict[type][id] = fragmentDict[type][id] || {};\n    }\n\n    function storeLastRequestThroughputByType(type, throughput) {\n        throughputArray[type] = throughputArray[type] || [];\n        throughputArray[type].push(throughput);\n    }\n\n    function shouldAbandon(rulesContext) {\n        const switchRequest = SwitchRequest(context).create(SwitchRequest.NO_CHANGE, {name: AbandonRequestsRule.__dashjs_factory_name});\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('getCurrentRequest') ||\n            !rulesContext.hasOwnProperty('getRepresentationInfo') || !rulesContext.hasOwnProperty('getAbrController')) {\n            return switchRequest;\n        }\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const req = rulesContext.getCurrentRequest();\n\n        if (!isNaN(req.index)) {\n            setFragmentRequestDict(mediaType, req.index);\n\n            const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(mediaType));\n            if ( bufferLevel > stableBufferTime ) {\n                return switchRequest;\n            }\n\n            const fragmentInfo = fragmentDict[mediaType][req.index];\n            if (fragmentInfo === null || req.firstByteDate === null || abandonDict.hasOwnProperty(fragmentInfo.id)) {\n                return switchRequest;\n            }\n\n            //setup some init info based on first progress event\n            if (fragmentInfo.firstByteTime === undefined) {\n                throughputArray[mediaType] = [];\n                fragmentInfo.firstByteTime = req.firstByteDate.getTime();\n                fragmentInfo.segmentDuration = req.duration;\n                fragmentInfo.bytesTotal = req.bytesTotal;\n                fragmentInfo.id = req.index;\n            }\n            fragmentInfo.bytesLoaded = req.bytesLoaded;\n            fragmentInfo.elapsedTime = new Date().getTime() - fragmentInfo.firstByteTime;\n\n            if (fragmentInfo.bytesLoaded > 0 && fragmentInfo.elapsedTime > 0) {\n                storeLastRequestThroughputByType(mediaType, Math.round(fragmentInfo.bytesLoaded * 8 / fragmentInfo.elapsedTime));\n            }\n\n            if (throughputArray[mediaType].length >= MIN_LENGTH_TO_AVERAGE &&\n                fragmentInfo.elapsedTime > GRACE_TIME_THRESHOLD &&\n                fragmentInfo.bytesLoaded < fragmentInfo.bytesTotal) {\n\n                const totalSampledValue = throughputArray[mediaType].reduce((a, b) => a + b, 0);\n                fragmentInfo.measuredBandwidthInKbps = Math.round(totalSampledValue / throughputArray[mediaType].length);\n                fragmentInfo.estimatedTimeOfDownload = +((fragmentInfo.bytesTotal * 8 / fragmentInfo.measuredBandwidthInKbps) / 1000).toFixed(2);\n\n                if (fragmentInfo.estimatedTimeOfDownload < fragmentInfo.segmentDuration * ABANDON_MULTIPLIER || rulesContext.getRepresentationInfo().quality === 0 ) {\n                    return switchRequest;\n                } else if (!abandonDict.hasOwnProperty(fragmentInfo.id)) {\n\n                    const abrController = rulesContext.getAbrController();\n                    const bytesRemaining = fragmentInfo.bytesTotal - fragmentInfo.bytesLoaded;\n                    const bitrateList = abrController.getBitrateList(mediaInfo);\n                    const newQuality = abrController.getQualityForBitrate(mediaInfo, fragmentInfo.measuredBandwidthInKbps * mediaPlayerModel.getBandwidthSafetyFactor());\n                    const estimateOtherBytesTotal = fragmentInfo.bytesTotal * bitrateList[newQuality].bitrate / bitrateList[abrController.getQualityFor(mediaType, mediaInfo.streamInfo)].bitrate;\n\n                    if (bytesRemaining > estimateOtherBytesTotal) {\n                        switchRequest.quality = newQuality;\n                        switchRequest.reason.throughput = fragmentInfo.measuredBandwidthInKbps;\n                        switchRequest.reason.fragmentID = fragmentInfo.id;\n                        abandonDict[fragmentInfo.id] = fragmentInfo;\n                        logger.debug('( ', mediaType, 'frag id',fragmentInfo.id,') is asking to abandon and switch to quality to ', newQuality, ' measured bandwidth was', fragmentInfo.measuredBandwidthInKbps);\n                        delete fragmentDict[mediaType][fragmentInfo.id];\n                    }\n                }\n            } else if (fragmentInfo.bytesLoaded === fragmentInfo.bytesTotal) {\n                delete fragmentDict[mediaType][fragmentInfo.id];\n            }\n        }\n\n        return switchRequest;\n    }\n\n    function reset() {\n        fragmentDict = {};\n        abandonDict = {};\n        throughputArray = [];\n    }\n\n    instance = {\n        shouldAbandon: shouldAbandon,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\n\nimport MetricsConstants from '../../constants/MetricsConstants';\nimport SwitchRequest from '../SwitchRequest';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport Debug from '../../../core/Debug';\n\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\n// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\n// TODO: add BOLA_STATE_SEEK and tune BOLA behavior on seeking\nconst BOLA_STATE_ONE_BITRATE    = 0;\nconst BOLA_STATE_STARTUP        = 1;\nconst BOLA_STATE_STEADY         = 2;\n\nconst MINIMUM_BUFFER_S = 10; // BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.\nconst MINIMUM_BUFFER_PER_BITRATE_LEVEL_S = 2;\n// E.g. if there are 5 bitrates, BOLA switches to top bitrate at buffer = 10 + 5 * 2 = 20s.\n// If Schedule Controller does not allow buffer to reach that level, it can be achieved through the placeholder buffer level.\n\nconst PLACEHOLDER_BUFFER_DECAY = 0.99; // Make sure placeholder buffer does not stick around too long.\n\nfunction BolaRule(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        bolaStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(Events.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n        eventBus.on(Events.METRIC_ADDED, onMetricAdded, instance);\n        eventBus.on(Events.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\n    }\n\n    function utilitiesFromBitrates(bitrates) {\n        return bitrates.map(b => Math.log(b));\n        // no need to worry about offset, utilities will be offset (uniformly) anyway later\n    }\n\n    // NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but bola should not stick to lowest bitrate by using a placeholder buffer level\n    function calculateBolaParameters(stableBufferTime, bitrates, utilities) {\n        const highestUtilityIndex = utilities.reduce((highestIndex, u, uIndex) => (u > utilities[highestIndex] ? uIndex : highestIndex), 0);\n\n        if (highestUtilityIndex === 0) {\n            // if highestUtilityIndex === 0, then always use lowest bitrate\n            return null;\n        }\n\n        const bufferTime = Math.max(stableBufferTime, MINIMUM_BUFFER_S + MINIMUM_BUFFER_PER_BITRATE_LEVEL_S * bitrates.length);\n\n        // TODO: Investigate if following can be better if utilities are not the default Math.log utilities.\n        // If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTarget.\n        // (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:\n        // Vp * (utilities[0] + gp - 1) === minimumBufferS and Vp * (utilities[max] + gp - 1) === bufferTarget\n        // giving:\n        const gp = (utilities[highestUtilityIndex] - 1) / (bufferTime / MINIMUM_BUFFER_S - 1);\n        const Vp = MINIMUM_BUFFER_S / gp;\n        // note that expressions for gp and Vp assume utilities[0] === 1, which is true because of normalization\n\n        return {gp: gp, Vp: Vp};\n    }\n\n    function getInitialBolaState(rulesContext) {\n        const initialState = {};\n        const mediaInfo = rulesContext.getMediaInfo();\n        const bitrates = mediaInfo.bitrateList.map(b => b.bandwidth);\n        let utilities = utilitiesFromBitrates(bitrates);\n        utilities = utilities.map(u => u - utilities[0] + 1); // normalize\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n        const params = calculateBolaParameters(stableBufferTime, bitrates, utilities);\n\n        if (!params) {\n            // only happens when there is only one bitrate level\n            initialState.state = BOLA_STATE_ONE_BITRATE;\n        } else {\n            initialState.state = BOLA_STATE_STARTUP;\n\n            initialState.bitrates = bitrates;\n            initialState.utilities = utilities;\n            initialState.stableBufferTime = stableBufferTime;\n            initialState.Vp = params.Vp;\n            initialState.gp = params.gp;\n\n            initialState.lastQuality = 0;\n            clearBolaStateOnSeek(initialState);\n        }\n\n        return initialState;\n    }\n\n    function clearBolaStateOnSeek(bolaState) {\n        bolaState.placeholderBuffer = 0;\n        bolaState.mostAdvancedSegmentStart = NaN;\n        bolaState.lastSegmentWasReplacement = false;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentDurationS = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n    }\n\n    // If the buffer target is changed (can this happen mid-stream?), then adjust BOLA parameters accordingly.\n    function checkBolaStateStableBufferTime(bolaState, mediaType) {\n        const stableBufferTime = mediaPlayerModel.getStableBufferTime();\n        if (bolaState.stableBufferTime !== stableBufferTime) {\n            const params = calculateBolaParameters(stableBufferTime, bolaState.bitrates, bolaState.utilities);\n            if (params.Vp !== bolaState.Vp || params.gp !== bolaState.gp) {\n                // correct placeholder buffer using two criteria:\n                // 1. do not change effective buffer level at effectiveBufferLevel === MINIMUM_BUFFER_S ( === Vp * gp )\n                // 2. scale placeholder buffer by Vp subject to offset indicated in 1.\n\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(mediaType));\n                let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\n\n                effectiveBufferLevel -= MINIMUM_BUFFER_S;\n                effectiveBufferLevel *= params.Vp / bolaState.Vp;\n                effectiveBufferLevel += MINIMUM_BUFFER_S;\n\n                bolaState.stableBufferTime = stableBufferTime;\n                bolaState.Vp = params.Vp;\n                bolaState.gp = params.gp;\n                bolaState.placeholderBuffer = Math.max(0, effectiveBufferLevel - bufferLevel);\n            }\n        }\n    }\n\n    function getBolaState(rulesContext) {\n        const mediaType = rulesContext.getMediaType();\n        let bolaState = bolaStateDict[mediaType];\n        if (!bolaState) {\n            bolaState = getInitialBolaState(rulesContext);\n            bolaStateDict[mediaType] = bolaState;\n        } else if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n            checkBolaStateStableBufferTime(bolaState, mediaType);\n        }\n        return bolaState;\n    }\n\n    // The core idea of BOLA.\n    function getQualityFromBufferLevel(bolaState, bufferLevel) {\n        const bitrateCount = bolaState.bitrates.length;\n        let quality = NaN;\n        let score = NaN;\n        for (let i = 0; i < bitrateCount; ++i) {\n            let s = (bolaState.Vp * (bolaState.utilities[i] + bolaState.gp) - bufferLevel) / bolaState.bitrates[i];\n            if (isNaN(score) || s >= score) {\n                score = s;\n                quality = i;\n            }\n        }\n        return quality;\n    }\n\n    // maximum buffer level which prefers to download at quality rather than wait\n    function maxBufferLevelForQuality(bolaState, quality) {\n        return bolaState.Vp * (bolaState.utilities[quality] + bolaState.gp);\n    }\n\n    // the minimum buffer level that would cause BOLA to choose quality rather than a lower bitrate\n    function minBufferLevelForQuality(bolaState, quality) {\n        const qBitrate = bolaState.bitrates[quality];\n        const qUtility = bolaState.utilities[quality];\n\n        let min = 0;\n        for (let i = quality - 1; i >= 0; --i) {\n            // for each bitrate less than bitrates[quality], BOLA should prefer quality (unless other bitrate has higher utility)\n            if (bolaState.utilities[i] < bolaState.utilities[quality]) {\n                const iBitrate = bolaState.bitrates[i];\n                const iUtility = bolaState.utilities[i];\n\n                const level = bolaState.Vp * (bolaState.gp + (qBitrate * iUtility - iBitrate * qUtility) / (qBitrate - iBitrate));\n                min = Math.max(min, level); // we want min to be small but at least level(i) for all i\n            }\n        }\n        return min;\n    }\n\n    /*\n     * The placeholder buffer increases the effective buffer that is used to calculate the bitrate.\n     * There are two main reasons we might want to increase the placeholder buffer:\n     *\n     * 1. When a segment finishes downloading, we would expect to get a call on getMaxIndex() regarding the quality for\n     *    the next segment. However, there might be a delay before the next call. E.g. when streaming live content, the\n     *    next segment might not be available yet. If the call to getMaxIndex() does happens after a delay, we don't\n     *    want the delay to change the BOLA decision - we only want to factor download time to decide on bitrate level.\n     *\n     * 2. It is possible to get a call to getMaxIndex() without having a segment download. The buffer target in dash.js\n     *    is different for top-quality segments and lower-quality segments. If getMaxIndex() returns a lower-than-top\n     *    quality, then the buffer controller might decide not to download a segment. When dash.js is ready for the next\n     *    segment, getMaxIndex() will be called again. We don't want this extra delay to factor in the bitrate decision.\n     */\n    function updatePlaceholderBuffer(bolaState, mediaType) {\n        const nowMs = Date.now();\n\n        if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n            // compensate for non-bandwidth-derived delays, e.g., live streaming availability, buffer controller\n            const delay = 0.001 * (nowMs - bolaState.lastSegmentFinishTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        } else if (!isNaN(bolaState.lastCallTimeMs)) {\n            // no download after last call, compensate for delay between calls\n            const delay = 0.001 * (nowMs - bolaState.lastCallTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        }\n\n        bolaState.lastCallTimeMs = nowMs;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n\n        checkBolaStateStableBufferTime(bolaState, mediaType);\n    }\n\n    function onBufferEmpty() {\n        // if we rebuffer, we don't want the placeholder buffer to artificially raise BOLA quality\n        for (const mediaType in bolaStateDict) {\n            if (bolaStateDict.hasOwnProperty(mediaType) && bolaStateDict[mediaType].state === BOLA_STATE_STEADY) {\n                bolaStateDict[mediaType].placeholderBuffer = 0;\n            }\n        }\n    }\n\n    function onPlaybackSeeking() {\n        // TODO: 1. Verify what happens if we seek mid-fragment.\n        // TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.\n        for (const mediaType in bolaStateDict) {\n            if (bolaStateDict.hasOwnProperty(mediaType)) {\n                const bolaState = bolaStateDict[mediaType];\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                    bolaState.state = BOLA_STATE_STARTUP; // TODO: BOLA_STATE_SEEK?\n                    clearBolaStateOnSeek(bolaState);\n                }\n            }\n        }\n    }\n\n    function onPeriodSwitchStarted() {\n        // TODO: does this have to be handled here?\n    }\n\n    function onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.mediaInfo) {\n            const bolaState = bolaStateDict[e.chunk.mediaInfo.type];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                const start = e.chunk.start;\n                if (isNaN(bolaState.mostAdvancedSegmentStart) || start > bolaState.mostAdvancedSegmentStart) {\n                    bolaState.mostAdvancedSegmentStart = start;\n                    bolaState.lastSegmentWasReplacement = false;\n                } else {\n                    bolaState.lastSegmentWasReplacement = true;\n                }\n\n                bolaState.lastSegmentStart = start;\n                bolaState.lastSegmentDurationS = e.chunk.duration;\n                bolaState.lastQuality = e.chunk.quality;\n\n                checkNewSegment(bolaState, e.chunk.mediaInfo.type);\n            }\n        }\n    }\n\n    function onMetricAdded(e) {\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                bolaState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\n                bolaState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\n\n                checkNewSegment(bolaState, e.mediaType);\n            }\n        }\n    }\n\n    /*\n     * When a new segment is downloaded, we get two notifications: onMediaFragmentLoaded() and onMetricAdded(). It is\n     * possible that the quality for the downloaded segment was lower (not higher) than the quality indicated by BOLA.\n     * This might happen because of other rules such as the DroppedFramesRule. When this happens, we trim the\n     * placeholder buffer to make BOLA more stable. This mechanism also avoids inflating the buffer when BOLA itself\n     * decides not to increase the quality to avoid oscillations.\n     *\n     * We should also check for replacement segments (fast switching). In this case, a segment is downloaded but does\n     * not grow the actual buffer. Fast switching might cause the buffer to deplete, causing BOLA to drop the bitrate.\n     * We avoid this by growing the placeholder buffer.\n     */\n    function checkNewSegment(bolaState, mediaType) {\n        if (!isNaN(bolaState.lastSegmentStart) && !isNaN(bolaState.lastSegmentRequestTimeMs) && !isNaN(bolaState.placeholderBuffer)) {\n            bolaState.placeholderBuffer *= PLACEHOLDER_BUFFER_DECAY;\n\n            // Find what maximum buffer corresponding to last segment was, and ensure placeholder is not relatively larger.\n            if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(mediaType));\n                const bufferAtLastSegmentRequest = bufferLevel + 0.001 * (bolaState.lastSegmentFinishTimeMs - bolaState.lastSegmentRequestTimeMs); // estimate\n                const maxEffectiveBufferForLastSegment = maxBufferLevelForQuality(bolaState, bolaState.lastQuality);\n                const maxPlaceholderBuffer = Math.max(0, maxEffectiveBufferForLastSegment - bufferAtLastSegmentRequest);\n                bolaState.placeholderBuffer = Math.min(maxPlaceholderBuffer, bolaState.placeholderBuffer);\n            }\n\n            // then see if we should grow placeholder buffer\n\n            if (bolaState.lastSegmentWasReplacement && !isNaN(bolaState.lastSegmentDurationS)) {\n                // compensate for segments that were downloaded but did not grow the buffer\n                bolaState.placeholderBuffer += bolaState.lastSegmentDurationS;\n            }\n\n            bolaState.lastSegmentStart = NaN;\n            bolaState.lastSegmentRequestTimeMs = NaN;\n        }\n    }\n\n    function onQualityChangeRequested(e) {\n        // Useful to store change requests when abandoning a download.\n        if (e) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                bolaState.abrQuality = e.newQuality;\n            }\n        }\n    }\n\n    function onFragmentLoadingAbandoned(e) {\n        if (e) {\n            const bolaState = bolaStateDict[e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                // deflate placeholderBuffer - note that we want to be conservative when abandoning\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(e.mediaType));\n                let wantEffectiveBufferLevel;\n                if (bolaState.abrQuality > 0) {\n                    // deflate to point where BOLA just chooses newQuality over newQuality-1\n                    wantEffectiveBufferLevel = minBufferLevelForQuality(bolaState, bolaState.abrQuality);\n                } else {\n                    wantEffectiveBufferLevel = MINIMUM_BUFFER_S;\n                }\n                const maxPlaceholderBuffer = Math.max(0, wantEffectiveBufferLevel - bufferLevel);\n                bolaState.placeholderBuffer = Math.min(bolaState.placeholderBuffer, maxPlaceholderBuffer);\n            }\n        }\n    }\n\n    function getMaxIndex(rulesContext) {\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        const streamProcessor = rulesContext.getStreamProcessor();\n        const streamInfo = rulesContext.getStreamInfo();\n        const abrController = rulesContext.getAbrController();\n        const throughputHistory = abrController.getThroughputHistory();\n        const streamId = streamInfo ? streamInfo.id : null;\n        const isDynamic = streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.isDynamic;\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\n        const switchRequest = SwitchRequest(context).create();\n        switchRequest.reason = switchRequest.reason || {};\n\n        if (!useBufferOccupancyABR) {\n            return switchRequest;\n        }\n\n        streamProcessor.getScheduleController().setTimeToLoadDelay(0);\n\n        const bolaState = getBolaState(rulesContext);\n\n        if (bolaState.state === BOLA_STATE_ONE_BITRATE) {\n            // shouldn't even have been called\n            return switchRequest;\n        }\n\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(metrics);\n        const throughput = throughputHistory.getAverageThroughput(mediaType, isDynamic);\n        const safeThroughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n        const latency = throughputHistory.getAverageLatency(mediaType);\n        let quality;\n\n        switchRequest.reason.state = bolaState.state;\n        switchRequest.reason.throughput = throughput;\n        switchRequest.reason.latency = latency;\n\n        if (isNaN(throughput)) { // isNaN(throughput) === isNaN(safeThroughput) === isNaN(latency)\n            // still starting up - not enough information\n            return switchRequest;\n        }\n\n        switch (bolaState.state) {\n            case BOLA_STATE_STARTUP:\n                quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, latency);\n\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = safeThroughput;\n\n                bolaState.placeholderBuffer = Math.max(0, minBufferLevelForQuality(bolaState, quality) - bufferLevel);\n                bolaState.lastQuality = quality;\n\n                if (!isNaN(bolaState.lastSegmentDurationS) && bufferLevel >= bolaState.lastSegmentDurationS) {\n                    bolaState.state = BOLA_STATE_STEADY;\n                }\n\n                break; // BOLA_STATE_STARTUP\n\n            case BOLA_STATE_STEADY:\n\n                // NB: The placeholder buffer is added to bufferLevel to come up with a bitrate.\n                //     This might lead BOLA to be too optimistic and to choose a bitrate that would lead to rebuffering -\n                //     if the real buffer bufferLevel runs out, the placeholder buffer cannot prevent rebuffering.\n                //     However, the InsufficientBufferRule takes care of this scenario.\n\n                updatePlaceholderBuffer(bolaState, mediaType);\n\n                quality = getQualityFromBufferLevel(bolaState, bufferLevel + bolaState.placeholderBuffer);\n\n                // we want to avoid oscillations\n                // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\n                const qualityForThroughput = abrController.getQualityForBitrate(mediaInfo, safeThroughput, latency);\n                if (quality > bolaState.lastQuality && quality > qualityForThroughput) {\n                    // only intervene if we are trying to *increase* quality to an *unsustainable* level\n                    // we are only avoid oscillations - do not drop below last quality\n\n                    quality = Math.max(qualityForThroughput, bolaState.lastQuality);\n                }\n\n                // We do not want to overfill buffer with low quality chunks.\n                // Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.\n                let delayS = Math.max(0, bufferLevel + bolaState.placeholderBuffer - maxBufferLevelForQuality(bolaState, quality));\n\n                // First reduce placeholder buffer, then tell schedule controller to pause.\n                if (delayS <= bolaState.placeholderBuffer) {\n                    bolaState.placeholderBuffer -= delayS;\n                    delayS = 0;\n                } else {\n                    delayS -= bolaState.placeholderBuffer;\n                    bolaState.placeholderBuffer = 0;\n\n                    if (quality < abrController.getTopQualityIndexFor(mediaType, streamId)) {\n                        // At top quality, allow schedule controller to decide how far to fill buffer.\n                        streamProcessor.getScheduleController().setTimeToLoadDelay(1000 * delayS);\n                    } else {\n                        delayS = 0;\n                    }\n                }\n\n                switchRequest.quality = quality;\n                switchRequest.reason.throughput = throughput;\n                switchRequest.reason.latency = latency;\n                switchRequest.reason.bufferLevel = bufferLevel;\n                switchRequest.reason.placeholderBuffer = bolaState.placeholderBuffer;\n                switchRequest.reason.delay = delayS;\n\n                bolaState.lastQuality = quality;\n                // keep bolaState.state === BOLA_STATE_STEADY\n\n                break; // BOLA_STATE_STEADY\n\n            default:\n                logger.debug('BOLA ABR rule invoked in bad state.');\n                // should not arrive here, try to recover\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, safeThroughput, latency);\n                switchRequest.reason.state = bolaState.state;\n                switchRequest.reason.throughput = safeThroughput;\n                switchRequest.reason.latency = latency;\n                bolaState.state = BOLA_STATE_STARTUP;\n                clearBolaStateOnSeek(bolaState);\n        }\n\n        return switchRequest;\n    }\n\n    function resetInitialSettings() {\n        bolaStateDict = {};\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        eventBus.off(Events.BUFFER_EMPTY, onBufferEmpty, instance);\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n        eventBus.off(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, onMediaFragmentLoaded, instance);\n        eventBus.off(Events.METRIC_ADDED, onMetricAdded, instance);\n        eventBus.off(Events.QUALITY_CHANGE_REQUESTED, onQualityChangeRequested, instance);\n        eventBus.off(Events.FRAGMENT_LOADING_ABANDONED, onFragmentLoadingAbandoned, instance);\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBolaRule.__dashjs_factory_name = 'BolaRule';\nexport default FactoryMaker.getClassFactory(BolaRule);\n","\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Debug from '../../../core/Debug';\n\nfunction DroppedFramesRule() {\n\n    const context = this.context;\n    let instance,\n        logger;\n\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        if (droppedFramesHistory) {\n            const dfh = droppedFramesHistory.getFrameHistory();\n            let droppedFrames = 0;\n            let totalFrames = 0;\n            let maxIndex = SwitchRequest.NO_CHANGE;\n            for (let i = 1; i < dfh.length; i++) { //No point in measuring dropped frames for the zeroeth index.\n                if (dfh[i]) {\n                    droppedFrames = dfh[i].droppedVideoFrames;\n                    totalFrames = dfh[i].totalVideoFrames;\n\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n                        maxIndex = i - 1;\n                        logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n                        break;\n                    }\n                }\n            }\n            return SwitchRequest(context).create(maxIndex, {droppedFrames: droppedFrames});\n        }\n\n        return SwitchRequest(context).create();\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport BufferController from '../../controllers/BufferController';\nimport EventBus from '../../../core/EventBus';\nimport Events from '../../../core/events/Events';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction InsufficientBufferRule(config) {\n\n    config = config || {};\n    const INSUFFICIENT_BUFFER_SAFETY_FACTOR = 0.5;\n\n    const context = this.context;\n\n    const eventBus = EventBus(context).getInstance();\n    const metricsModel = config.metricsModel;\n    const dashMetrics = config.dashMetrics;\n\n    let instance,\n        logger,\n        bufferStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n    }\n\n    function checkConfig() {\n        if (!metricsModel || !metricsModel.hasOwnProperty('getReadOnlyMetricsFor') || !dashMetrics || !dashMetrics.hasOwnProperty('getCurrentBufferLevel')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n    /*\n     * InsufficientBufferRule does not kick in before the first BUFFER_LOADED event happens. This is reset at every seek.\n     *\n     * If a BUFFER_EMPTY event happens, then InsufficientBufferRule returns switchRequest.quality=0 until BUFFER_LOADED happens.\n     *\n     * Otherwise InsufficientBufferRule gives a maximum bitrate depending on throughput and bufferLevel such that\n     * a whole fragment can be downloaded before the buffer runs out, subject to a conservative safety factor of 0.5.\n     * If the bufferLevel is low, then InsufficientBufferRule avoids rebuffering risk.\n     * If the bufferLevel is high, then InsufficientBufferRule give a high MaxIndex allowing other rules to take over.\n     */\n    function getMaxIndex (rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaType')) {\n            return switchRequest;\n        }\n\n        checkConfig();\n\n        const mediaType = rulesContext.getMediaType();\n        const metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        const lastBufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\n        const representationInfo = rulesContext.getRepresentationInfo();\n        const fragmentDuration = representationInfo.fragmentDuration;\n\n        // Don't ask for a bitrate change if there is not info about buffer state or if fragmentDuration is not defined\n        if (!lastBufferStateVO || !wasFirstBufferLoadedEventTriggered(mediaType, lastBufferStateVO) || !fragmentDuration) {\n            return switchRequest;\n        }\n\n        if (lastBufferStateVO.state === BufferController.BUFFER_EMPTY) {\n            logger.info('Switch to index 0; buffer is empty.');\n            switchRequest.quality = 0;\n            switchRequest.reason = 'InsufficientBufferRule: Buffer is empty';\n        } else {\n            const mediaInfo = rulesContext.getMediaInfo();\n            const abrController = rulesContext.getAbrController();\n            const throughputHistory = abrController.getThroughputHistory();\n\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(metrics);\n            const throughput = throughputHistory.getAverageThroughput(mediaType);\n            const latency = throughputHistory.getAverageLatency(mediaType);\n            const bitrate = throughput * (bufferLevel / fragmentDuration) * INSUFFICIENT_BUFFER_SAFETY_FACTOR;\n\n            switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, bitrate, latency);\n            switchRequest.reason = 'InsufficientBufferRule: being conservative to avoid immediate rebuffering';\n        }\n\n        return switchRequest;\n    }\n\n    function wasFirstBufferLoadedEventTriggered(mediaType, currentBufferState) {\n        bufferStateDict[mediaType] = bufferStateDict[mediaType] || {};\n\n        let wasTriggered = false;\n        if (bufferStateDict[mediaType].firstBufferLoadedEvent) {\n            wasTriggered = true;\n        } else if (currentBufferState && currentBufferState.state === BufferController.BUFFER_LOADED) {\n            bufferStateDict[mediaType].firstBufferLoadedEvent = true;\n            wasTriggered = true;\n        }\n        return wasTriggered;\n    }\n\n    function resetInitialSettings() {\n        bufferStateDict = {};\n    }\n\n    function onPlaybackSeeking() {\n        resetInitialSettings();\n    }\n\n    function reset() {\n        resetInitialSettings();\n        eventBus.off(Events.PLAYBACK_SEEKING, onPlaybackSeeking, instance);\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\n","\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction SwitchHistoryRule() {\n\n    const context = this.context;\n\n    let instance,\n        logger;\n\n    //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\n    const MAX_SWITCH = 0.075;\n\n    //Before this number of switch requests(no switch or actual), don't apply the rule.\n    //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\n    const SAMPLE_SIZE = 6;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\n        let drops = 0;\n        let noDrops = 0;\n        let dropSize = 0;\n        const switchRequest = SwitchRequest(context).create();\n\n        for (let i = 0; i < switchRequests.length; i++) {\n            if (switchRequests[i] !== undefined) {\n                drops += switchRequests[i].drops;\n                noDrops += switchRequests[i].noDrops;\n                dropSize += switchRequests[i].dropSize;\n\n                if (drops + noDrops >= SAMPLE_SIZE && (drops / noDrops > MAX_SWITCH)) {\n                    switchRequest.quality = (i > 0 && switchRequests[i].drops > 0) ? i - 1 : i;\n                    switchRequest.reason = {index: switchRequest.quality, drops: drops, noDrops: noDrops, dropSize: dropSize};\n                    logger.info('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\n                    break;\n                }\n            }\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport BufferController from '../../controllers/BufferController';\nimport AbrController from '../../controllers/AbrController';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction ThroughputRule(config) {\n\n    config = config || {};\n    const context = this.context;\n    const metricsModel = config.metricsModel;\n\n    let instance,\n        logger;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function checkConfig() {\n        if (!metricsModel || !metricsModel.hasOwnProperty('getReadOnlyMetricsFor')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaInfo') || !rulesContext.hasOwnProperty('getMediaType') || !rulesContext.hasOwnProperty('useBufferOccupancyABR') ||\n            !rulesContext.hasOwnProperty('getAbrController') || !rulesContext.hasOwnProperty('getStreamProcessor')) {\n            return switchRequest;\n        }\n\n        checkConfig();\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const metrics = metricsModel.getReadOnlyMetricsFor(mediaType);\n        const streamProcessor = rulesContext.getStreamProcessor();\n        const abrController = rulesContext.getAbrController();\n        const streamInfo = rulesContext.getStreamInfo();\n        const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\n        const throughputHistory = abrController.getThroughputHistory();\n        const throughput = throughputHistory.getSafeAverageThroughput(mediaType, isDynamic);\n        const latency = throughputHistory.getAverageLatency(mediaType);\n        const bufferStateVO = (metrics.BufferState.length > 0) ? metrics.BufferState[metrics.BufferState.length - 1] : null;\n        const useBufferOccupancyABR = rulesContext.useBufferOccupancyABR();\n\n        if (!metrics || isNaN(throughput) || !bufferStateVO || useBufferOccupancyABR) {\n            return switchRequest;\n        }\n\n        if (abrController.getAbandonmentStateFor(mediaType) !== AbrController.ABANDON_LOAD) {\n            if (bufferStateVO.state === BufferController.BUFFER_LOADED || isDynamic) {\n                switchRequest.quality = abrController.getQualityForBitrate(mediaInfo, throughput, latency);\n                streamProcessor.getScheduleController().setTimeToLoadDelay(0);\n                logger.info('requesting switch to index: ', switchRequest.quality, 'type: ',mediaType, 'Average throughput', Math.round(throughput), 'kbps');\n                switchRequest.reason = {throughput: throughput, latency: latency};\n            }\n        }\n\n        return switchRequest;\n    }\n\n    function reset() {\n        // no persistent information to reset\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\nexport default FactoryMaker.getClassFactory(ThroughputRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BufferLevelRule(config) {\n\n    config = config || {};\n    const dashMetrics = config.dashMetrics;\n    const metricsModel = config.metricsModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const textController = config.textController;\n    const abrController = config.abrController;\n\n    function setup() {\n    }\n\n    function execute(streamProcessor, type, videoTrackPresent) {\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(type));\n        return bufferLevel < getBufferTarget(streamProcessor, type, videoTrackPresent);\n    }\n\n    function getBufferTarget(streamProcessor, type, videoTrackPresent) {\n        let bufferTarget = NaN;\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        if (type === Constants.FRAGMENTED_TEXT) {\n            bufferTarget = textController.isTextEnabled() ? representationInfo.fragmentDuration : 0;\n        } else if (type === Constants.AUDIO && videoTrackPresent) {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(metricsModel.getReadOnlyMetricsFor(Constants.VIDEO));\n            if (isNaN(representationInfo.fragmentDuration)) {\n                bufferTarget = videoBufferLevel;\n            } else {\n                bufferTarget = Math.max(videoBufferLevel, representationInfo.fragmentDuration);\n            }\n        } else {\n            const streamInfo = representationInfo.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= mediaPlayerModel.getLongFormContentDurationThreshold();\n                bufferTarget = isLongFormContent ? mediaPlayerModel.getBufferTimeAtTopQualityLongForm() : mediaPlayerModel.getBufferTimeAtTopQuality();\n            } else {\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\n            }\n        }\n        return bufferTarget;\n    }\n\n    const instance = {\n        execute: execute,\n        getBufferTarget: getBufferTarget\n    };\n\n    setup();\n    return instance;\n}\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../constants/Constants';\nimport Debug from '../../../core/Debug';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport FragmentRequest from '../../../streaming/vo/FragmentRequest';\n\nfunction NextFragmentRequestRule(config) {\n\n    config = config || {};\n    const context = this.context;\n    const adapter = config.adapter;\n    const textController = config.textController;\n\n    let instance,\n        logger;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function execute(streamProcessor, requestToReplace) {\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        const mediaInfo = representationInfo.mediaInfo;\n        const mediaType = mediaInfo.type;\n        const scheduleController = streamProcessor.getScheduleController();\n        const seekTarget = scheduleController.getSeekTarget();\n        const hasSeekTarget = !isNaN(seekTarget);\n        const bufferController = streamProcessor.getBufferController();\n        const currentTime = streamProcessor.getPlaybackController().getTime();\n        let time = hasSeekTarget ? seekTarget : adapter.getIndexHandlerTime(streamProcessor);\n        let bufferIsDivided = false;\n\n        if (isNaN(time) || (mediaType === Constants.FRAGMENTED_TEXT && !textController.isTextEnabled())) {\n            return null;\n        }\n\n        if (hasSeekTarget) {\n            scheduleController.setSeekTarget(NaN);\n        }\n\n        /**\n         * This is critical for IE/Safari/EDGE\n         * */\n        if (bufferController) {\n            let range = bufferController.getRangeAt(time);\n            const playingRange = bufferController.getRangeAt(currentTime);\n            const bufferRanges = bufferController.getBuffer().getAllBufferRanges();\n            const numberOfBuffers = bufferRanges ? bufferRanges.length : 0;\n            if ((range !== null || playingRange !== null) && !hasSeekTarget) {\n                if ( !range || (playingRange && playingRange.start != range.start && playingRange.end != range.end) ) {\n                    if (numberOfBuffers > 1 ) {\n                        streamProcessor.getFragmentModel().removeExecutedRequestsAfterTime(playingRange.end);\n                        bufferIsDivided = true;\n                    }\n                    range = playingRange;\n                }\n                logger.debug('Prior to making a request for time, NextFragmentRequestRule is aligning index handler\\'s currentTime with bufferedRange.end for', mediaType, '.', time, 'was changed to', range.end);\n                time = range.end;\n            }\n        }\n\n        let request;\n        if (requestToReplace) {\n            time = requestToReplace.startTime + (requestToReplace.duration / 2);\n            request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, time, {\n                timeThreshold: 0,\n                ignoreIsFinished: true\n            });\n        } else {\n            request = adapter.getFragmentRequestForTime(streamProcessor, representationInfo, time, {\n                keepIdx: !hasSeekTarget && !bufferIsDivided\n            });\n\n            // Then, check if this request was downloaded or not\n            while (request && request.action !== FragmentRequest.ACTION_COMPLETE && streamProcessor.getFragmentModel().isFragmentLoaded(request)) {\n                // loop until we found not loaded fragment, or no fragment\n                request = adapter.getNextFragmentRequest(streamProcessor, representationInfo);\n            }\n            if (request) {\n                if (!isNaN(request.startTime + request.duration)) {\n                    adapter.setIndexHandlerTime(streamProcessor, request.startTime + request.duration);\n                }\n                request.delayLoadingTime = new Date().getTime() + scheduleController.getTimeToLoadDelay();\n                scheduleController.setTimeToLoadDelay(0);\n            }\n        }\n\n        return request;\n    }\n\n    instance = {\n        execute: execute\n    };\n\n    setup();\n\n    return instance;\n}\n\nNextFragmentRequestRule.__dashjs_factory_name = 'NextFragmentRequestRule';\nexport default FactoryMaker.getClassFactory(NextFragmentRequestRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/,'').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = {start: startTime, end: endTime, spans: []};\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({ type: 'html',\n                                start: startTime,\n                                end: endTime,\n                                cueHTMLElement: finalDiv,\n                                cueID: cueID,\n                                cellResolution: [32, 15],\n                                isFromCEA608: true,\n                                regions: regions,\n                                regionID: region.name,\n                                videoHeight: videoElement.videoHeight,\n                                videoWidth: videoElement.videoWidth,\n                                fontSize: fontSize,\n                                lineHeight: {},\n                                linePadding: {}\n                               });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport InitCache from '../utils/InitCache';\nimport SourceBufferSink from '../SourceBufferSink';\nimport TextController from '../../streaming/text/TextController';\n\nconst BUFFER_CONTROLLER_TYPE = 'NotFragmentedTextBufferController';\nfunction NotFragmentedTextBufferController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const textController = TextController(context).getInstance();\n\n    let errHandler = config.errHandler;\n    let type = config.type;\n    let mimeType = config.mimeType;\n    let streamProcessor = config.streamProcessor;\n\n    let instance,\n        isBufferingCompleted,\n        initialized,\n        mediaSource,\n        buffer,\n        representationController,\n        initCache;\n\n    function setup() {\n        initialized = false;\n        mediaSource = null;\n        representationController = null;\n        isBufferingCompleted = false;\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, instance);\n    }\n\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    function initialize(source) {\n        setMediaSource(source);\n        representationController = streamProcessor.getRepresentationController();\n        initCache = InitCache(context).getInstance();\n    }\n\n    /**\n     * @param {MediaInfo }mediaInfo\n     * @memberof BufferController#\n     */\n    function createBuffer(mediaInfo) {\n        try {\n            buffer = SourceBufferSink(context).create(mediaSource, mediaInfo);\n            if (!initialized) {\n                const textBuffer = buffer.getBuffer();\n                if (textBuffer.hasOwnProperty(Constants.INITIALIZE)) {\n                    textBuffer.initialize(mimeType, streamProcessor);\n                }\n                initialized = true;\n            }\n            return buffer;\n        } catch (e) {\n            if ((mediaInfo.isText) || (mediaInfo.codec.indexOf('codecs=\"stpp') !== -1) || (mediaInfo.codec.indexOf('codecs=\"wvtt') !== -1)) {\n                try {\n                    buffer = textController.getTextSourceBuffer();\n                } catch (e) {\n                    errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\n                }\n            } else {\n                errHandler.mediaSourceError('Error creating ' + type + ' source buffer.');\n            }\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function setMediaSource(value) {\n        mediaSource = value;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getStreamProcessor() {\n        return streamProcessor;\n    }\n\n    function getIsPruningInProgress() {\n        return false;\n    }\n\n    function dischargePreBuffer() {\n    }\n\n    function setSeekStartTime() { //Unused - TODO Remove need for stub function\n    }\n\n    function getBufferLevel() {\n        return 0;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function reset(errored) {\n        eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, instance);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, onInitFragmentLoaded, instance);\n\n        if (!errored && buffer) {\n            buffer.abort();\n            buffer.reset();\n            buffer = null;\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.sender.getStreamProcessor() !== streamProcessor) {\n            return;\n        }\n\n        const chunk = initCache.extract(streamProcessor.getStreamInfo().id, e.sender.getCurrentRepresentation().id);\n\n        if (!chunk) {\n            eventBus.trigger(Events.TIMED_TEXT_REQUESTED, {\n                index: 0,\n                sender: e.sender\n            }); //TODO make index dynamic if referring to MP?\n        }\n    }\n\n    function onInitFragmentLoaded(e) {\n        if (e.fragmentModel !== streamProcessor.getFragmentModel() || (!e.chunk.bytes)) {\n            return;\n        }\n\n        initCache.save(e.chunk);\n        buffer.append(e.chunk);\n\n        eventBus.trigger(Events.STREAM_COMPLETED, {\n            request: e.request,\n            fragmentModel: e.fragmentModel\n        });\n    }\n\n    function switchInitData(streamId, representationId) {\n        const chunk = initCache.extract(streamId, representationId);\n\n        if (!chunk) {\n            eventBus.trigger(Events.TIMED_TEXT_REQUESTED, {\n                index: 0,\n                sender: instance\n            });\n        }\n    }\n\n    function getRangeAt() {\n        return null;\n    }\n\n    function updateTimestampOffset(MSETimeOffset) {\n        if (buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\n            buffer.timestampOffset = MSETimeOffset;\n        }\n    }\n\n    instance = {\n        getBufferControllerType: getBufferControllerType,\n        initialize: initialize,\n        createBuffer: createBuffer,\n        getType: getType,\n        getStreamProcessor: getStreamProcessor,\n        setSeekStartTime: setSeekStartTime,\n        getBuffer: getBuffer,\n        getBufferLevel: getBufferLevel,\n        setMediaSource: setMediaSource,\n        getMediaSource: getMediaSource,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        getIsPruningInProgress: getIsPruningInProgress,\n        dischargePreBuffer: dischargePreBuffer,\n        switchInitData: switchInitData,\n        getRangeAt: getRangeAt,\n        reset: reset,\n        updateTimestampOffset: updateTimestampOffset\n    };\n\n    setup();\n\n    return instance;\n}\n\nNotFragmentedTextBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nexport default FactoryMaker.getClassFactory(NotFragmentedTextBufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport BufferController from './../controllers/BufferController';\nimport NotFragmentedTextBufferController from './NotFragmentedTextBufferController';\n\nfunction TextBufferController(config) {\n\n    config = config || {};\n    let context = this.context;\n\n    let _BufferControllerImpl;\n\n    let instance;\n\n    function setup() {\n\n        // according to text type, we create corresponding buffer controller\n        if (config.type === Constants.FRAGMENTED_TEXT) {\n\n            // in this case, internal buffer ocntroller is a classical BufferController object\n            _BufferControllerImpl = BufferController(context).create({\n                type: config.type,\n                metricsModel: config.metricsModel,\n                mediaPlayerModel: config.mediaPlayerModel,\n                manifestModel: config.manifestModel,\n                errHandler: config.errHandler,\n                streamController: config.streamController,\n                mediaController: config.mediaController,\n                adapter: config.adapter,\n                textController: config.textController,\n                abrController: config.abrController,\n                playbackController: config.playbackController,\n                streamProcessor: config.streamProcessor\n            });\n        } else {\n\n            // in this case, internal buffer controller is a not fragmented text controller object\n            _BufferControllerImpl = NotFragmentedTextBufferController(context).create({\n                type: config.type,\n                mimeType: config.mimeType,\n                errHandler: config.errHandler,\n                streamProcessor: config.streamProcessor\n            });\n        }\n    }\n\n    function getBufferControllerType() {\n        return _BufferControllerImpl.getBufferControllerType();\n    }\n\n    function initialize(source, StreamProcessor) {\n        return _BufferControllerImpl.initialize(source, StreamProcessor);\n    }\n\n    /**\n     * @param {MediaInfo }mediaInfo\n     * @returns {Object} SourceBuffer object\n     * @memberof BufferController#\n     */\n    function createBuffer(mediaInfo) {\n        return _BufferControllerImpl.createBuffer(mediaInfo);\n    }\n\n    function getType() {\n        return _BufferControllerImpl.getType();\n    }\n\n    function getBuffer() {\n        return _BufferControllerImpl.getBuffer();\n    }\n\n    function setBuffer(value) {\n        _BufferControllerImpl.setBuffer(value);\n    }\n\n    function getMediaSource() {\n        return _BufferControllerImpl.getMediaSource();\n    }\n\n    function setMediaSource(value) {\n        _BufferControllerImpl.setMediaSource(value);\n    }\n\n    function getStreamProcessor() {\n        _BufferControllerImpl.getStreamProcessor();\n    }\n\n    function setSeekStartTime(value) {\n        _BufferControllerImpl.setSeekStartTime(value);\n    }\n\n    function getBufferLevel() {\n        return _BufferControllerImpl.getBufferLevel();\n    }\n\n    function reset(errored) {\n        _BufferControllerImpl.reset(errored);\n    }\n\n    function getIsBufferingCompleted() {\n        return _BufferControllerImpl.getIsBufferingCompleted();\n    }\n\n    function switchInitData(streamId, representationId) {\n        _BufferControllerImpl.switchInitData(streamId, representationId);\n    }\n\n    function getIsPruningInProgress() {\n        return _BufferControllerImpl.getIsPruningInProgress();\n    }\n\n    function dischargePreBuffer() {\n        return _BufferControllerImpl.dischargePreBuffer();\n    }\n\n    function getRangeAt(time) {\n        return _BufferControllerImpl.getRangeAt(time);\n    }\n\n    function updateTimestampOffset(MSETimeOffset) {\n        const buffer = getBuffer();\n        if (buffer.timestampOffset !== MSETimeOffset && !isNaN(MSETimeOffset)) {\n            buffer.timestampOffset = MSETimeOffset;\n        }\n    }\n\n    instance = {\n        getBufferControllerType: getBufferControllerType,\n        initialize: initialize,\n        createBuffer: createBuffer,\n        getType: getType,\n        getStreamProcessor: getStreamProcessor,\n        setSeekStartTime: setSeekStartTime,\n        getBuffer: getBuffer,\n        setBuffer: setBuffer,\n        getBufferLevel: getBufferLevel,\n        setMediaSource: setMediaSource,\n        getMediaSource: getMediaSource,\n        getIsBufferingCompleted: getIsBufferingCompleted,\n        getIsPruningInProgress: getIsPruningInProgress,\n        dischargePreBuffer: dischargePreBuffer,\n        switchInitData: switchInitData,\n        getRangeAt: getRangeAt,\n        reset: reset,\n        updateTimestampOffset: updateTimestampOffset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextBufferController.__dashjs_factory_name = 'TextBufferController';\nexport default FactoryMaker.getClassFactory(TextBufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport TextSourceBuffer from './TextSourceBuffer';\nimport TextTracks from './TextTracks';\nimport VTTParser from '../utils/VTTParser';\nimport TTMLParser from '../utils/TTMLParser';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction TextController() {\n\n    let context = this.context;\n    let instance;\n    let textSourceBuffer;\n\n    let errHandler,\n        dashManifestModel,\n        manifestModel,\n        mediaController,\n        videoModel,\n        streamController,\n        textTracks,\n        vttParser,\n        ttmlParser,\n        eventBus,\n        defaultLanguage,\n        lastEnabledIndex,\n        textDefaultEnabled, // this is used for default settings (each time a file is loaded, we check value of this settings )\n        allTracksAreDisabled, // this is used for one session (when a file has been loaded, we use this settings to enable/disable text)\n        forceTextStreaming;\n\n    function setup() {\n\n        defaultLanguage = '';\n        lastEnabledIndex = -1;\n        textDefaultEnabled = true;\n        forceTextStreaming = false;\n        textTracks = TextTracks(context).getInstance();\n        vttParser = VTTParser(context).getInstance();\n        ttmlParser = TTMLParser(context).getInstance();\n        textSourceBuffer = TextSourceBuffer(context).getInstance();\n        eventBus = EventBus(context).getInstance();\n\n        textTracks.initialize();\n        eventBus.on(Events.TEXT_TRACKS_QUEUE_INITIALIZED, onTextTracksAdded, instance);\n\n        resetInitialSettings();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textTracks) {\n            textTracks = config.textTracks;\n        }\n        if (config.vttParser) {\n            vttParser = config.vttParser;\n        }\n        if (config.ttmlParser) {\n            ttmlParser = config.ttmlParser;\n        }\n\n        // create config for source buffer\n        textSourceBuffer.setConfig({\n            errHandler: errHandler,\n            dashManifestModel: dashManifestModel,\n            manifestModel: manifestModel,\n            mediaController: mediaController,\n            videoModel: videoModel,\n            streamController: streamController,\n            textTracks: textTracks,\n            vttParser: vttParser,\n            ttmlParser: ttmlParser\n        });\n    }\n\n    function getTextSourceBuffer() {\n        return textSourceBuffer;\n    }\n\n    function getAllTracksAreDisabled() {\n        return allTracksAreDisabled;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n        textSourceBuffer.addEmbeddedTrack(mediaInfo);\n    }\n\n    function setTextDefaultLanguage(lang) {\n        if (typeof lang !== 'string') {\n            return;\n        }\n\n        defaultLanguage = lang;\n    }\n\n    function getTextDefaultLanguage() {\n        return defaultLanguage;\n    }\n\n    function onTextTracksAdded(e) {\n        let tracks = e.tracks;\n        let index = e.index;\n\n        tracks.some((item, idx) => {\n            if (item.lang === defaultLanguage) {\n                this.setTextTrack(idx);\n                index = idx;\n                return true;\n            }\n        });\n\n        if (!textDefaultEnabled) {\n            // disable text at startup\n            this.setTextTrack(-1);\n        }\n\n        lastEnabledIndex = index;\n        eventBus.trigger(Events.TEXT_TRACKS_ADDED, {\n            enabled: isTextEnabled(),\n            index: index,\n            tracks: tracks\n        });\n    }\n\n    function setTextDefaultEnabled(enable) {\n        if (typeof enable !== 'boolean') {\n            return;\n        }\n        textDefaultEnabled = enable;\n    }\n\n    function getTextDefaultEnabled() {\n        return textDefaultEnabled;\n    }\n\n    function enableText(enable) {\n        if (typeof enable !== 'boolean') {\n            return;\n        }\n\n        if (isTextEnabled() !== enable) {\n            // change track selection\n            if (enable) {\n                // apply last enabled tractk\n                this.setTextTrack(lastEnabledIndex);\n            }\n\n            if (!enable) {\n                // keep last index and disable text track\n                lastEnabledIndex = this.getCurrentTrackIdx();\n                this.setTextTrack(-1);\n            }\n        }\n    }\n\n    function isTextEnabled() {\n        let enabled = true;\n        if (allTracksAreDisabled && !forceTextStreaming) {\n            enabled = false;\n        }\n        return enabled;\n    }\n\n    // when set to true NextFragmentRequestRule will allow schedule of chunks even if tracks are all disabled. Allowing streaming to hidden track for external players to work with.\n    function enableForcedTextStreaming(enable) {\n        if (typeof enable !== 'boolean') {\n            return;\n        }\n        forceTextStreaming = enable;\n    }\n\n    function setTextTrack(idx) {\n        //For external time text file,  the only action needed to change a track is marking the track mode to showing.\n        // Fragmented text tracks need the additional step of calling TextController.setTextTrack();\n        let config = textSourceBuffer.getConfig();\n        let fragmentModel = config.fragmentModel;\n        let fragmentedTracks = config.fragmentedTracks;\n        let mediaInfosArr,\n            streamProcessor;\n\n        let oldTrackIdx = textTracks.getCurrentTrackIdx();\n        if (oldTrackIdx !== idx) {\n            textTracks.setModeForTrackIdx(oldTrackIdx, Constants.TEXT_HIDDEN);\n            textTracks.setCurrentTrackIdx(idx);\n            textTracks.setModeForTrackIdx(idx, Constants.TEXT_SHOWING);\n\n            let currentTrackInfo = textTracks.getCurrentTrackInfo();\n\n            if (currentTrackInfo && currentTrackInfo.isFragmented && !currentTrackInfo.isEmbedded) {\n                for (let i = 0; i < fragmentedTracks.length; i++) {\n                    let mediaInfo = fragmentedTracks[i];\n                    if (currentTrackInfo.lang === mediaInfo.lang && currentTrackInfo.index === mediaInfo.index &&\n                        (mediaInfo.id ? currentTrackInfo.label === mediaInfo.id : currentTrackInfo.label === mediaInfo.index)) {\n                        let currentFragTrack = mediaController.getCurrentTrackFor(Constants.FRAGMENTED_TEXT, streamController.getActiveStreamInfo());\n                        if (mediaInfo !== currentFragTrack) {\n                            fragmentModel.abortRequests();\n                            fragmentModel.removeExecutedRequestsBeforeTime();\n                            textSourceBuffer.remove();\n                            textTracks.deleteCuesFromTrackIdx(oldTrackIdx);\n                            mediaController.setTrack(mediaInfo);\n                            textSourceBuffer.setCurrentFragmentedTrackIdx(i);\n                        }\n                    }\n                }\n            } else if (currentTrackInfo && !currentTrackInfo.isFragmented) {\n                const streamProcessors = streamController.getActiveStreamProcessors();\n                for (let i = 0; i < streamProcessors.length; i++) {\n                    if (streamProcessors[i].getType() === Constants.TEXT) {\n                        streamProcessor = streamProcessors[i];\n                        mediaInfosArr = streamProcessor.getMediaInfoArr();\n                        break;\n                    }\n                }\n\n                if (streamProcessor && mediaInfosArr) {\n                    for (let i = 0; i < mediaInfosArr.length; i++) {\n                        if (mediaInfosArr[i].index === currentTrackInfo.index && mediaInfosArr[i].lang === currentTrackInfo.lang) {\n                            streamProcessor.selectMediaInfo(mediaInfosArr[i]);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        allTracksAreDisabled = idx === -1 ? true : false;\n    }\n\n    function getCurrentTrackIdx() {\n        return textTracks.getCurrentTrackIdx();\n    }\n\n    function resetInitialSettings() {\n        allTracksAreDisabled = false;\n    }\n\n    function reset() {\n        resetInitialSettings();\n        textSourceBuffer.resetEmbedded();\n        textSourceBuffer.reset();\n    }\n\n    instance = {\n        setConfig: setConfig,\n        getTextSourceBuffer: getTextSourceBuffer,\n        getAllTracksAreDisabled: getAllTracksAreDisabled,\n        addEmbeddedTrack: addEmbeddedTrack,\n        getTextDefaultLanguage: getTextDefaultLanguage,\n        setTextDefaultLanguage: setTextDefaultLanguage,\n        setTextDefaultEnabled: setTextDefaultEnabled,\n        getTextDefaultEnabled: getTextDefaultEnabled,\n        enableText: enableText,\n        isTextEnabled: isTextEnabled,\n        setTextTrack: setTextTrack,\n        getCurrentTrackIdx: getCurrentTrackIdx,\n        enableForcedTextStreaming: enableForcedTextStreaming,\n        reset: reset\n    };\n    setup();\n    return instance;\n}\n\nTextController.__dashjs_factory_name = 'TextController';\nexport default FactoryMaker.getSingletonFactory(TextController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport TextTrackInfo from '../vo/TextTrackInfo';\nimport FragmentedTextBoxParser from '../../dash/utils/FragmentedTextBoxParser';\nimport BoxParser from '../utils/BoxParser';\nimport CustomTimeRanges from '../utils/CustomTimeRanges';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport TextTracks from './TextTracks';\nimport EmbeddedTextHtmlRender from './EmbeddedTextHtmlRender';\nimport ISOBoxer from 'codem-isoboxer';\nimport cea608parser from '../../../externals/cea608-parser';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction TextSourceBuffer() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let embeddedInitialized = false;\n\n    let instance,\n        logger,\n        boxParser,\n        errHandler,\n        dashManifestModel,\n        manifestModel,\n        mediaController,\n        parser,\n        vttParser,\n        ttmlParser,\n        fragmentedTextBoxParser,\n        mediaInfos,\n        textTracks,\n        isFragmented,\n        fragmentModel,\n        initializationSegmentReceived,\n        timescale,\n        fragmentedTracks,\n        videoModel,\n        streamController,\n        firstSubtitleStart,\n        currFragmentedTrackIdx,\n        embeddedTracks,\n        embeddedInitializationSegmentReceived,\n        embeddedTimescale,\n        embeddedLastSequenceNumber,\n        embeddedSequenceNumbers,\n        embeddedCea608FieldParsers,\n        embeddedTextHtmlRender,\n        mseTimeOffset;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize(mimeType, streamProcessor) {\n        parser = null;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        timescale = NaN;\n        fragmentedTracks = [];\n        firstSubtitleStart = null;\n\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n\n        mediaInfos = streamProcessor.getMediaInfoArr();\n        textTracks.setConfig({\n            videoModel: videoModel\n        });\n        textTracks.initialize();\n        isFragmented = !dashManifestModel.getIsTextTrack(mimeType);\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({\n            boxParser: boxParser\n        });\n\n        if (isFragmented) {\n            fragmentModel = streamProcessor.getFragmentModel();\n            this.buffered = CustomTimeRanges(context).create();\n            fragmentedTracks = mediaController.getTracksFor(Constants.FRAGMENTED_TEXT, streamController.getActiveStreamInfo());\n            const currFragTrack = mediaController.getCurrentTrackFor(Constants.FRAGMENTED_TEXT, streamController.getActiveStreamInfo());\n            for (let i = 0; i < fragmentedTracks.length; i++) {\n                if (fragmentedTracks[i] === currFragTrack) {\n                    currFragmentedTrackIdx = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    function abort() {\n        textTracks.deleteAllTextTracks();\n        fragmentedTextBoxParser = null;\n        boxParser = null;\n        mediaInfos = null;\n        isFragmented = false;\n        fragmentModel = null;\n        initializationSegmentReceived = false;\n        fragmentedTracks = [];\n    }\n\n    function reset() {\n        parser = null;\n        streamController = null;\n        videoModel = null;\n        timescale = NaN;\n        textTracks = null;\n    }\n\n    function onVideoChunkReceived(e) {\n        const chunk = e.chunk;\n\n        if (chunk.mediaInfo.embeddedCaptions) {\n            append(chunk.bytes, chunk);\n        }\n    }\n\n    function initEmbedded() {\n        embeddedTracks = [];\n        mediaInfos = [];\n        textTracks = TextTracks(context).getInstance();\n        textTracks.setConfig({\n            videoModel: videoModel\n        });\n        textTracks.initialize();\n        boxParser = BoxParser(context).getInstance();\n        fragmentedTextBoxParser = FragmentedTextBoxParser(context).getInstance();\n        fragmentedTextBoxParser.setConfig({\n            boxParser: boxParser\n        });\n        isFragmented = false;\n        currFragmentedTrackIdx = null;\n        embeddedInitializationSegmentReceived = false;\n        embeddedTimescale = 0;\n        embeddedCea608FieldParsers = [];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n        embeddedInitialized = true;\n        embeddedTextHtmlRender = EmbeddedTextHtmlRender(context).getInstance();\n\n        const streamProcessors = streamController.getActiveStreamProcessors();\n        for (const i in streamProcessors) {\n            if (streamProcessors[i].getType() === 'video') {\n                mseTimeOffset = streamProcessors[i].getCurrentRepresentationInfo().MSETimeOffset;\n                break;\n            }\n        }\n\n        eventBus.on(Events.VIDEO_CHUNK_RECEIVED, onVideoChunkReceived, this);\n    }\n\n    function resetEmbedded() {\n        eventBus.off(Events.VIDEO_CHUNK_RECEIVED, onVideoChunkReceived, this);\n        if (textTracks) {\n            textTracks.deleteAllTextTracks();\n        }\n        embeddedInitialized = false;\n        embeddedTracks = [];\n        embeddedCea608FieldParsers = [null, null];\n        embeddedSequenceNumbers = [];\n        embeddedLastSequenceNumber = null;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n        if (!embeddedInitialized) {\n            initEmbedded();\n        }\n        if (mediaInfo.id === Constants.CC1 || mediaInfo.id === Constants.CC3) {\n            for (let i = 0; i < embeddedTracks.length; i++) {\n                if (embeddedTracks[i].id === mediaInfo.id) {\n                    return;\n                }\n            }\n            embeddedTracks.push(mediaInfo);\n        } else {\n            logger.warn('Embedded track ' + mediaInfo.id + ' not supported!');\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textTracks) {\n            textTracks = config.textTracks;\n        }\n        if (config.vttParser) {\n            vttParser = config.vttParser;\n        }\n        if (config.ttmlParser) {\n            ttmlParser = config.ttmlParser;\n        }\n    }\n\n    function getConfig() {\n        const config = {\n            errHandler: errHandler,\n            dashManifestModel: dashManifestModel,\n            mediaController: mediaController,\n            videoModel: videoModel,\n            fragmentModel: fragmentModel,\n            streamController: streamController,\n            textTracks: textTracks,\n            isFragmented: isFragmented,\n            embeddedTracks: embeddedTracks,\n            fragmentedTracks: fragmentedTracks\n        };\n\n        return config;\n    }\n\n    function setCurrentFragmentedTrackIdx(idx) {\n        currFragmentedTrackIdx = idx;\n    }\n\n    function append(bytes, chunk) {\n        let result,\n            sampleList,\n            i, j, k,\n            samplesInfo,\n            ccContent;\n        const mediaInfo = chunk.mediaInfo;\n        const mediaType = mediaInfo.type;\n        const mimeType = mediaInfo.mimeType;\n        const codecType = mediaInfo.codec || mimeType;\n        if (!codecType) {\n            logger.error('No text type defined');\n            return;\n        }\n\n        function createTextTrackFromMediaInfo(captionData, mediaInfo) {\n            const textTrackInfo = new TextTrackInfo();\n            const trackKindMap = { subtitle: 'subtitles', caption: 'captions' }; //Dash Spec has no \"s\" on end of KIND but HTML needs plural.\n            const getKind = function () {\n                let kind = (mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0]] : trackKindMap.caption;\n                kind = (kind === trackKindMap.caption || kind === trackKindMap.subtitle) ? kind : trackKindMap.caption;\n                return kind;\n            };\n\n            const checkTTML = function () {\n                let ttml = false;\n                if (mediaInfo.codec && mediaInfo.codec.search(Constants.STPP) >= 0) {\n                    ttml = true;\n                }\n                if (mediaInfo.mimeType && mediaInfo.mimeType.search(Constants.TTML) >= 0) {\n                    ttml = true;\n                }\n                return ttml;\n            };\n\n            textTrackInfo.captionData = captionData;\n            textTrackInfo.lang = mediaInfo.lang;\n            textTrackInfo.label = mediaInfo.id ? mediaInfo.id : mediaInfo.index; // AdaptationSet id (an unsigned int) as it's optionnal parameter, use mediaInfo.index\n            textTrackInfo.index = mediaInfo.index; // AdaptationSet index in manifest\n            textTrackInfo.isTTML = checkTTML();\n            textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\n            textTrackInfo.isFragmented = isFragmented;\n            textTrackInfo.isEmbedded = mediaInfo.isEmbedded ? true : false;\n            textTrackInfo.kind = getKind();\n            textTrackInfo.roles = mediaInfo.roles;\n            textTrackInfo.accessibility = mediaInfo.accessibility;\n            const totalNrTracks = (mediaInfos ? mediaInfos.length : 0) + embeddedTracks.length;\n            textTracks.addTextTrack(textTrackInfo, totalNrTracks);\n        }\n\n        if (mediaType === Constants.FRAGMENTED_TEXT) {\n            if (!initializationSegmentReceived) {\n                initializationSegmentReceived = true;\n                for (i = 0; i < mediaInfos.length; i++) {\n                    createTextTrackFromMediaInfo(null, mediaInfos[i]);\n                }\n                timescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n            } else {\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n                sampleList = samplesInfo.sampleList;\n                if (!firstSubtitleStart && sampleList.length > 0) {\n                    firstSubtitleStart = sampleList[0].cts - chunk.start * timescale;\n                }\n                if (codecType.search(Constants.STPP) >= 0) {\n                    parser = parser !== null ? parser : getParser(codecType);\n                    for (i = 0; i < sampleList.length; i++) {\n                        const sample = sampleList[i];\n                        const sampleStart = sample.cts;\n                        const sampleRelStart = sampleStart - firstSubtitleStart;\n                        this.buffered.add(sampleRelStart / timescale, (sampleRelStart + sample.duration) / timescale);\n                        const dataView = new DataView(bytes, sample.offset, sample.subSizes[0]);\n                        ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n                        const images = [];\n                        let subOffset = sample.offset + sample.subSizes[0];\n                        for (j = 1; j < sample.subSizes.length; j++) {\n                            const inData = new Uint8Array(bytes, subOffset, sample.subSizes[j]);\n                            const raw = String.fromCharCode.apply(null, inData);\n                            images.push(raw);\n                            subOffset += sample.subSizes[j];\n                        }\n                        try {\n                            // Only used for Miscrosoft Smooth Streaming support - caption time is relative to sample time. In this case, we apply an offset.\n                            const manifest = manifestModel.getValue();\n                            const offsetTime = manifest.ttmlTimeIsRelative ? sampleStart / timescale : 0;\n                            result = parser.parse(ccContent, offsetTime, sampleStart / timescale, (sampleStart + sample.duration) / timescale, images);\n                            textTracks.addCaptions(currFragmentedTrackIdx, firstSubtitleStart / timescale, result);\n                        } catch (e) {\n                            fragmentModel.removeExecutedRequestsBeforeTime();\n                            this.remove();\n                            logger.error('TTML parser error: ' + e.message);\n                        }\n                    }\n                } else {\n                    // WebVTT case\n                    const captionArray = [];\n                    for (i = 0 ; i < sampleList.length; i++) {\n                        const sample = sampleList[i];\n                        sample.cts -= firstSubtitleStart;\n                        this.buffered.add(sample.cts / timescale, (sample.cts + sample.duration) / timescale);\n                        const sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\n                        // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\n                        const sampleBoxes = ISOBoxer.parseBuffer(sampleData);\n\n                        for (j = 0 ; j < sampleBoxes.boxes.length; j++) {\n                            const box1 = sampleBoxes.boxes[j];\n                            logger.debug('VTT box1: ' + box1.type);\n                            if (box1.type === 'vtte') {\n                                continue; //Empty box\n                            }\n                            if (box1.type === 'vttc') {\n                                logger.debug('VTT vttc boxes.length = ' + box1.boxes.length);\n                                for (k = 0 ; k < box1.boxes.length; k++) {\n                                    const box2 = box1.boxes[k];\n                                    logger.debug('VTT box2: ' + box2.type);\n                                    if (box2.type === 'payl') {\n                                        const cue_text = box2.cue_text;\n                                        logger.debug('VTT cue_text = ' + cue_text);\n                                        const start_time = sample.cts / timescale;\n                                        const end_time = (sample.cts + sample.duration) / timescale;\n                                        captionArray.push({\n                                            start: start_time,\n                                            end: end_time,\n                                            data: cue_text,\n                                            styles: {}\n                                        });\n                                        logger.debug('VTT ' + start_time + '-' + end_time + ' : ' + cue_text);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (captionArray.length > 0) {\n                        textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\n                    }\n                }\n            }\n        } else if (mediaType === Constants.TEXT) {\n            const dataView = new DataView(bytes, 0, bytes.byteLength);\n            ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n\n            try {\n                result = getParser(codecType).parse(ccContent, 0);\n                for (i = 0; i < mediaInfos.length; i++) {\n                    createTextTrackFromMediaInfo(null, mediaInfos[i]);\n                }\n                textTracks.addCaptions(textTracks.getCurrentTrackIdx(), 0, result);\n            } catch (e) {\n                errHandler.timedTextError(e, 'parse', ccContent);\n            }\n        } else if (mediaType === Constants.VIDEO) { //embedded text\n            if (chunk.segmentType === HTTPRequest.INIT_SEGMENT_TYPE) {\n                if (embeddedTimescale === 0) {\n                    embeddedTimescale = fragmentedTextBoxParser.getMediaTimescaleFromMoov(bytes);\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        createTextTrackFromMediaInfo(null, embeddedTracks[i]);\n                    }\n                }\n            } else { // MediaSegment\n                if (embeddedTimescale === 0) {\n                    logger.warn('CEA-608: No timescale for embeddedTextTrack yet');\n                    return;\n                }\n                const makeCueAdderForIndex = function (self, trackIndex) {\n                    function newCue(startTime, endTime, captionScreen) {\n                        let captionsArray = null;\n                        if (videoModel.getTTMLRenderingDiv()) {\n                            captionsArray = embeddedTextHtmlRender.createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\n                        } else {\n                            const text = captionScreen.getDisplayText();\n                            captionsArray = [{\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: {}\n                            }];\n                        }\n                        if (captionsArray) {\n                            textTracks.addCaptions(trackIndex, 0, captionsArray);\n                        }\n                    }\n                    return newCue;\n                };\n\n                samplesInfo = fragmentedTextBoxParser.getSamplesInfo(bytes);\n\n                const sequenceNumber = samplesInfo.lastSequenceNumber;\n\n                if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\n                    // Time to setup the CEA-608 parsing\n                    let field, handler, trackIdx;\n                    for (i = 0; i < embeddedTracks.length; i++) {\n                        if (embeddedTracks[i].id === Constants.CC1) {\n                            field = 0;\n                            trackIdx = textTracks.getTrackIdxForId(Constants.CC1);\n                        } else if (embeddedTracks[i].id === Constants.CC3) {\n                            field = 1;\n                            trackIdx = textTracks.getTrackIdxForId(Constants.CC3);\n                        }\n                        if (trackIdx === -1) {\n                            logger.warn('CEA-608: data before track is ready.');\n                            return;\n                        }\n                        handler = makeCueAdderForIndex(this, trackIdx);\n                        embeddedCea608FieldParsers[i] = new cea608parser.Cea608Parser(i + 1, {\n                            'newCue': handler\n                        }, null);\n                    }\n                }\n\n                if (embeddedTimescale && embeddedSequenceNumbers.indexOf(sequenceNumber) == -1) {\n                    if (embeddedLastSequenceNumber !== null && sequenceNumber !== embeddedLastSequenceNumber + samplesInfo.numSequences) {\n                        for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\n                            if (embeddedCea608FieldParsers[i]) {\n                                embeddedCea608FieldParsers[i].reset();\n                            }\n                        }\n                    }\n\n                    const allCcData = extractCea608Data(bytes, samplesInfo.sampleList);\n\n                    for (let fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\n                        const ccData = allCcData.fields[fieldNr];\n                        const fieldParser = embeddedCea608FieldParsers[fieldNr];\n                        if (fieldParser) {\n                            for (i = 0; i < ccData.length; i++) {\n                                fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\n                            }\n                        }\n                    }\n                    embeddedLastSequenceNumber = sequenceNumber;\n                    embeddedSequenceNumbers.push(sequenceNumber);\n                }\n            }\n        }\n    }\n    /**\n     * Extract CEA-608 data from a buffer of data.\n     * @param {ArrayBuffer} data\n     * @param {Array} samples cue information\n     * @returns {Object|null} ccData corresponding to one segment.\n     */\n    function extractCea608Data(data, samples) {\n        if (samples.length === 0) {\n            return null;\n        }\n\n        const allCcData = {\n            splits: [],\n            fields: [[], []]\n        };\n        const raw = new DataView(data);\n        for (let i = 0; i < samples.length; i++) {\n            const sample = samples[i];\n            const cea608Ranges = cea608parser.findCea608Nalus(raw, sample.offset, sample.size);\n            let lastSampleTime = null;\n            let idx = 0;\n            for (let j = 0; j < cea608Ranges.length; j++) {\n                const ccData = cea608parser.extractCea608DataFromRange(raw, cea608Ranges[j]);\n                for (let k = 0; k < 2; k++) {\n                    if (ccData[k].length > 0) {\n                        if (sample.cts !== lastSampleTime) {\n                            idx = 0;\n                        } else {\n                            idx += 1;\n                        }\n                        allCcData.fields[k].push([sample.cts + (mseTimeOffset * embeddedTimescale), ccData[k], idx]);\n                        lastSampleTime = sample.cts;\n                    }\n                }\n            }\n        }\n\n        // Sort by sampleTime ascending order\n        // If two packets have the same sampleTime, use them in the order\n        // they were received\n        allCcData.fields.forEach(function sortField(field) {\n            field.sort(function (a, b) {\n                if (a[0] === b[0]) {\n                    return a[2] - b[2];\n                }\n                return a[0] - b[0];\n            });\n        });\n\n        return allCcData;\n    }\n\n    function getIsDefault(mediaInfo) {\n        //TODO How to tag default. currently same order as listed in manifest.\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\n        let isDefault = false;\n        if (embeddedTracks.length > 1 && mediaInfo.isEmbedded) {\n            isDefault = (mediaInfo.id && mediaInfo.id === Constants.CC1); // CC1 if both CC1 and CC3 exist\n        } else if (embeddedTracks.length === 1) {\n            if (mediaInfo.id && mediaInfo.id.substring(0, 2) === 'CC') { // Either CC1 or CC3\n                isDefault = true;\n            }\n        } else if (embeddedTracks.length === 0) {\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\n        }\n        return isDefault;\n    }\n\n    function getParser(codecType) {\n        let parser;\n        if (codecType.search(Constants.VTT) >= 0) {\n            parser = vttParser;\n        } else if (codecType.search(Constants.TTML) >= 0 || codecType.search(Constants.STPP) >= 0) {\n            parser = ttmlParser;\n        }\n        return parser;\n    }\n\n    function remove(start, end) {\n        //if start and end are not defined, remove all\n        if ((start === undefined) && (start === end)) {\n            start = this.buffered.start(0);\n            end = this.buffered.end(this.buffered.length - 1);\n        }\n        this.buffered.remove(start, end);\n    }\n\n    instance = {\n        initialize: initialize,\n        append: append,\n        abort: abort,\n        addEmbeddedTrack: addEmbeddedTrack,\n        resetEmbedded: resetEmbedded,\n        setConfig: setConfig,\n        getConfig: getConfig,\n        setCurrentFragmentedTrackIdx: setCurrentFragmentedTrackIdx,\n        remove: remove,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\nexport default FactoryMaker.getSingletonFactory(TextSourceBuffer);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport { renderHTML } from 'imsc';\n\nfunction TextTracks() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        Cue,\n        videoModel,\n        textTrackQueue,\n        trackElementArr,\n        currentTrackIdx,\n        actualVideoLeft,\n        actualVideoTop,\n        actualVideoWidth,\n        actualVideoHeight,\n        captionContainer,\n        videoSizeCheckInterval,\n        isChrome,\n        fullscreenAttribute,\n        displayCCOnTop,\n        previousISDState,\n        topZIndex;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n            return;\n        }\n\n        Cue = window.VTTCue || window.TextTrackCue;\n        textTrackQueue = [];\n        trackElementArr = [];\n        currentTrackIdx = -1;\n        actualVideoLeft = 0;\n        actualVideoTop = 0;\n        actualVideoWidth = 0;\n        actualVideoHeight = 0;\n        captionContainer = null;\n        videoSizeCheckInterval = null;\n        displayCCOnTop = false;\n        topZIndex = 2147483647;\n        previousISDState = null;\n\n        //TODO Check if IE has resolved issues: Then revert to not using the addTextTrack API for all browsers.\n        // https://connect.microsoft.com/IE/feedbackdetail/view/1660701/text-tracks-do-not-fire-change-addtrack-or-removetrack-events\n        // https://connect.microsoft.com/IE/feedback/details/1573380/htmltrackelement-track-addcue-throws-invalidstateerror-when-adding-new-cue\n        // Same issue with Firefox.\n        //isIE11orEdge = !!navigator.userAgent.match(/Trident.*rv[ :]*11\\./) || navigator.userAgent.match(/Edge/);\n        //isFirefox = !!navigator.userAgent.match(/Firefox/);\n        isChrome = !!navigator.userAgent.match(/Chrome/) && !navigator.userAgent.match(/Edge/);\n        if (document.fullscreenElement !== undefined) {\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n        } else if (document.webkitIsFullScreen !== undefined) {\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n        } else if (document.msFullscreenElement) { // IE11\n            fullscreenAttribute = 'msFullscreenElement';\n        } else if (document.mozFullScreen) { // Firefox\n            fullscreenAttribute = 'mozFullScreen';\n        }\n\n    }\n\n    function createTrackForUserAgent (i) {\n        const kind = textTrackQueue[i].kind;\n        const label = textTrackQueue[i].label !== undefined ? textTrackQueue[i].label : textTrackQueue[i].lang;\n        const lang = textTrackQueue[i].lang;\n        const isTTML = textTrackQueue[i].isTTML;\n        const isEmbedded = textTrackQueue[i].isEmbedded;\n        const track = videoModel.addTextTrack(kind, label, lang);\n\n        track.isEmbedded = isEmbedded;\n        track.isTTML = isTTML;\n\n        return track;\n    }\n\n    function displayCConTop(value) {\n        displayCCOnTop = value;\n        if (!captionContainer || document[fullscreenAttribute]) {\n            return;\n        }\n        captionContainer.style.zIndex = value ? topZIndex : null;\n    }\n\n    function addTextTrack(textTrackInfoVO, totalTextTracks) {\n        if (textTrackQueue.length === totalTextTracks) {\n            logger.error('Trying to add too many tracks.');\n            return;\n        }\n\n        textTrackQueue.push(textTrackInfoVO);\n\n        if (textTrackQueue.length === totalTextTracks) {\n            textTrackQueue.sort(function (a, b) { //Sort in same order as in manifest\n                return a.index - b.index;\n            });\n            captionContainer = videoModel.getTTMLRenderingDiv();\n            let defaultIndex = -1;\n            for (let i = 0 ; i < textTrackQueue.length; i++) {\n                const track = createTrackForUserAgent.call(this, i);\n                trackElementArr.push(track); //used to remove tracks from video element when added manually\n\n                if (textTrackQueue[i].defaultTrack) {\n                    // track.default is an object property identifier that is a reserved word\n                    // The following jshint directive is used to suppressed the warning \"Expected an identifier and instead saw 'default' (a reserved word)\"\n                    /*jshint -W024 */\n                    track.default = true;\n                    defaultIndex = i;\n                }\n\n                const textTrack = getTrackByIdx(i);\n                if (textTrack) {\n                    //each time a track is created, its mode should be showing by default\n                    //sometime, it's not on Chrome\n                    textTrack.mode = Constants.TEXT_SHOWING;\n                    if (captionContainer && (textTrackQueue[i].isTTML || textTrackQueue[i].isEmbedded)) {\n                        textTrack.renderingType = 'html';\n                    } else {\n                        textTrack.renderingType = 'default';\n                    }\n                }\n                this.addCaptions(i, 0, textTrackQueue[i].captionData);\n                eventBus.trigger(Events.TEXT_TRACK_ADDED);\n            }\n\n            //set current track index in textTrackQueue array\n            setCurrentTrackIdx.call(this, defaultIndex);\n\n            if (defaultIndex >= 0) {\n                for (let idx = 0; idx < textTrackQueue.length; idx++) {\n                    const videoTextTrack = getTrackByIdx(idx);\n                    if (videoTextTrack) {\n                        videoTextTrack.mode = (idx === defaultIndex) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                    }\n                }\n            }\n\n            eventBus.trigger(Events.TEXT_TRACKS_QUEUE_INITIALIZED, {\n                index: currentTrackIdx,\n                tracks: textTrackQueue\n            }); //send default idx.\n        }\n    }\n\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n        const viewAspectRatio = viewWidth / viewHeight;\n        const videoAspectRatio = videoWidth / videoHeight;\n\n        let videoPictureWidth = 0;\n        let videoPictureHeight = 0;\n\n        if (viewAspectRatio > videoAspectRatio) {\n            videoPictureHeight = viewHeight;\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\n        } else {\n            videoPictureWidth = viewWidth;\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\n        }\n\n        let videoPictureXAspect = 0;\n        let videoPictureYAspect = 0;\n        let videoPictureWidthAspect = 0;\n        let videoPictureHeightAspect = 0;\n        const videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n        if (videoPictureAspect > aspectRatio) {\n            videoPictureHeightAspect = videoPictureHeight;\n            videoPictureWidthAspect = videoPictureHeight * aspectRatio;\n        } else {\n            videoPictureWidthAspect = videoPictureWidth;\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n        }\n        videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n        videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n\n        if (use80Percent) {\n            return {\n                x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\n                y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\n                w: videoPictureWidthAspect * 0.8,\n                h: videoPictureHeightAspect * 0.8\n            }; /* Maximal picture size in videos aspect ratio */\n        } else {\n            return {\n                x: videoPictureXAspect,\n                y: videoPictureYAspect,\n                w: videoPictureWidthAspect,\n                h: videoPictureHeightAspect\n            }; /* Maximal picture size in videos aspect ratio */\n        }\n    }\n\n    function checkVideoSize(track, forceDrawing) {\n        const clientWidth = videoModel.getClientWidth();\n        const clientHeight = videoModel.getClientHeight();\n        const videoWidth = videoModel.getVideoWidth();\n        const videoHeight = videoModel.getVideoHeight();\n        const videoOffsetTop = videoModel.getVideoRelativeOffsetTop();\n        const videoOffsetLeft = videoModel.getVideoRelativeOffsetLeft();\n        let aspectRatio =  videoWidth / videoHeight;\n        let use80Percent = false;\n        if (track.isFromCEA608) {\n            // If this is CEA608 then use predefined aspect ratio\n            aspectRatio = 3.5 / 3.0;\n            use80Percent = true;\n        }\n\n        const realVideoSize = getVideoVisibleVideoSize.call(this, clientWidth, clientHeight, videoWidth, videoHeight, aspectRatio, use80Percent);\n\n        const newVideoWidth = realVideoSize.w;\n        const newVideoHeight = realVideoSize.h;\n        const newVideoLeft = realVideoSize.x;\n        const newVideoTop = realVideoSize.y;\n\n        if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight || newVideoLeft != actualVideoLeft || newVideoTop != actualVideoTop || forceDrawing) {\n            actualVideoLeft = newVideoLeft + videoOffsetLeft;\n            actualVideoTop = newVideoTop + videoOffsetTop;\n            actualVideoWidth = newVideoWidth;\n            actualVideoHeight = newVideoHeight;\n\n            if (captionContainer) {\n                captionContainer.style.left = actualVideoLeft + 'px';\n                captionContainer.style.top = actualVideoTop + 'px';\n                captionContainer.style.width = actualVideoWidth + 'px';\n                captionContainer.style.height = actualVideoHeight + 'px';\n            }\n\n            // Video view has changed size, so resize any active cues\n            for (let i = 0; track.activeCues && i < track.activeCues.length; ++i) {\n                const cue = track.activeCues[i];\n                cue.scaleCue(cue);\n            }\n\n            if (captionContainer) {\n                if ((fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop) {\n                    captionContainer.style.zIndex = topZIndex;\n                } else {\n                    captionContainer.style.zIndex = null;\n                }\n            }\n        }\n    }\n\n    function scaleCue(activeCue) {\n        const videoWidth = actualVideoWidth;\n        const videoHeight = actualVideoHeight;\n        let key,\n            replaceValue,\n            valueFontSize,\n            valueLineHeight,\n            elements;\n\n        if (activeCue.cellResolution) {\n            const cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n            if (activeCue.linePadding) {\n                for (key in activeCue.linePadding) {\n                    if (activeCue.linePadding.hasOwnProperty(key)) {\n                        const valueLinePadding = activeCue.linePadding[key];\n                        replaceValue = (valueLinePadding * cellUnit[0]).toString();\n                        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n                        const elementsSpan = document.getElementsByClassName('spanPadding');\n                        for (let i = 0; i < elementsSpan.length; i++) {\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n            }\n\n            if (activeCue.fontSize) {\n                for (key in activeCue.fontSize) {\n                    if (activeCue.fontSize.hasOwnProperty(key)) {\n                        if (activeCue.fontSize[key][0] === '%') {\n                            valueFontSize = activeCue.fontSize[key][1] / 100;\n                        } else if (activeCue.fontSize[key][0] === 'c') {\n                            valueFontSize = activeCue.fontSize[key][1];\n                        }\n\n                        replaceValue = (valueFontSize * cellUnit[1]).toString();\n\n                        if (key !== 'defaultFontSize') {\n                            elements = document.getElementsByClassName(key);\n                        } else {\n                            elements = document.getElementsByClassName('paragraph');\n                        }\n\n                        for (let j = 0; j < elements.length; j++) {\n                            elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n\n                if (activeCue.lineHeight) {\n                    for (key in activeCue.lineHeight) {\n                        if (activeCue.lineHeight.hasOwnProperty(key)) {\n                            if (activeCue.lineHeight[key][0] === '%') {\n                                valueLineHeight = activeCue.lineHeight[key][1] / 100;\n                            } else if (activeCue.fontSize[key][0] === 'c') {\n                                valueLineHeight = activeCue.lineHeight[key][1];\n                            }\n\n                            replaceValue = (valueLineHeight * cellUnit[1]).toString();\n                            elements = document.getElementsByClassName(key);\n                            for (let k = 0; k < elements.length; k++) {\n                                elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (activeCue.isd) {\n            let htmlCaptionDiv = document.getElementById(activeCue.cueID);\n            if (htmlCaptionDiv) {\n                captionContainer.removeChild(htmlCaptionDiv);\n            }\n            renderCaption(activeCue);\n        }\n    }\n\n    function renderCaption(cue) {\n        if (captionContainer) {\n            const finalCue = document.createElement('div');\n            captionContainer.appendChild(finalCue);\n            previousISDState = renderHTML(cue.isd, finalCue, function (uri) {\n                const imsc1ImgUrnTester = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;\n                const smpteImgUrnTester = /^#(.*)$/;\n                if (imsc1ImgUrnTester.test(uri)) {\n                    const match = imsc1ImgUrnTester.exec(uri);\n                    const imageId = parseInt(match[4], 10) - 1;\n                    const imageData = btoa(cue.images[imageId]);\n                    const dataUrl = 'data:image/png;base64,' + imageData;\n                    return dataUrl;\n                } else if (smpteImgUrnTester.test(uri)) {\n                    const match = smpteImgUrnTester.exec(uri);\n                    const imageId = match[1];\n                    const dataUrl = 'data:image/png;base64,' + cue.embeddedImages[imageId];\n                    return dataUrl;\n                } else {\n                    return null;\n                }\n            }, captionContainer.clientHeight, captionContainer.clientWidth, false/*displayForcedOnlyMode*/, function (err) {\n                logger.info('renderCaption :', err);\n                //TODO add ErrorHandler management\n            }, previousISDState, true /*enableRollUp*/);\n            finalCue.id = cue.cueID;\n        }\n    }\n\n    /*\n     * Add captions to track, store for later adding, or add captions added before\n     */\n    function addCaptions(trackIdx, timeOffset, captionData) {\n        const track = getTrackByIdx(trackIdx);\n        const self = this;\n\n        if (!track) {\n            return;\n        }\n\n        if (!captionData || captionData.length === 0) {\n            return;\n        }\n\n        for (let item = 0; item < captionData.length; item++) {\n            let cue;\n            const currentItem = captionData[item];\n\n            track.cellResolution = currentItem.cellResolution;\n            track.isFromCEA608 = currentItem.isFromCEA608;\n\n            if (currentItem.type === 'html' && captionContainer) {\n                cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, '');\n                cue.cueHTMLElement = currentItem.cueHTMLElement;\n                cue.isd = currentItem.isd;\n                cue.images = currentItem.images;\n                cue.embeddedImages = currentItem.embeddedImages;\n                cue.cueID = currentItem.cueID;\n                cue.scaleCue = scaleCue.bind(self);\n                //useful parameters for cea608 subtitles, not for TTML one.\n                cue.cellResolution = currentItem.cellResolution;\n                cue.lineHeight = currentItem.lineHeight;\n                cue.linePadding = currentItem.linePadding;\n                cue.fontSize = currentItem.fontSize;\n\n                captionContainer.style.left = actualVideoLeft + 'px';\n                captionContainer.style.top = actualVideoTop + 'px';\n                captionContainer.style.width = actualVideoWidth + 'px';\n                captionContainer.style.height = actualVideoHeight + 'px';\n\n                cue.onenter = function () {\n                    if (track.mode === Constants.TEXT_SHOWING) {\n                        if (this.isd) {\n                            renderCaption(this);\n                            logger.debug('Cue enter id:' + this.cueID);\n                        } else {\n                            captionContainer.appendChild(this.cueHTMLElement);\n                            scaleCue.call(self, this);\n                        }\n                    }\n                };\n\n                cue.onexit = function () {\n                    if (captionContainer) {\n                        const divs = captionContainer.childNodes;\n                        for (let i = 0; i < divs.length; ++i) {\n                            if (divs[i].id === this.cueID) {\n                                logger.debug('Cue exit id:' + divs[i].id);\n                                captionContainer.removeChild(divs[i]);\n                            }\n                        }\n                    }\n                };\n            } else {\n                if (currentItem.data) {\n                    cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n                    if (currentItem.styles) {\n                        if (currentItem.styles.align !== undefined && 'align' in cue) {\n                            cue.align = currentItem.styles.align;\n                        }\n                        if (currentItem.styles.line !== undefined && 'line' in cue) {\n                            cue.line = currentItem.styles.line;\n                        }\n                        if (currentItem.styles.position !== undefined && 'position' in cue) {\n                            cue.position = currentItem.styles.position;\n                        }\n                        if (currentItem.styles.size !== undefined && 'size' in cue) {\n                            cue.size = currentItem.styles.size;\n                        }\n                    }\n                }\n            }\n            try {\n                if (cue) {\n                    track.addCue(cue);\n                } else {\n                    logger.error('impossible to display subtitles.');\n                }\n            } catch (e) {\n                // Edge crash, delete everything and start adding again\n                // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/\n                deleteTrackCues(track);\n                track.addCue(cue);\n                throw e;\n            }\n        }\n    }\n\n    function getTrackByIdx(idx) {\n        return idx >= 0 && textTrackQueue[idx] ?\n            videoModel.getTextTrack(textTrackQueue[idx].kind, textTrackQueue[idx].label, textTrackQueue[idx].lang, textTrackQueue[idx].isTTML, textTrackQueue[idx].isEmbedded) : null;\n    }\n\n    function getCurrentTrackIdx() {\n        return currentTrackIdx;\n    }\n\n    function getTrackIdxForId(trackId) {\n        let idx = -1;\n        for (let i = 0; i < textTrackQueue.length; i++) {\n            if (textTrackQueue[i].label === trackId) {\n                idx = i;\n                break;\n            }\n        }\n\n        return idx;\n    }\n\n    function setCurrentTrackIdx(idx) {\n        if (idx === currentTrackIdx) {\n            return;\n        }\n        currentTrackIdx = idx;\n        const track = getTrackByIdx(currentTrackIdx);\n        setCueStyleOnTrack.call(this, track);\n\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n\n        if (track && track.renderingType === 'html') {\n            checkVideoSize.call(this, track, true);\n            videoSizeCheckInterval = setInterval(checkVideoSize.bind(this, track), 500);\n        }\n    }\n\n    function setCueStyleOnTrack(track) {\n        clearCaptionContainer.call(this);\n        if (track) {\n            if (track.renderingType === 'html') {\n                setNativeCueStyle.call(this);\n            } else {\n                removeNativeCueStyle.call(this);\n            }\n        } else {\n            removeNativeCueStyle.call(this);\n        }\n    }\n\n    function deleteTrackCues(track) {\n        if (track.cues) {\n            const cues = track.cues;\n            const lastIdx = cues.length - 1;\n\n            for (let r = lastIdx; r >= 0 ; r--) {\n                track.removeCue(cues[r]);\n            }\n        }\n    }\n\n    function deleteCuesFromTrackIdx(trackIdx) {\n        const track = getTrackByIdx(trackIdx);\n        if (track) {\n            deleteTrackCues(track);\n        }\n    }\n\n    function deleteAllTextTracks() {\n        const ln = trackElementArr ? trackElementArr.length : 0;\n        for (let i = 0; i < ln; i++) {\n            const track = getTrackByIdx(i);\n            if (track) {\n                deleteTrackCues.call(this, track);\n                track.mode = 'disabled';\n            }\n        }\n        trackElementArr = [];\n        textTrackQueue = [];\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n        currentTrackIdx = -1;\n        clearCaptionContainer.call(this);\n    }\n\n    function deleteTextTrack(idx) {\n        videoModel.removeChild(trackElementArr[idx]);\n        trackElementArr.splice(idx, 1);\n    }\n\n    /* Set native cue style to transparent background to avoid it being displayed. */\n    function setNativeCueStyle() {\n        if (!isChrome) {\n            return;\n        }\n        let styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            return; //Already set\n        }\n\n        styleElement = document.createElement('style');\n        styleElement.id = 'native-cue-style';\n        document.head.appendChild(styleElement);\n        const stylesheet = styleElement.sheet;\n        const video = videoModel.getElement();\n        if (video) {\n            if (video.id) {\n                stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n            } else if (video.classList.length !== 0) {\n                stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n            } else {\n                stylesheet.insertRule('video::cue {background: transparent}', 0);\n            }\n        }\n    }\n\n    /* Remove the extra cue style with transparent background for native cues. */\n    function removeNativeCueStyle() {\n        if (!isChrome) {\n            return;\n        }\n        const styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            document.head.removeChild(styleElement);\n        }\n    }\n\n    function clearCaptionContainer() {\n        if (captionContainer) {\n            while (captionContainer.firstChild) {\n                captionContainer.removeChild(captionContainer.firstChild);\n            }\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function setModeForTrackIdx(idx, mode) {\n        const track = getTrackByIdx(idx);\n        if (track && track.mode !== mode) {\n            track.mode = mode;\n        }\n    }\n\n    function getCurrentTrackInfo() {\n        return textTrackQueue[currentTrackIdx];\n    }\n\n    instance = {\n        initialize: initialize,\n        displayCConTop: displayCConTop,\n        addTextTrack: addTextTrack,\n        addCaptions: addCaptions,\n        getCurrentTrackIdx: getCurrentTrackIdx,\n        setCurrentTrackIdx: setCurrentTrackIdx,\n        getTrackIdxForId: getTrackIdxForId,\n        getCurrentTrackInfo: getCurrentTrackInfo,\n        setModeForTrackIdx: setModeForTrackIdx,\n        deleteCuesFromTrackIdx: deleteCuesFromTrackIdx,\n        deleteAllTextTracks: deleteAllTextTracks,\n        deleteTextTrack: deleteTextTrack,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexport default FactoryMaker.getSingletonFactory(TextTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\nimport Thumbnail from '../vo/Thumbnail';\nimport ThumbnailTracks from './ThumbnailTracks';\nimport BitrateInfo from '../vo/BitrateInfo';\nimport {replaceTokenForTemplate, unescapeDollarsInTemplate} from '../../dash/utils/SegmentsUtils';\n\nfunction ThumbnailController(config) {\n\n    const context = this.context;\n\n    let instance;\n    let thumbnailTracks;\n\n    function setup() {\n        reset();\n        thumbnailTracks = ThumbnailTracks(context).create({\n            dashManifestModel: config.dashManifestModel,\n            adapter: config.adapter,\n            baseURLController: config.baseURLController,\n            stream: config.stream\n        });\n    }\n\n    function getThumbnail(time) {\n        const track = thumbnailTracks.getCurrentTrack();\n        if (!track || track.segmentDuration <= 0) {\n            return null;\n        }\n\n        // Calculate index of the sprite given a time\n        const seq = Math.floor(time / track.segmentDuration);\n        const offset = time % track.segmentDuration;\n        const thumbIndex = Math.floor((offset * track.tilesHor * track.tilesVert) / track.segmentDuration);\n        // Create and return the thumbnail\n        const thumbnail = new Thumbnail();\n        thumbnail.url = buildUrlFromTemplate(track, seq);\n        thumbnail.width = Math.floor(track.widthPerTile);\n        thumbnail.height = Math.floor(track.heightPerTile);\n        thumbnail.x = Math.floor(thumbIndex % track.tilesHor) * track.widthPerTile;\n        thumbnail.y = Math.floor(thumbIndex / track.tilesHor) * track.heightPerTile;\n\n        return thumbnail;\n    }\n\n    function buildUrlFromTemplate(track, seq) {\n        const seqIdx = seq + track.startNumber;\n        let url = replaceTokenForTemplate(track.templateUrl, 'Number', seqIdx);\n        url = replaceTokenForTemplate(url, 'Time', (seqIdx - 1) * track.segmentDuration);\n        url = replaceTokenForTemplate(url, 'Bandwidth', track.bandwidth);\n        return unescapeDollarsInTemplate(url);\n    }\n\n    function setTrackByIndex(index) {\n        thumbnailTracks.setTrackByIndex(index);\n    }\n\n    function getCurrentTrackIndex() {\n        return thumbnailTracks.getCurrentTrackIndex();\n    }\n\n    function getBitrateList() {\n        const tracks = thumbnailTracks.getTracks();\n        if (!tracks || tracks.length === 0) {\n            return [];\n        }\n\n        let i = 0;\n        return tracks.map((t) => {\n            const bitrateInfo = new BitrateInfo();\n            bitrateInfo.mediaType = Constants.IMAGE;\n            bitrateInfo.qualityIndex = i++;\n            bitrateInfo.bitrate = t.bitrate;\n            bitrateInfo.width = t.width;\n            bitrateInfo.height = t.height;\n            return bitrateInfo;\n        });\n    }\n\n    function reset() {\n        if (thumbnailTracks) {\n            thumbnailTracks.reset();\n        }\n    }\n\n    instance = {\n        get: getThumbnail,\n        setTrackByIndex: setTrackByIndex,\n        getCurrentTrackIndex: getCurrentTrackIndex,\n        getBitrateList: getBitrateList,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailController.__dashjs_factory_name = 'ThumbnailController';\nexport default FactoryMaker.getClassFactory(ThumbnailController);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport DashConstants from '../../dash/constants/DashConstants';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ThumbnailTrackInfo from '../vo/ThumbnailTrackInfo';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport {replaceIDForTemplate} from '../../dash/utils/SegmentsUtils';\n\nconst THUMBNAILS_SCHEME_ID_URI = 'http://dashif.org/thumbnail_tile';\n\nfunction ThumbnailTracks(config) {\n\n    const context = this.context;\n    const dashManifestModel = config.dashManifestModel;\n    const adapter = config.adapter;\n    const baseURLController = config.baseURLController;\n    const stream = config.stream;\n    const urlUtils = URLUtils(context).getInstance();\n    let instance,\n        tracks,\n        currentTrackIndex;\n\n    function initialize() {\n        reset();\n\n        // parse representation and create tracks\n        addTracks();\n    }\n\n    function addTracks() {\n        if (!stream || !dashManifestModel || !adapter) {\n            return;\n        }\n\n        const streamInfo = stream ? stream.getStreamInfo() : null;\n        if (!streamInfo) {\n            return;\n        }\n\n        // Extract thumbnail tracks\n        const mediaInfo = adapter.getMediaInfoForType(streamInfo, Constants.IMAGE);\n        if (!mediaInfo) {\n            return;\n        }\n\n        const voAdaptation = adapter.getDataForMedia(mediaInfo);\n        if (!voAdaptation) {\n            return;\n        }\n\n        const voReps = dashManifestModel.getRepresentationsForAdaptation(voAdaptation);\n        if (voReps && voReps.length > 0) {\n            voReps.forEach((rep) => {\n                if (rep.segmentInfoType === DashConstants.SEGMENT_TEMPLATE && rep.segmentDuration > 0 && rep.media)\n                createTrack(rep);\n            });\n        }\n\n        if (tracks.length > 0) {\n            // Sort bitrates and select the lowest bitrate rendition\n            tracks.sort((a, b) => a.bitrate - b.bitrate);\n            currentTrackIndex = tracks.length - 1;\n        }\n    }\n\n    function createTrack(representation) {\n        const track = new ThumbnailTrackInfo();\n        track.id = representation.id;\n        track.bitrate = representation.bandwidth;\n        track.width = representation.width;\n        track.height = representation.height;\n        track.tilesHor = 1;\n        track.tilesVert = 1;\n        track.startNumber = representation.startNumber;\n        track.segmentDuration = representation.segmentDuration;\n        track.timescale = representation.timescale;\n        track.templateUrl = buildTemplateUrl(representation);\n\n        if (representation.essentialProperties) {\n            representation.essentialProperties.forEach((p) => {\n                if (p.schemeIdUri === THUMBNAILS_SCHEME_ID_URI && p.value) {\n                    const vars = p.value.split('x');\n                    if (vars.length === 2 && !isNaN(vars[0]) && !isNaN(vars[1])) {\n                        track.tilesHor = parseInt(vars[0], 10);\n                        track.tilesVert = parseInt(vars[1], 10);\n                    }\n                }\n            });\n        }\n        if (track.tilesHor > 0 && track.tilesVert > 0) {\n            // Precalculate width and heigth per tile for perf reasons\n            track.widthPerTile = track.width / track.tilesHor;\n            track.heightPerTile = track.height / track.tilesVert;\n            tracks.push(track);\n        }\n    }\n\n    function buildTemplateUrl(representation) {\n        const templateUrl = urlUtils.isRelative(representation.media) ?\n            urlUtils.resolve(representation.media, baseURLController.resolve(representation.path).url) : representation.media;\n\n        if (!templateUrl) {\n            return '';\n        }\n\n        return replaceIDForTemplate(templateUrl, representation.id);\n    }\n\n    function getTracks() {\n        return tracks;\n    }\n\n    function getCurrentTrackIndex() {\n        return currentTrackIndex;\n    }\n\n    function getCurrentTrack() {\n        if (currentTrackIndex < 0) {\n            return null;\n        }\n        return tracks[currentTrackIndex];\n    }\n\n    function setTrackByIndex(index) {\n        if (!tracks || tracks.length === 0) {\n            return;\n        }\n        // select highest bitrate in case selected index is higher than bitrate list length\n        if (index >= tracks.length) {\n            index = tracks.length - 1;\n        }\n        currentTrackIndex = index;\n    }\n\n    function reset() {\n        tracks = [];\n        currentTrackIndex = -1;\n    }\n\n    instance = {\n        initialize: initialize,\n        getTracks: getTracks,\n        reset: reset,\n        setTrackByIndex: setTrackByIndex,\n        getCurrentTrack: getCurrentTrack,\n        getCurrentTrackIndex: getCurrentTrackIndex\n    };\n\n    initialize();\n\n    return instance;\n}\n\nThumbnailTracks.__dashjs_factory_name = 'ThumbnailTracks';\nexport default FactoryMaker.getClassFactory(ThumbnailTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport BlacklistController from '../controllers/BlacklistController';\nimport DVBSelector from './baseUrlResolution/DVBSelector';\nimport BasicSelector from './baseUrlResolution/BasicSelector';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 1;\nconst URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n\nfunction BaseURLSelector() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let dashManifestModel;\n\n    let instance,\n        serviceLocationBlacklistController,\n        basicSelector,\n        dvbSelector,\n        selector;\n\n    function setup() {\n        serviceLocationBlacklistController = BlacklistController(context).create({\n            updateEventName:        Events.SERVICE_LOCATION_BLACKLIST_CHANGED,\n            addBlacklistEventName:    Events.SERVICE_LOCATION_BLACKLIST_ADD\n        });\n\n        basicSelector = BasicSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        dvbSelector = DVBSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        selector = basicSelector;\n    }\n\n    function setConfig(config) {\n        if (config.selector) {\n            selector = config.selector;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n    }\n\n    function checkConfig() {\n        if (!dashManifestModel || !dashManifestModel.hasOwnProperty('getIsDVB')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function chooseSelectorFromManifest(manifest) {\n        checkConfig();\n        if (dashManifestModel.getIsDVB(manifest)) {\n            selector = dvbSelector;\n        } else {\n            selector = basicSelector;\n        }\n    }\n\n    function select(data) {\n        const baseUrls = data.baseUrls;\n        const selectedIdx = data.selectedIdx;\n\n        // Once a random selection has been carried out amongst a group of BaseURLs with the same\n        // @priority attribute value, then that choice should be re-used if the selection needs to be made again\n        // unless the blacklist has been modified or the available BaseURLs have changed.\n        if (!isNaN(selectedIdx)) {\n            return baseUrls[selectedIdx];\n        }\n\n        let selectedBaseUrl = selector.select(baseUrls);\n\n        if (!selectedBaseUrl) {\n            eventBus.trigger(\n                Events.URL_RESOLUTION_FAILED, {\n                    error: new Error(\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,\n                        URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE\n                    )\n                }\n            );\n            if (selector === basicSelector) {\n                reset();\n            }\n            return;\n        }\n\n        data.selectedIdx = baseUrls.indexOf(selectedBaseUrl);\n\n        return selectedBaseUrl;\n    }\n\n    function reset() {\n        serviceLocationBlacklistController.reset();\n    }\n\n    instance = {\n        chooseSelectorFromManifest: chooseSelectorFromManifest,\n        select: select,\n        reset: reset,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLSelector.__dashjs_factory_name = 'BaseURLSelector';\nconst factory = FactoryMaker.getClassFactory(BaseURLSelector);\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE;\nfactory.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE;\nFactoryMaker.updateClassFactory(BaseURLSelector.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoFile from './IsoFile';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\n\nimport IsoBoxSearchInfo from '../vo/IsoBoxSearchInfo';\n\nfunction BoxParser(/*config*/) {\n\n    let instance;\n    let context = this.context;\n\n    /**\n     * @param {ArrayBuffer} data\n     * @returns {IsoFile|null}\n     * @memberof BoxParser#\n     */\n    function parse(data) {\n        if (!data) return null;\n\n        if (data.fileStart === undefined) {\n            data.fileStart = 0;\n        }\n\n        let parsedFile = ISOBoxer.parseBuffer(data);\n        let dashIsoFile = IsoFile(context).create();\n\n        dashIsoFile.setData(parsedFile);\n\n        return dashIsoFile;\n    }\n\n    /**\n     * From the list of type boxes to look for, returns the latest one that is fully completed (header + payload). This\n     * method only looks into the list of top boxes and doesn't analyze nested boxes.\n     * @param {string[]} types\n     * @param {ArrayBuffer|uint8Array} buffer\n     * @param {number} offset\n     * @returns {IsoBoxSearchInfo}\n     * @memberof BoxParser#\n     */\n    function findLastTopIsoBoxCompleted(types, buffer, offset) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n\n        // 8 = size (uint32) + type (4 characters)\n        if (!buffer || offset + 8 >= buffer.byteLength) {\n            return new IsoBoxSearchInfo(0, false);\n        }\n\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\n        let boxInfo;\n        let lastCompletedOffset = 0;\n        while (offset < data.byteLength) {\n            const boxSize = parseUint32(data, offset);\n            const boxType = parseIsoBoxType(data, offset + 4);\n\n            if (boxSize === 0) {\n                break;\n            }\n\n            if (offset + boxSize <= data.byteLength) {\n                if (types.indexOf(boxType) >= 0) {\n                    boxInfo = new IsoBoxSearchInfo(offset, true, boxSize);\n                } else {\n                    lastCompletedOffset = offset + boxSize;\n                }\n            }\n\n            offset += boxSize;\n        }\n\n        if (!boxInfo) {\n            return new IsoBoxSearchInfo(lastCompletedOffset, false);\n        }\n\n        return boxInfo;\n    }\n\n    function parseUint32(data, offset) {\n        return data[offset + 3] >>> 0 |\n            (data[offset + 2] << 8) >>> 0 |\n            (data[offset + 1] << 16) >>> 0 |\n            (data[offset] << 24) >>> 0;\n    }\n\n    function parseIsoBoxType(data, offset) {\n        return String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset]);\n    }\n\n    instance = {\n        parse: parse,\n        findLastTopIsoBoxCompleted: findLastTopIsoBoxCompleted\n    };\n\n    return instance;\n}\nBoxParser.__dashjs_factory_name = 'BoxParser';\nexport default FactoryMaker.getSingletonFactory(BoxParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    function supportsMediaSource() {\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        return (hasWebKit || hasMediaSource);\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    instance = {\n        supportsMediaSource: supportsMediaSource,\n        supportsEncryptedMedia: supportsEncryptedMedia,\n        supportsCodec: supportsCodec,\n        setEncryptedMediaSupported: setEncryptedMediaSupported\n    };\n\n    setup();\n\n    return instance;\n}\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);","/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        let i = 0;\n\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++);\n\n        this.customTimeRangeArray.splice(i, 0, {start: start,end: end});\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i,i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (let i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i,1);\n                i--;\n\n            } else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, {start: end,end: this.customTimeRangeArray[i].end});\n                this.customTimeRangeArray[i].end = start;\n                break;\n            } else if ( start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            } else if ( end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        let range1 = this.customTimeRangeArray[rangeIndex1];\n        let range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <=  range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1,1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2,1);\n            return true;\n        }\n        return false;\n    }\n\n    function checkIndex(index) {\n        const isInt = index !== null && !isNaN(index) && (index % 1 === 0);\n\n        if (!isInt) {\n            throw new Error('index argument is not an integer');\n        }\n    }\n\n    function start(index) {\n        checkIndex(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        checkIndex(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst legacyKeysAndReplacements = [\n    { oldKey: 'dashjs_vbitrate',  newKey: 'dashjs_video_bitrate' },\n    { oldKey: 'dashjs_abitrate',  newKey: 'dashjs_audio_bitrate' },\n    { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },\n    { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' }\n];\n\nconst LOCAL_STORAGE_BITRATE_KEY_TEMPLATE = 'dashjs_?_bitrate';\nconst LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE = 'dashjs_?_settings';\n\nconst STORAGE_TYPE_LOCAL = 'localStorage';\nconst STORAGE_TYPE_SESSION = 'sessionStorage';\nconst LAST_BITRATE = 'LastBitrate';\nconst LAST_MEDIA_SETTINGS = 'LastMediaSettings';\n\nfunction DOMStorage(config) {\n\n    config = config || {};\n    const context = this.context;\n    const mediaPlayerModel = config.mediaPlayerModel;\n\n    let instance,\n        logger,\n        supported;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        translateLegacyKeys();\n    }\n\n    //type can be local, session\n    function isSupported(type) {\n        if (supported !== undefined) return supported;\n\n        supported = false;\n\n        const testKey = '1';\n        const testValue = '1';\n        let storage;\n\n        try {\n            if (typeof window !== 'undefined') {\n                storage = window[type];\n            }\n        } catch (error) {\n            logger.warn('DOMStorage access denied: ' + error.message);\n            return supported;\n        }\n\n        if (!storage || (type !== STORAGE_TYPE_LOCAL && type !== STORAGE_TYPE_SESSION)) {\n            return supported;\n        }\n\n        /* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.\n         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an\n\n         Check if the storage can be used\n         */\n        try {\n            storage.setItem(testKey, testValue);\n            storage.removeItem(testKey);\n            supported = true;\n        } catch (error) {\n            logger.warn('DOMStorage is supported, but cannot be used: ' + error.message);\n        }\n\n        return supported;\n    }\n\n    function translateLegacyKeys() {\n        if (isSupported(STORAGE_TYPE_LOCAL)) {\n            legacyKeysAndReplacements.forEach(entry => {\n                const value = localStorage.getItem(entry.oldKey);\n\n                if (value) {\n                    localStorage.removeItem(entry.oldKey);\n\n                    try {\n                        localStorage.setItem(entry.newKey, value);\n                    } catch (e) {\n                        logger.error(e.message);\n                    }\n                }\n            });\n        }\n    }\n\n    // Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user\n    function getTimestamp() {\n        const ten_minutes_ms = 60 * 1000 * 10;\n        return Math.round(new Date().getTime() / ten_minutes_ms) * ten_minutes_ms;\n    }\n\n    function canStore(storageType, key) {\n        return isSupported(storageType) && mediaPlayerModel['get' + key + 'CachingInfo']().enabled;\n    }\n\n    function checkConfig() {\n        if (!mediaPlayerModel || !mediaPlayerModel.hasOwnProperty('getLastMediaSettingsCachingInfo')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getSavedMediaSettings(type) {\n        checkConfig();\n        //Checks local storage to see if there is valid, non-expired media settings\n        if (!canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) return null;\n\n        let settings = null;\n        const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n        try {\n            const obj = JSON.parse(localStorage.getItem(key)) || {};\n            const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastMediaSettingsCachingInfo().ttl || false;\n            settings = obj.settings;\n\n            if (isExpired) {\n                localStorage.removeItem(key);\n                settings = null;\n            }\n        } catch (e) {\n            return null;\n        }\n        return settings;\n    }\n\n    function getSavedBitrateSettings(type) {\n        let savedBitrate = NaN;\n\n        checkConfig();\n\n        //Checks local storage to see if there is valid, non-expired bit rate\n        //hinting from the last play session to use as a starting bit rate.\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE)) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                const obj = JSON.parse(localStorage.getItem(key)) || {};\n                const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= mediaPlayerModel.getLastMediaSettingsCachingInfo().ttl || false;\n                const bitrate = parseFloat(obj.bitrate);\n\n                if (!isNaN(bitrate) && !isExpired) {\n                    savedBitrate = bitrate;\n                    logger.debug('Last saved bitrate for ' + type + ' was ' + bitrate);\n                } else if (isExpired) {\n                    localStorage.removeItem(key);\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n        return savedBitrate;\n    }\n\n    function setSavedMediaSettings(type, value) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) {\n            const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({settings: value, timestamp: getTimestamp()}));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    function setSavedBitrateSettings(type, bitrate) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE) && bitrate) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({bitrate: bitrate.toFixed(3), timestamp: getTimestamp()}));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    instance = {\n        getSavedBitrateSettings: getSavedBitrateSettings,\n        setSavedBitrateSettings: setSavedBitrateSettings,\n        getSavedMediaSettings: getSavedMediaSettings,\n        setSavedMediaSettings: setSavedMediaSettings\n    };\n\n    setup();\n    return instance;\n}\n\nDOMStorage.__dashjs_factory_name = 'DOMStorage';\nconst factory = FactoryMaker.getSingletonFactory(DOMStorage);\nexport default factory;\n","import FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * Creates an instance of an EBMLParser class which implements a large subset\n * of the functionality required to parse Matroska EBML\n *\n * @param {Object} config object with data member which is the buffer to parse\n */\nfunction EBMLParser(config) {\n\n    config = config || {};\n    let instance;\n\n    let data = new DataView(config.data);\n    let pos = 0;\n\n    function getPos() {\n        return pos;\n    }\n\n    function setPos(value) {\n        pos = value;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformed.\n     * @memberof EBMLParser\n     */\n    function consumeTag(tag, test) {\n        let found = true;\n        let bytesConsumed = 0;\n        let p1,\n            p2;\n\n        if (test === undefined) {\n            test = false;\n        }\n\n        if (tag.tag > 0xFFFFFF) {\n            if (data.getUint32(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 4;\n        } else if (tag.tag > 0xFFFF) {\n            // 3 bytes\n            p1 = data.getUint16(pos);\n            p2 = data.getUint8(pos + 2);\n\n            // shift p1 over a byte and add p2\n            if (p1 * 256 + p2 !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 3;\n        } else if (tag.tag > 0xFF) {\n            if (data.getUint16(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 2;\n        } else {\n            if (data.getUint8(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 1;\n        }\n\n        if (!found && tag.required && !test) {\n            throw new Error('required tag not found');\n        }\n\n        if (found) {\n            pos += bytesConsumed;\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformedata.\n     * @memberof EBMLParser\n     */\n    function consumeTagAndSize(tag, test) {\n        let found = consumeTag(tag, test);\n\n        if (found) {\n            getMatroskaCodedNum();\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to parse a binary\n     * field, using a parser defined in the tag itself\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag,\n     * {boolean} required flag, and a parse function which takes a size parameter\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found,\n     * or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function parseTag(tag) {\n        let size;\n\n        consumeTag(tag);\n        size = getMatroskaCodedNum();\n        return instance[tag.parse](size);\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to skip over the\n     * entire section of EBML encapsulated by the tag.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag, and\n     * {boolean} required flag\n     * @param {boolean} test a flag to indicate if an exception should be thrown\n     * if a required tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test is\n     * false or undefined or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function skipOverElement(tag, test) {\n        let found = consumeTag(tag, test);\n        let headerSize;\n\n        if (found) {\n            headerSize = getMatroskaCodedNum();\n            pos += headerSize;\n        }\n\n        return found;\n    }\n\n    /**\n     * Returns and consumes a number encoded according to the Matroska EBML\n     * specification from the bitstream.\n     *\n     * @param {boolean} retainMSB whether or not to retain the Most Significant Bit (the\n     * first 1). this is usually true when reading Tag IDs.\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaCodedNum(retainMSB) {\n        let bytesUsed = 1;\n        let mask = 0x80;\n        let maxBytes = 8;\n        let extraBytes = -1;\n        let num = 0;\n        let ch = data.getUint8(pos);\n        let i = 0;\n\n        for (i = 0; i < maxBytes; i += 1) {\n            if ((ch & mask) === mask) {\n                num = (retainMSB === undefined) ? ch & ~mask : ch;\n                extraBytes = i;\n                break;\n            }\n            mask >>= 1;\n        }\n\n        for (i = 0; i < extraBytes; i += 1, bytesUsed += 1) {\n            num = (num << 8) | (0xff & data.getUint8(pos + bytesUsed));\n        }\n\n        pos += bytesUsed;\n\n        return num;\n    }\n\n    /**\n     * Returns and consumes a float from the bitstream.\n     *\n     * @param {number} size 4 or 8 byte floats are supported\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaFloat(size) {\n        let outFloat;\n\n        switch (size) {\n        case 4:\n            outFloat = data.getFloat32(pos);\n            pos += 4;\n            break;\n        case 8:\n            outFloat = data.getFloat64(pos);\n            pos += 8;\n            break;\n        }\n        return outFloat;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaUint(size) {\n        let val = 0;\n\n        for (let i = 0; i < size; i += 1) {\n            val <<= 8;\n            val |= data.getUint8(pos + i) & 0xff;\n        }\n\n        pos += size;\n        return val;\n    }\n\n    /**\n     * Tests whether there is more data in the bitstream for parsing\n     *\n     * @return {boolean} whether there is more data to parse\n     * @memberof EBMLParser\n     */\n    function moreData() {\n        return pos < data.byteLength;\n    }\n\n    instance = {\n        getPos: getPos,\n        setPos: setPos,\n        consumeTag: consumeTag,\n        consumeTagAndSize: consumeTagAndSize,\n        parseTag: parseTag,\n        skipOverElement: skipOverElement,\n        getMatroskaCodedNum: getMatroskaCodedNum,\n        getMatroskaFloat: getMatroskaFloat,\n        getMatroskaUint: getMatroskaUint,\n        moreData: moreData\n    };\n\n    return instance;\n}\n\nEBMLParser.__dashjs_factory_name = 'EBMLParser';\nexport default FactoryMaker.getClassFactory(EBMLParser);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    function mssError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mssError', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError,\n        mssError: mssError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nFactoryMaker.updateSingletonFactory(ErrorHandler.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const representationId = chunk.representationId;\n\n        data[id] = data[id] || {};\n        data[id][representationId] = chunk;\n    }\n\n    function extract (streamId, representationId) {\n        if (data && data[streamId] && data[streamId][representationId]) {\n            return data[streamId][representationId];\n        } else {\n            return null;\n        }\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile;\n\n    /**\n    * @param {string} type\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') return null;\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n    * @param {string} type\n    * @returns {Array|null} array of {@link IsoBox}\n    * @memberof IsoFile#\n    */\n    function getBoxes(type) {\n        let boxes = [];\n\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\n            return boxes;\n        }\n\n        let boxData = parsedIsoFile.fetchAll(type);\n        let box;\n\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n    * @param {string} value\n    * @memberof IsoFile#\n    */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n    * @returns {IsoBox|null}\n    * @memberof IsoFile#\n    */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) return null;\n\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        let boxes = getBoxes(type);\n\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) return null;\n\n        let box = new IsoBox(boxData);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox\n    };\n\n    return instance;\n}\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @param {Object} config\n * @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}\n * @constructor\n */\nfunction LiveEdgeFinder(config) {\n\n    config = config || {};\n    let instance;\n    let timelineConverter = config.timelineConverter;\n    let streamProcessor = config.streamProcessor;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('getExpectedLiveEdge') || !streamProcessor || !streamProcessor.hasOwnProperty('getCurrentRepresentationInfo')) {\n            throw new Error('Missing config parameter(s)');\n        }\n    }\n\n    function getLiveEdge() {\n        checkConfig();\n        const representationInfo = streamProcessor.getCurrentRepresentationInfo();\n        let liveEdge = representationInfo.DVRWindow.end;\n        if (representationInfo.useCalculatedLiveEdgeTime) {\n            liveEdge = timelineConverter.getExpectedLiveEdge();\n            timelineConverter.setClientTimeOffset(liveEdge - representationInfo.DVRWindow.end);\n        }\n        return liveEdge;\n    }\n\n    function reset() {\n        timelineConverter = null;\n        streamProcessor = null;\n    }\n\n    instance = {\n        getLiveEdge: getLiveEdge,\n        reset: reset\n    };\n\n    return instance;\n}\n\nLiveEdgeFinder.__dashjs_factory_name = 'LiveEdgeFinder';\nexport default FactoryMaker.getClassFactory(LiveEdgeFinder);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport deepEqual from 'fast-deep-equal';\n\n/**\n * @module ObjectUtils\n * @description Provides utility functions for objects\n */\nfunction ObjectUtils() {\n\n    let instance;\n\n    /**\n     * Returns true if objects are equal\n     * @return {boolean}\n     * @param {object} obj1\n     * @param {object} obj2\n     * @memberof module:ObjectUtils\n     * @instance\n     */\n    function areEqual(obj1, obj2) {\n        return deepEqual(obj1, obj2);\n    }\n\n    instance = {\n        areEqual: areEqual\n    };\n\n    return instance;\n}\n\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction RequestModifier() {\n\n    let instance;\n\n    function modifyRequestURL(url) {\n        return url;\n    }\n\n    function modifyRequestHeader(request) {\n        return request;\n    }\n\n    instance = {\n        modifyRequestURL: modifyRequestURL,\n        modifyRequestHeader: modifyRequestHeader\n    };\n\n    return instance;\n}\n\nRequestModifier.__dashjs_factory_name = 'RequestModifier';\nexport default FactoryMaker.getSingletonFactory(RequestModifier);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport { fromXML, generateISD } from 'imsc';\n\nfunction TTMLParser() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    /*\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n     * */\n    let instance,\n        logger;\n\n    let cueCounter = 0; // Used to give every cue a unique ID.\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getCueID() {\n        const id = 'cue_TTML_' + cueCounter;\n        cueCounter++;\n        return id;\n    }\n\n\n    /**\n     * Parse the raw data and process it to return the HTML element representing the cue.\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\n     * @param {string} data - raw data received from the TextSourceBuffer\n     * @param {number} offsetTime - offset time to apply to cue time\n     * @param {integer} startTimeSegment - startTime for the current segment\n     * @param {integer} endTimeSegment - endTime for the current segment\n     * @param {Array} images - images array referenced by subs MP4 box\n     */\n    function parse(data, offsetTime, startTimeSegment, endTimeSegment, images) {\n        let i;\n\n        let errorMsg = '';\n        const captionArray = [];\n        let startTime,\n            endTime;\n\n        const content = {};\n\n        const embeddedImages = {};\n        let currentImageId = '';\n        let accumulated_image_data = '';\n        let metadataHandler = {\n\n            onOpenTag: function (ns, name, attrs) {\n                if (name === 'image' && ns === 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt') {\n                    if (!attrs[' imagetype'] || attrs[' imagetype'].value !== 'PNG') {\n                        logger.warn('smpte-tt imagetype != PNG. Discarded');\n                        return;\n                    }\n                    currentImageId = attrs['http://www.w3.org/XML/1998/namespace id'].value;\n                }\n            },\n\n            onCloseTag: function () {\n                if (currentImageId) {\n                    embeddedImages[currentImageId] = accumulated_image_data.trim();\n                }\n                accumulated_image_data = '';\n                currentImageId = '';\n            },\n\n            onText: function (contents) {\n                if (currentImageId) {\n                    accumulated_image_data = accumulated_image_data + contents;\n                }\n            }\n        };\n\n        if (!data) {\n            errorMsg = 'no ttml data to parse';\n            throw new Error(errorMsg);\n        }\n\n        content.data = data;\n\n        eventBus.trigger(Events.TTML_TO_PARSE, content);\n\n        const imsc1doc = fromXML(content.data, function (msg) {\n            errorMsg = msg;\n        }, metadataHandler);\n\n        eventBus.trigger(Events.TTML_PARSED, {ttmlString: content.data, ttmlDoc: imsc1doc});\n\n        const mediaTimeEvents = imsc1doc.getMediaTimeEvents();\n\n        for (i = 0; i < mediaTimeEvents.length; i++) {\n            let isd = generateISD(imsc1doc, mediaTimeEvents[i], function (error) {\n                errorMsg = error;\n            });\n\n            if (isd.contents.some(topLevelContents => topLevelContents.contents.length)) {\n                //be sure that mediaTimeEvents values are in the mp4 segment time ranges.\n                startTime = (mediaTimeEvents[i] + offsetTime) < startTimeSegment ? startTimeSegment : (mediaTimeEvents[i] + offsetTime);\n                endTime = (mediaTimeEvents[i + 1] + offsetTime) > endTimeSegment ? endTimeSegment : (mediaTimeEvents[i + 1] + offsetTime);\n\n                if (startTime < endTime) {\n                    captionArray.push({\n                        start: startTime,\n                        end: endTime,\n                        type: 'html',\n                        cueID: getCueID(),\n                        isd: isd,\n                        images: images,\n                        embeddedImages: embeddedImages\n                    });\n                }\n            }\n        }\n\n        if (errorMsg !== '') {\n            logger.error(errorMsg);\n            throw new Error(errorMsg);\n        }\n\n        return captionArray;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n    return instance;\n}\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\nexport\ndefault FactoryMaker.getSingletonFactory(TTMLParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * @module URLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const httpsUrlRegex = /^https:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            // this will throw if baseurl is undefined, invalid etc\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        let baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        if (isSchemeRelative(url)) {\n            baseUrlParseFunc = parseScheme;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n              base.charAt(base.length - 1) !== '/' &&\n              url.charAt(0) !== '/' ?\n              '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); //jshint ignore:line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        const matches = url.match(schemeRegex);\n\n        if (matches) {\n            return matches[0];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return url.indexOf('//') === 0;\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return httpsUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nexport default FactoryMaker.getSingletonFactory(URLUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst WEBVTT = 'WEBVTT';\n\nfunction VTTParser() {\n    const context = this.context;\n\n    let instance,\n        logger,\n        regExNewLine,\n        regExToken,\n        regExWhiteSpace,\n        regExWhiteSpaceWordBoundary;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\n        regExToken = /-->/;\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\n    }\n\n    function parse(data) {\n        const captionArray = [];\n        let len,\n            lastStartTime;\n\n        if (!data) {\n            return captionArray;\n        }\n\n        data = data.split( regExNewLine );\n        len = data.length;\n        lastStartTime = -1;\n\n        for (let i = 0 ; i < len; i++) {\n            let item = data[i];\n\n            if (item.length > 0 && item !== WEBVTT) {\n                if (item.match(regExToken)) {\n                    const attributes = parseItemAttributes(item);\n                    const cuePoints = attributes.cuePoints;\n                    const styles = attributes.styles;\n                    const text = getSublines(data, i + 1);\n                    const startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\n                    const endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\n\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\n                        if (text !== '') {\n                            lastStartTime = startTime;\n                            //TODO Make VO external so other parsers can use.\n                            captionArray.push({\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: styles\n                            });\n                        }\n                        else {\n                            logger.error('Skipping cue due to empty/malformed cue text');\n                        }\n                    }\n                    else {\n                        logger.error('Skipping cue due to incorrect cue timing');\n                    }\n                }\n            }\n        }\n\n        return captionArray;\n    }\n\n    function convertCuePointTimes(time) {\n        const timeArray = time.split(':');\n        const len = timeArray.length - 1;\n\n        time = parseInt( timeArray[len - 1], 10 ) * 60 + parseFloat( timeArray[len]);\n\n        if ( len === 2 ) {\n            time += parseInt( timeArray[0], 10 ) * 3600;\n        }\n\n        return time;\n    }\n\n    function parseItemAttributes(data) {\n        const vttCuePoints = data.split(regExToken);\n        const arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\n        arr.shift(); //remove first array index it is empty...\n        vttCuePoints[1] = arr[0];\n        arr.shift();\n        return {cuePoints: vttCuePoints, styles: getCaptionStyles(arr)};\n    }\n\n    function getCaptionStyles(arr) {\n        const styleObject = {};\n        arr.forEach(function (element) {\n            if (element.split(/:/).length > 1) {\n                let val = element.split(/:/)[1];\n                if (val && val.search(/%/) != -1) {\n                    val = parseInt(val.replace(/%/, ''), 10);\n                }\n                if (element.match(/align/) || element.match(/A/)) {\n                    styleObject.align = val;\n                }\n                if (element.match(/line/) || element.match(/L/) ) {\n                    styleObject.line = val;\n                }\n                if (element.match(/position/) || element.match(/P/) ) {\n                    styleObject.position = val;\n                }\n                if (element.match(/size/) || element.match(/S/)) {\n                    styleObject.size = val;\n                }\n            }\n        });\n\n        return styleObject;\n    }\n\n    /*\n    * VTT can have multiple lines to display per cuepoint.\n    */\n    function getSublines(data, idx) {\n        let i = idx;\n\n        let subline = '';\n        let lineData = '';\n        let lineCount;\n\n        while (data[i] !== '' && i < data.length) {\n            i++;\n        }\n\n        lineCount = i - idx;\n        if (lineCount > 1) {\n            for (let j = 0; j < lineCount; j++) {\n                lineData = data[(idx + j)];\n                if (!lineData.match(regExToken)) {\n                    subline += lineData;\n                    if (j !== lineCount - 1) {\n                        subline += '\\n';\n                    }\n                }\n                else {\n                    // caption text should not have '-->' in it\n                    subline = '';\n                    break;\n                }\n            }\n        } else {\n            lineData = data[idx];\n            if (!lineData.match(regExToken))\n                subline = lineData;\n        }\n        return subline;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n    return instance;\n}\nVTTParser.__dashjs_factory_name = 'VTTParser';\nexport default FactoryMaker.getSingletonFactory(VTTParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction BasicSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function select(baseUrls) {\n        let index = 0;\n        let selectedBaseUrl;\n\n        if (baseUrls && baseUrls.some((baseUrl, idx) => {\n            index = idx;\n\n            return (!blacklistController.contains(baseUrl.serviceLocation));\n        })) {\n            selectedBaseUrl = baseUrls[index];\n        }\n\n        return selectedBaseUrl;\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nBasicSelector.__dashjs_factory_name = 'BasicSelector';\nexport default FactoryMaker.getClassFactory(BasicSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker';\n\nfunction DVBSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function getNonBlacklistedBaseUrls(urls) {\n        let removedPriorities = [];\n\n        const samePrioritiesFilter = function (el) {\n            if (removedPriorities.length) {\n                if ((el.dvb_priority) &&\n                        (removedPriorities.indexOf(el.dvb_priority) !== -1)) {\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n        const serviceLocationFilter = function (baseUrl) {\n            if (blacklistController.contains(baseUrl.serviceLocation)) {\n                // whenever a BaseURL is removed from the available list of\n                // BaseURLs, any other BaseURL with the same @priority\n                // value as the BaseURL being removed shall also be removed\n                if (baseUrl.dvb_priority) {\n                    removedPriorities.push(baseUrl.dvb_priority);\n                }\n\n                // all URLs in the list which have a @serviceLocation\n                // attribute matching an entry in the blacklist shall be\n                // removed from the available list of BaseURLs\n                return false;\n            }\n\n            return true;\n        };\n\n        return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);\n    }\n\n    function selectByWeight(availableUrls) {\n        const prioritySorter = function (a, b) {\n            let diff = a.dvb_priority - b.dvb_priority;\n            return isNaN(diff) ? 0 : diff;\n        };\n\n        const topPriorityFilter = function (baseUrl, idx, arr) {\n            return !idx || (\n                (arr[0].dvb_priority && baseUrl.dvb_priority) &&\n                (arr[0].dvb_priority === baseUrl.dvb_priority)\n            );\n        };\n\n        let totalWeight = 0;\n        let cumulWeights = [];\n        let idx = 0;\n        let rn,\n            urls;\n\n        // It shall begin by taking the set of resolved BaseURLs present or inherited at the current\n        // position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest\n        // @priority attribute value.\n        urls = availableUrls.sort(prioritySorter).filter(topPriorityFilter);\n\n        if (urls.length) {\n            if (urls.length > 1) {\n                // If there is more than one BaseURL with this lowest @priority attribute value then the Player\n                // shall select one of them at random such that the probability of each BaseURL being chosen\n                // is proportional to the value of its @weight attribute. The method described in RFC 2782\n                // [26] or picking from a number of weighted entries is suitable for this, but there may be other\n                // algorithms which achieve the same effect.\n\n                // add all the weights together, storing the accumulated weight per entry\n                urls.forEach(baseUrl => {\n                    totalWeight += baseUrl.dvb_weight;\n                    cumulWeights.push(totalWeight);\n                });\n\n                // pick a random number between zero and totalWeight\n                rn = Math.floor(Math.random() * (totalWeight - 1));\n\n                // select the index for the range rn falls within\n                cumulWeights.every((limit, index) => {\n                    idx = index;\n\n                    if (rn < limit) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            }\n\n            return urls[idx];\n        }\n    }\n\n    function select(baseUrls) {\n        return baseUrls && selectByWeight(\n            getNonBlacklistedBaseUrls(\n                baseUrls\n            )\n        );\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nDVBSelector.__dashjs_factory_name = 'DVBSelector';\nexport default FactoryMaker.getClassFactory(DVBSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass BitrateInfo {\n    constructor() {\n        this.mediaType = null;\n        this.bitrate = null;\n        this.width = null;\n        this.height = null;\n        this.scanType = null;\n        this.qualityIndex = NaN;\n    }\n}\n\nexport default BitrateInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport FragmentRequest from './FragmentRequest';\n\nclass HeadRequest extends FragmentRequest {\n    constructor(url) {\n        super();\n        this.url = url || null;\n        this.checkForExistenceOnly = true;\n    }\n}\n\nexport default HeadRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor(boxData) {\n        this.offset = boxData._offset;\n        this.type = boxData.type;\n        this.size = boxData.size;\n        this.boxes = [];\n        if (boxData.boxes) {\n            for (let i = 0; i < boxData.boxes.length; i++) {\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\n            }\n        }\n        this.isComplete = true;\n\n        switch (boxData.type) {\n            case 'sidx':\n                this.timescale = boxData.timescale;\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\n                this.first_offset = boxData.first_offset;\n                this.references = boxData.references;\n                if (boxData.references) {\n                    this.references = [];\n                    for (let i = 0; i < boxData.references.length; i++) {\n                        let reference = {\n                            reference_type: boxData.references[i].reference_type,\n                            referenced_size: boxData.references[i].referenced_size,\n                            subsegment_duration: boxData.references[i].subsegment_duration\n                        };\n                        this.references.push(reference);\n                    }\n                }\n                break;\n            case 'emsg':\n                this.id = boxData.id;\n                this.value = boxData.value;\n                this.timescale = boxData.timescale;\n                this.scheme_id_uri = boxData.scheme_id_uri;\n                this.presentation_time_delta = boxData.presentation_time_delta;\n                this.event_duration = boxData.event_duration;\n                this.message_data = boxData.message_data;\n                break;\n            case 'mdhd':\n                this.timescale = boxData.timescale;\n                break;\n            case 'mfhd':\n                this.sequence_number = boxData.sequence_number;\n                break;\n            case 'subs':\n                this.entry_count = boxData.entry_count;\n                this.entries = boxData.entries;\n                break;\n            case 'tfhd':\n                this.base_data_offset = boxData.base_data_offset;\n                this.sample_description_index = boxData.sample_description_index;\n                this.default_sample_duration = boxData.default_sample_duration;\n                this.default_sample_size = boxData.default_sample_size;\n                this.default_sample_flags = boxData.default_sample_flags;\n                this.flags = boxData.flags;\n                break;\n            case 'tfdt':\n                this.version = boxData.version;\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n                this.flags = boxData.flags;\n                break;\n            case 'trun':\n                this.sample_count = boxData.sample_count;\n                this.first_sample_flags = boxData.first_sample_flags;\n                this.data_offset = boxData.data_offset;\n                this.flags = boxData.flags;\n                this.samples = boxData.samples;\n                if (boxData.samples) {\n                    this.samples = [];\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\n                        let sample = {\n                            sample_size: boxData.samples[i].sample_size,\n                            sample_duration: boxData.samples[i].sample_duration,\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\n                        };\n                        this.samples.push(sample);\n                    }\n                }\n                break;\n        }\n\n    }\n\n    getChildBox(type) {\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                return this.boxes[i];\n            }\n        }\n    }\n\n    getChildBoxes(type) {\n        let boxes = [];\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                boxes.push(this.boxes[i]);\n            }\n        }\n        return boxes;\n    }\n\n}\n\nexport default IsoBox;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBoxSearchInfo {\n    constructor(lastCompletedOffset, found, size) {\n        this.lastCompletedOffset = lastCompletedOffset;\n        this.found = found;\n        this.size = size;\n    }\n}\n\nexport default IsoBoxSearchInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ManifestInfo {\n    constructor() {\n        this.DVRWindowSize = NaN;\n        this.loadedTime = null;\n        this.availableFrom = null;\n        this.minBufferTime = NaN;\n        this.duration = NaN;\n        this.isDynamic = false;\n        this.maxFragmentDuration = null;\n    }\n}\n\nexport default ManifestInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.type = null;\n        this.streamInfo = null;\n        this.representationCount = 0;\n        this.lang = null;\n        this.viewpoint = null;\n        this.accessibility = null;\n        this.audioChannelConfiguration = null;\n        this.roles = null;\n        this.codec = null;\n        this.mimeType = null;\n        this.contentProtection = null;\n        this.isText = false;\n        this.KID = null;\n        this.bitrateList = null;\n    }\n}\n\nexport default MediaInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MetricsList {\n    constructor() {\n        this.TcpList = [];\n        this.HttpList = [];\n        this.RepSwitchList = [];\n        this.BufferLevel = [];\n        this.BufferState = [];\n        this.PlayList = [];\n        this.DroppedFrames = [];\n        this.SchedulingInfo = [];\n        this.DVRInfo = [];\n        this.ManifestUpdate = [];\n        this.RequestsQueue = null;\n        this.DVBErrors = [];\n    }\n}\n\nexport default MetricsList;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RepresentationInfo {\n    constructor() {\n        this.id = null;\n        this.quality = null;\n        this.DVRWindow = null;\n        this.fragmentDuration = null;\n        this.mediaInfo = null;\n        this.MSETimeOffset = null;\n    }\n}\n\nexport default RepresentationInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass StreamInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.start = NaN;\n        this.duration = NaN;\n        this.manifestInfo = null;\n        this.isLast = true;\n    }\n}\n\nexport default StreamInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport Constants from '../constants/Constants';\nimport FragmentRequest from './FragmentRequest';\n\nclass TextRequest extends FragmentRequest {\n    constructor(url, type) {\n        super();\n        this.url = url || null;\n        this.type = type || null;\n        this.mediaType = Constants.STREAM;\n        this.responseType = ''; //'text' value returns a bad encoding response in Firefox\n    }\n}\n\nexport default TextRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass TextTrackInfo {\n    constructor() {\n        this.captionData = null;\n        this.label = null;\n        this.lang = null;\n        this.defaultTrack = false;\n        this.kind = null;\n        this.isFragmented = false;\n        this.isEmbedded = false;\n    }\n}\n\nexport default TextTrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Thumbnail {\n    constructor() {\n        this.url = null;\n        this.width = null;\n        this.height = null;\n        this.x = null;\n        this.y = null;\n    }\n}\n\nexport default Thumbnail;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ThumbnailTrackInfo {\n    constructor() {\n        this.bitrate = 0;\n        this.width = 0;\n        this.height = 0;\n        this.tilesHor = 0;\n        this.tilesVert = 0;\n        this.widthPerTile = 0;\n        this.heightPerTile = 0;\n        this.startNumber = 0;\n        this.segmentDuration = 0;\n        this.timescale = 0;\n        this.templateUrl = '';\n        this.id = '';\n    }\n}\n\nexport default ThumbnailTrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass URIFragmentData {\n    constructor() {\n        this.t = null;\n        this.xywh = null;\n        this.track = null;\n        this.id = null;\n        this.s = null;\n        this.r = null;\n    }\n}\n\nexport default URIFragmentData;\n\n/*\n    From Spec http://www.w3.org/TR/media-frags/\n\n    temporal (t)     - This dimension denotes a specific time range in the original media, such as \"starting at second 10, continuing until second 20\";\n    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as \"a rectangle with size (100,100) with its top-left at coordinate (10,10)\";\n                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):\n    track    (track) - this dimension denotes one or more tracks in the original media, such as \"the english audio and the video track\";\n    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.\n\n\n    ## Note\n    Akamai is purposing to add #s=X to the ISO standard.\n        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge\n        - Allows for seeking back before the start time unlike a temporal clipping.\n*/","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n */\nclass BufferLevel {\n    /**\n     * @description This Object holds reference to the current buffer level and the time it was recorded.\n     */\n    constructor() {\n        /**\n         * Real-Time | Time of the measurement of the buffer level.\n         * @public\n         */\n        this.t = null;\n        /**\n         * Level of the buffer in milliseconds. Indicates the playout duration for which\n         * media data of all active media components is available starting from the\n         * current playout time.\n         * @public\n         */\n        this.level = null;\n    }\n}\n\nexport default BufferLevel;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport BufferController from '../../controllers/BufferController';\n/**\n * @class\n */\nclass BufferState {\n    /**\n     * @description This Object holds reference to the current buffer state of the video element.\n     */\n    constructor() {\n        /**\n         * The Buffer Level Target determined by the BufferLevelRule.\n         * @public\n         */\n        this.target = null;\n        /**\n         * Current buffer state. Will be BufferController.BUFFER_EMPTY or BufferController.BUFFER_LOADED.\n         * @public\n         */\n        this.state = BufferController.BUFFER_EMPTY;\n    }\n}\n\nexport default BufferState;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass DVRInfo {\n    /**\n     * @description This Object holds reference to DVR availability window information.\n     */\n    constructor() {\n\n        /**\n         * The current time of the video element when this was created.\n         * @public\n         */\n        this.time = null;\n        /**\n         * The current Segment Availability Range as an object with start and end properties.\n         * It's delta defined by the timeShiftBufferDepth MPD attribute.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Reference to the internal ManifestInfo.js VO.\n         * @public\n         */\n        this.manifestInfo = null;\n    }\n}\n\nexport default DVRInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass DroppedFrames {\n    /**\n     * @description This Object holds reference to DroppedFrames count and the time it was recorded.\n     */\n    constructor()\n    {\n        /**\n         * Real-Time | Time of the measurement of the dropped frames.\n         * @public\n         */\n        this.time = null;\n        /**\n         * Number of dropped frames\n         * @public\n         */\n        this.droppedFrames = null;\n    }\n}\n\nexport default DroppedFrames;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in milliseconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the manifest update information.\n */\nclass ManifestUpdate {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * MPD Type static | dynamic\n         * @public\n         */\n        this.type = null;\n        /**\n         * When this manifest update was requested\n         * @public\n         */\n        this.requestTime = null;\n        /**\n         * When this manifest update was received\n         * @public\n         */\n        this.fetchTime = null;\n        /**\n         * Calculated Availability Start time of the stream.\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n         * @public\n         */\n        this.presentationStartTime = 0;\n        /**\n         * The calculated difference between the server and client wall clock time\n         * @public\n         */\n        this.clientTimeOffset = 0;\n        /**\n         * Actual element.currentTime\n         * @public\n         */\n        this.currentTime = null;\n        /**\n         * Actual element.ranges\n         * @public\n         */\n        this.buffered = null;\n        /**\n         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)\n         * @public\n         */\n        this.latency = 0;\n        /**\n         * Array holding list of StreamInfo VO Objects\n         * @public\n         */\n        this.streamInfo = [];\n        /**\n         * Array holding list of RepresentationInfo VO Objects\n         * @public\n         */\n        this.representationInfo = [];\n\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current period's stream information when the manifest was updated.\n */\nclass ManifestUpdateStreamInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Stream@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Period Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Stream@start\n         * @public\n         */\n        this.start = null;\n        /**\n         * Stream@duration\n         * @public\n         */\n        this.duration = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current representation's info when the manifest was updated.\n */\nclass ManifestUpdateRepresentationInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Track@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Representation Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Which representation\n         * @public\n         */\n        this.streamIndex = null;\n        /**\n         * Holds reference to @presentationTimeOffset\n         * @public\n         */\n        this.presentationTimeOffset = null;\n        /**\n         * Holds reference to @startNumber\n         * @public\n         */\n        this.startNumber = null;\n        /**\n         * list|template|timeline\n         * @public\n         */\n        this.fragmentInfoType = null;\n    }\n}\n\nexport { ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateRepresentationInfo };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a PlayList from ISO23009-1 Annex D, this Object holds reference to the playback session information\n */\nclass PlayList {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Timestamp of the user action that starts the playback stream...\n         * @public\n         */\n        this.start = null;\n        /**\n         * Presentation time at which playout was requested by the user...\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * Type of user action which triggered playout\n         * - New playout request (e.g. initial playout or seeking)\n         * - Resume from pause\n         * - Other user request (e.g. user-requested quality change)\n         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)\n         * @public\n         */\n        this.starttype = null;\n\n        /**\n         * List of streams of continuous rendering of decoded samples.\n         * @public\n         */\n        this.trace = [];\n    }\n}\n\n/* Public Static Constants */\nPlayList.INITIAL_PLAYOUT_START_REASON = 'initial_playout';\nPlayList.SEEK_START_REASON = 'seek';\nPlayList.RESUME_FROM_PAUSE_START_REASON = 'resume';\nPlayList.METRICS_COLLECTION_START_REASON = 'metrics_collection_start';\n\n/**\n * @classdesc a PlayList.Trace from ISO23009-1 Annex D\n */\nclass PlayListTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * The value of the Representation@id of the Representation from which the samples were taken.\n         * @type {string}\n         * @public\n         */\n        this.representationid = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, subreplevel indicates the greatest value of any\n         * Subrepresentation@level being rendered.\n         * @type {number}\n         * @public\n         */\n        this.subreplevel = null;\n        /**\n         * The time at which the first sample was rendered\n         * @type {number}\n         * @public\n         */\n        this.start = null;\n        /**\n         * The presentation time of the first sample rendered.\n         * @type {number}\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * The duration of the continuously presented samples (which is the same in real time and media time). \"Continuously presented\" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.\n         * @type {number}\n         * @public\n         */\n        this.duration = null;\n        /**\n         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).\n         * @type {number}\n         * @public\n         */\n        this.playbackspeed = null;\n        /**\n         * The reason why continuous presentation of this Representation was stopped.\n         * representation switch\n         * rebuffering\n         * user request\n         * end of Period\n         * end of Stream\n         * end of content\n         * end of a metrics collection period\n         *\n         * @type {string}\n         * @public\n         */\n        this.stopreason = null;\n    }\n}\n\nPlayListTrace.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch';\nPlayListTrace.REBUFFERING_REASON = 'rebuffering';\nPlayListTrace.USER_REQUEST_STOP_REASON = 'user_request';\nPlayListTrace.END_OF_PERIOD_STOP_REASON = 'end_of_period';\nPlayListTrace.END_OF_CONTENT_STOP_REASON = 'end_of_content';\nPlayListTrace.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end';\nPlayListTrace.FAILURE_STOP_REASON = 'failure';\n\nexport { PlayList, PlayListTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass RepresentationSwitch {\n    /**\n     * @description This Object holds reference to the info at quality switch between two representations.\n     */\n    constructor() {\n\n        /**\n         * Time of the switch event.\n         * @public\n         */\n        this.t = null;\n        /**\n         * The media presentation time of the earliest access unit\n         * (out of all media content components) played out from\n         * the Representation.\n         *\n         * @public\n         */\n        this.mt = null;\n        /**\n         * Value of Representation@id identifying the switch-to Representation.\n         * @public\n         */\n        this.to = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, lto indicates the value of SubRepresentation@level within\n         * Representation identifying the switch-to level of the Representation.\n         *\n         * @public\n         */\n        this.lto = null;\n\n    }\n}\n\nexport default RepresentationSwitch;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass RequestsQueue {\n    /**\n     * @description This Object holds reference to Fragment Model's request queues\n     */\n    constructor() {\n\n        /**\n         * Array of all of the requests that have begun to load\n         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.\n         * @public\n         */\n        this.loadingRequests = [];\n        /**\n         * Array of the The requests that have completed\n         * @public\n         */\n        this.executedRequests = [];\n    }\n}\n\nexport default RequestsQueue;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass SchedulingInfo {\n    /**\n     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.\n     */\n    constructor() {\n\n        /**\n         * Type of stream Audio | Video | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Time of the scheduling event.\n         * @public\n         */\n        this.t = null;\n\n        /**\n         * Type of fragment (initialization | media)\n         * @public\n         */\n        this.type = null;\n        /**\n         * Presentation start time of fragment\n         * @public\n         */\n        this.startTime = null;\n        /**\n         * Availability start time of fragment\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * Duration of fragment\n         * @public\n         */\n        this.duration = null;\n        /**\n         * Bit Rate Quality of fragment\n         * @public\n         */\n        this.quality = null;\n        /**\n         * Range of fragment\n         * @public\n         */\n        this.range = null;\n\n        /**\n         * Current state of fragment\n         * @public\n         */\n        this.state = null;\n    }\n}\n\nexport default SchedulingInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n */\nclass TCPConnection {\n    /**\n     * @description This Object holds reference to the current tcp connection\n     */\n    constructor() {\n\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * IP Address of the interface over which the client is receiving the TCP data.\n         * @public\n         */\n        this.dest = null;\n        /**\n         * Real-Time | The time at which the connection was opened (sending time of the initial SYN or connect socket operation).\n         * @public\n         */\n        this.topen = null;\n        /**\n         * Real-Time | The time at which the connection was closed (sending or reception time of FIN or RST or close socket operation).\n         * @public\n         */\n        this.tclose = null;\n        /**\n         * Connect time in ms (time from sending the initial SYN to receiving the ACK or completion of the connect socket operation).\n         * @public\n         */\n        this.tconnect = null;\n\n    }\n}\n\nexport default TCPConnection;"]}